{"version":3,"file":"main.81db2fda1584b4e2.js","mappings":"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","sources":["./src/app/alert/alert.page.ts","./src/app/alert/alert.page.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/categories/categories.page.ts","./src/app/categories/categories.page.html","./src/app/create-quizes.service.ts","./src/app/create/create.page.ts","./src/app/create/create.page.html","./src/app/dashboard.service.ts","./src/app/discover/discover.page.ts","./src/app/discover/discover.page.html","./src/app/googleads.service.ts","./src/app/history/history.component.ts","./src/app/history/history.component.html","./src/app/home/home.page.ts","./src/app/home/home.page.html","./src/app/live-quizes/live-quizes.component.ts","./src/app/live-quizes/live-quizes.component.html","./src/app/loader.service.ts","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/notification-type.enum.ts","./src/app/notification.service.ts","./src/app/ongoing/ongoing.component.ts","./src/app/ongoing/ongoing.component.html","./src/app/profile/profile.page.ts","./src/app/profile/profile.page.html","./src/app/quiz-guard.service.ts","./src/app/quizes/quizes.page.ts","./src/app/quizes/quizes.page.html","./src/app/socket.service.ts","./src/app/toaster.service.ts","./src/app/user-setup/user-setup.page.ts","./src/app/user-setup/user-setup.page.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/verify-quiz/verify-quiz.component.ts","./src/app/verify-quiz/verify-quiz.component.html","./src/app/web.service.ts","./src/environments/environment.prod.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/@stencil/core/internal/client/ lazy ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ strict namespace object"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IonItemSliding } from '@ionic/angular';\nimport { Notification, NotificationService } from '../notification.service';\nimport { NotificationType } from '../notification-type.enum';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.page.html',\n  styleUrls: ['./alert.page.scss'],\n})\nexport class AlertPage implements OnInit {\n  loading = false;\n  unreadNotifications: Notification[] = [];\n  readNotifications: Notification[] = [];\n  segmentValue: 'unread' | 'all' = 'unread';\n  isLoadingNotification:boolean = false\n  constructor(\n    private notificationService: NotificationService,\n    private router: Router,\n  ) { }\n\n  async ngOnInit() {\n    await this.loadNotifications();\n    await this.notificationService.getAllNotifications().toPromise()\n  }\n\n  IsToday_sDateWithTimezone(date: Date | string, timeZone?: string): boolean {\n    const inputDate = typeof date === 'string' ? new Date(date) : date;\n    const today = new Date();\n    \n    // Convert both dates to the same timezone (or local time if no timezone specified)\n    const inputDateStr = inputDate.toLocaleDateString('en-CA', { timeZone });\n    const todayStr = today.toLocaleDateString('en-CA', { timeZone });\n    \n    return inputDateStr === todayStr;\n  }\n\n  private async loadNotifications(): Promise<void> {\n    try {\n      this.isLoadingNotification = true;\n      setTimeout(() => {\n        this.isLoadingNotification = false;\n      }, 2000);\n      this.loading = true;\n      this.notificationService.notifications$.subscribe((allNotifications: Notification[]) => {\n        this.unreadNotifications = allNotifications.filter(n => !n.isRead);\n        this.readNotifications = allNotifications.filter(n => n.isRead);\n      })\n    } catch (error) {\n      console.error('Error loading notifications:', error);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n\n  getNotificationIcon(notification: Notification): string {\n    const type: NotificationType = notification.type;\n    const isRead: boolean = notification.isRead;\n\n    const icons:any = {\n      [NotificationType.QUIZ_INVITATION]: isRead ? 'mail-open' : 'mail-unread',\n      [NotificationType.QUIZ_START]: isRead ? 'play-circle-outline' : 'mail-unread',\n      [NotificationType.QUESTION_READY]: isRead ? 'help-circle-outline' : 'mail-unread',\n      [NotificationType.QUIZ_ENDED]: isRead ? 'mail-open' : 'mail-unread',\n      [NotificationType.RESULTS_AVAILABLE]: isRead ? 'bar-chart-outline' : 'mail-unread',\n      [NotificationType.NEW_LEADER]: isRead ? 'trophy-outline' : 'mail-unread',\n      [NotificationType.ACHIEVEMENT_UNLOCKED]: isRead ? 'ribbon-outline' : 'mail-unread',\n      [NotificationType.ADMIN_ANNOUNCEMENT]: isRead ? 'megaphone-outline' : 'mail-unread',\n      [NotificationType.SYSTEM_ALERT]: isRead ? 'warning-outline': 'mail-unread'\n    };\n\n    return icons[type] || 'notifications';\n  }\n\n  getNotificationColor(type: NotificationType): string {\n    const colors:any = {\n      [NotificationType.QUIZ_INVITATION]: 'primary',\n      [NotificationType.QUIZ_START]: 'success',\n      [NotificationType.QUESTION_READY]: 'warning',\n      [NotificationType.QUIZ_ENDED]: 'tertiary',\n      [NotificationType.RESULTS_AVAILABLE]: 'secondary',\n      [NotificationType.NEW_LEADER]: 'danger',\n      [NotificationType.ACHIEVEMENT_UNLOCKED]: 'success',\n      [NotificationType.ADMIN_ANNOUNCEMENT]: 'danger',\n      [NotificationType.SYSTEM_ALERT]: 'warning'\n    };\n    return colors[type] || 'medium';\n  }\n\n  navigateToactionUrl(actionUrl:String){\n  }\n\n  async viewNotification(notification: Notification) {\n    if (!notification.isRead) {\n      await this.notificationService.markAsRead(notification._id);\n      this.unreadNotifications = this.unreadNotifications.filter(n => n._id !== notification._id);\n      this.readNotifications.unshift({\n        ...notification,\n        isRead: true\n      });\n    }\n    this.navigateToactionUrl(notification.actionUrl)\n  }\n\n  async markAllAsRead(): Promise<void> {\n    const unreadIds = this.unreadNotifications.map(n => n._id);\n    if (unreadIds.length > 0) {\n      await this.notificationService.markAllAsRead();\n      this.unreadNotifications = [];\n      this.readNotifications = [...this.unreadNotifications, ...this.readNotifications];\n    }\n  }\n\n\n  trackByNotificationId(index: number, notification: Notification): string {\n    return notification._id;\n  }\n\n  async doRefresh() {\n    await this.loadNotifications();\n  }\n}","<ion-header>\n  <ion-toolbar>\n    <ion-title>Notifications</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar>\n    <ion-segment [(ngModel)]=\"segmentValue\">\n      <ion-segment-button value=\"unread\">\n        <ion-label>Unread</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"all\">\n        <ion-label>All</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"!loading; else loadingTemplate\">\n    <ion-list *ngIf=\"(segmentValue === 'unread' ? unreadNotifications : readNotifications).length > 0; else emptyTemplate\">\n      <ion-item-sliding *ngFor=\"let notification of (segmentValue === 'unread' ? unreadNotifications : readNotifications); trackBy: trackByNotificationId\">\n        <ion-item (click)=\"viewNotification(notification)\" [detail]=\"false\" [class.unread]=\"!notification.isRead\">\n          <ion-icon \n            slot=\"start\" \n            [name]=\"getNotificationIcon(notification)\" \n            [color]=\"getNotificationColor(notification.type)\">\n          </ion-icon>\n          \n          <ion-label>\n            <h2>{{notification.title}}</h2>\n            <p>{{notification.message}}</p>\n            <p class=\"time\">{{(notification.createdAt | date : IsToday_sDateWithTimezone(notification.createdAt)?(\"shortTime\"):(\"dd MMM, yyyy 'at' hh:mm a\"))}}</p>\n          </ion-label>\n\n          <ion-badge *ngIf=\"!notification.isRead\" slot=\"end\" color=\"danger\">New</ion-badge>\n        </ion-item>\n\n        <ion-item-options side=\"end\">\n          <ion-item-option color=\"primary\" (click)=\"viewNotification(notification)\">\n            <ion-icon slot=\"icon-only\" name=\"eye-outline\"></ion-icon>\n          </ion-item-option>\n        </ion-item-options>\n      </ion-item-sliding>\n    </ion-list>\n\n    <ng-template #emptyTemplate>\n      <div class=\"empty-state\">\n        <ion-icon name=\"notifications-off-outline\"></ion-icon>\n        <h2>No notifications</h2>\n        <p *ngIf=\"segmentValue === 'unread'\">You're all caught up!</p>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loadingTemplate>\n    <div class=\"loading-state\">\n      <ion-spinner name=\"crescent\"></ion-spinner>\n      <p>Loading notifications...</p>\n    </div>\n  </ng-template>\n\n\n</ion-content>","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { LoginPage } from './login/login.component';\nimport { HomePage } from './home/home.page';\nimport { CreatePage } from './create/create.page';\nimport { DiscoverPage } from './discover/discover.page';\nimport { ProfilePage } from './profile/profile.page';\nimport { AlertPage } from './alert/alert.page';\nimport { UserSetupPage } from './user-setup/user-setup.page';\nimport { CategoriesPage } from './categories/categories.page';\nimport { QuizesPage } from './quizes/quizes.page';\nimport { authGuard, loginGuard } from './auth.guard';\nimport { VerifyQuizComponent } from './verify-quiz/verify-quiz.component';\nimport { UsersComponent } from './users/users.component';\nimport { LiveQuizesComponent } from './live-quizes/live-quizes.component';\nimport { OngoingComponent } from './ongoing/ongoing.component';\nimport { QuizGuardService } from './quiz-guard.service'; // Import the guard\nimport { HistoryComponent } from './history/history.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'home',\n    component: HomePage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'create',\n    component: CreatePage,\n    canActivate: [authGuard]\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'discover',\n    component: DiscoverPage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'profile',\n    component: ProfilePage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'alert',\n    component: AlertPage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'setup',\n    component: UserSetupPage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'categories',\n    component: CategoriesPage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'quizes',\n    component: QuizesPage,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'live-quizes',\n    component: LiveQuizesComponent,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'history',\n    component: HistoryComponent,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'users',\n    component: UsersComponent,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'verify-quiz',\n    component: VerifyQuizComponent,\n    canActivate: [authGuard]\n  },\n  {\n    path: 'ongoing',\n    component: OngoingComponent,\n    canActivate: [authGuard],\n    canDeactivate: [QuizGuardService]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules,useHash : true })\n  ],\n  exports: [RouterModule],\n  providers: [QuizGuardService] // Add the guard to providers\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { SocketService } from './socket.service';\nimport { NotificationService } from './notification.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: false,\n})\nexport class AppComponent implements OnInit {\n  showLoader: boolean = false\n  logged: boolean = false\n  notifications$: Observable<number> | number = 0;\n  currentRoute: string = '';\n  constructor(\n    private socketService: SocketService,\n    private router: Router,\n    private notificationService: NotificationService\n\n  ) {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        this.currentRoute = event.url;\n        window.scroll({\n          top: 0,\n          left: 0,\n          behavior: 'smooth'\n        });\n      });\n    if (localStorage.getItem('token')) {\n      this.notificationService.getUnreadNotificationsCount().subscribe((count: number) => {\n        this.notifications$ = count\n      })\n    }\n  }\n\n\n  navigateTopage(page: string) {\n    this.router.navigate([page])\n  }\n\n\n  ngOnInit(): void {\n    this.logged = (localStorage.getItem('token')) ? true : false\n    this.socketService.authData$.subscribe((data: any) => {\n      this.logged = data ? true : false\n    })\n    this.notificationService.notificationsCount$.subscribe((count: number) => {\n      this.notifications$ = count\n    })\n  }\n\n\n}\n","<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n      <!-- Bottom Navigation -->\n      <div class=\"bottom-nav\" *ngIf=\"logged && currentRoute !='/login' && currentRoute != '/ongoing'\">\n        <a (click)=\"navigateTopage('/home')\" class=\"nav-item {{(currentRoute == '/home' || currentRoute == '/live-quizes' || currentRoute == '/quizes' || currentRoute == '/users') ? 'active':''}}\">\n          <i class=\"fas fa-home\"></i>\n          <span>Home</span>\n        </a>\n        <a (click)=\"navigateTopage('/history')\"  class=\"nav-item {{currentRoute == '/history' ? 'active':''}}\">\n          <i class=\"fas fa-map-marked-alt\"></i>\n          <span>History</span>\n        </a>\n        <a (click)=\"navigateTopage('/create')\" class=\"nav-item {{currentRoute == '/create' ? 'active':''}}\">\n          <i class=\"fas fa-plus-circle\"></i>\n          <span>Create</span>\n        </a>\n        <a (click)=\"navigateTopage('/alert')\"  class=\"nav-item {{currentRoute == '/alert' ? 'active':''}}\">\n          <i class=\"fas fa-bell\"></i>\n          <span>Alerts</span>\n          <div class=\"badge\">{{notifications$}}</div>\n        </a>\n        <a  (click)=\"navigateTopage('/profile')\"  class=\"nav-item {{currentRoute == '/profile' ? 'active':''}}\">\n          <i class=\"fas fa-user\"></i>\n          <span>Profile</span>\n        </a>\n      </div>\n      \n  <app-loader *ngIf=\"showLoader\"></app-loader>\n</ion-app>\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoaderComponent } from './loader/loader.component';\nimport { CommonModule } from '@angular/common';\nimport { LoginPage } from './login/login.component';\nimport { GoogleadsService } from './googleads.service';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home/home.page';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { WebService } from './web.service';\nimport { LoaderService } from './loader.service';\nimport { SocketService } from './socket.service';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { CreatePage } from './create/create.page';\nimport { DiscoverPage } from './discover/discover.page';\nimport { ProfilePage } from './profile/profile.page';\nimport { AlertPage } from './alert/alert.page';\nimport { UserSetupPage } from './user-setup/user-setup.page';\nimport { CategoriesPage } from './categories/categories.page';\nimport { QuizesPage } from './quizes/quizes.page';\nimport { VerifyQuizComponent } from './verify-quiz/verify-quiz.component';\nimport { UsersComponent } from './users/users.component';\nimport { LiveQuizesComponent } from './live-quizes/live-quizes.component';\nimport { OngoingComponent } from './ongoing/ongoing.component';\nimport { HistoryComponent } from './history/history.component';\n\nlibrary.add(fas);\n\n@NgModule({\n  declarations: [AppComponent,LoaderComponent,LoginPage,HomePage,CreatePage,DiscoverPage,ProfilePage,AlertPage,UserSetupPage,CategoriesPage,QuizesPage,VerifyQuizComponent,UsersComponent,LiveQuizesComponent,OngoingComponent,HistoryComponent],\n  imports: [CommonModule,BrowserModule,FormsModule,IonicModule, IonicModule.forRoot(), AppRoutingModule,HttpClientModule],\n  providers: [\n    GoogleadsService,\n    LoaderService,\n    WebService,\n    InAppBrowser,\n    SocketService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (socket: SocketService) => () => socket.connect(localStorage.getItem('token') || ''),\n      deps: [SocketService],\n      multi: true\n    },\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { CanActivateFn, Router } from '@angular/router';\nimport { inject } from '@angular/core';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const router = inject(Router);\n  const token = localStorage.getItem('token');\n  \n  if (!token) {\n    return router.navigate(['/login']);\n  }\n  \n  return true;\n};\n\nexport const loginGuard: CanActivateFn = (route, state) => {\n  const token = localStorage.getItem('token')\n  if (!token) {\n    return true\n  }\n  return false;\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.page.html',\n  styleUrls: ['./categories.page.scss'],\n})\nexport class CategoriesPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ion-content [fullscreen]=\"true\" class=\"category-content\">\n  <div class=\"section-title\">\n    <a routerLink=\"/home\" class=\"back-button\">\n      <i class=\"fas fa-chevron-left\"></i> Back\n    </a>\n    <h2>Categories</h2>\n  </div>\n  \n  <div class=\"category-container\">\n    <div class=\"category-n-scroll\">\n      <div class=\"category-card active\">\n        <div class=\"icon-wrapper\">\n          <i class=\"fas fa-calculator\"></i>\n        </div>\n        <h4>Math</h4>\n      </div>\n      <div class=\"category-card\">\n        <div class=\"icon-wrapper\">\n          <i class=\"fas fa-flask\"></i>\n        </div>\n        <h4>Science</h4>\n      </div>\n      <div class=\"category-card\">\n        <div class=\"icon-wrapper\">\n          <i class=\"fas fa-book\"></i>\n        </div>\n        <h4>Literature</h4>\n      </div>\n      <div class=\"category-card\">\n        <div class=\"icon-wrapper\">\n          <i class=\"fas fa-globe-americas\"></i>\n        </div>\n        <h4>Geography</h4>\n      </div>\n      <div class=\"category-card\">\n        <div class=\"icon-wrapper\">\n          <i class=\"fas fa-history\"></i>\n        </div>\n        <h4>History</h4>\n      </div>\n      <!-- Add more categories as needed -->\n    </div>\n  </div>\n</ion-content>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, forkJoin } from 'rxjs';\nimport { SocketService } from './socket.service';\nimport { map, tap } from 'rxjs/operators';\nimport { ToasterService } from './toaster.service';\nimport { Router } from '@angular/router';\n\nexport interface QuizQuestion {\n  _id: string;\n  question: string;\n  options: string[];\n  correctAnswer: string;\n  points: number;\n  explanation?: string;\n  isloading?:boolean\n}\n\nexport interface userSubmissionStatus {\n  isSubmitted : boolean,\n  score : number,\n  status : 'in-progress' | 'completed'\n}\n\nexport interface Quiz {\n  _id: string;\n  title: string;\n  description: string;\n  questions: QuizQuestion[];\n  estimatedTime: number;\n  totalQuestions: number;\n  createdBy: string;\n  source: 'openai' | 'admin-template';\n  category?: string;\n  approvalStatus: string;\n  difficulty?: any;\n  participants?:any[],\n  status?:any,\n  quizId?:any,\n  isLive?:boolean,\n  participantCount?:number\n  host?:any,\n  totalPoints:number,\n  isParticipant:boolean,\n  shuffleQuestions?:boolean,\n  shuffleOptions?:boolean,\n  userSubmissionStatus : userSubmissionStatus\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateQuizesService {\n  // State Subjects\n  private quizDraftSubject$ = new BehaviorSubject<Quiz | null>(null);\n  private quizzesDraftSubject$ = new BehaviorSubject<Quiz[]>([]);\n  private quizzesPublishedSubject$ = new BehaviorSubject<Quiz[]>([]);\n  private quizzesParticipantsSubject$ = new BehaviorSubject<Quiz | null>(null);\n  private activeQuizSubject$ = new BehaviorSubject<Quiz | null>(null);\n  private liveQuizesSubject$ = new BehaviorSubject<Quiz[]>([]);\n  private submittedQuizesSubject$ = new BehaviorSubject<Quiz[]>([]);\n  private quizResultSubject$ = new BehaviorSubject<{\n    correct: boolean,\n    explanation?: string,\n    questionId?: string,\n    selectedAnswer?: string\n  } | null>(null);\n  private refreshedQuizes$ = new BehaviorSubject<true | null>(null);\n  isQuizesRefreshed = this.refreshedQuizes$.asObservable();\n\n  // Public Observables\n  public getCurrentDraft$ = this.quizDraftSubject$.asObservable();\n  public getQuizesDraft$ = this.quizzesDraftSubject$.asObservable();\n  public getPublishedQuizes$ = this.quizzesPublishedSubject$.asObservable();\n  public getActiveQuiz$ = this.activeQuizSubject$.asObservable();\n  public liveQuizes$ = this.liveQuizesSubject$.asObservable();\n  public submittedQuizes$ = this.submittedQuizesSubject$.asObservable();\n  public getQuizResults$ = this.quizResultSubject$.asObservable();\n  public getParticipants$ = this.quizzesParticipantsSubject$.asObservable();\n\n  // Value getters for synchronous access\n  get currentDraft(): Quiz | null {\n    return this.quizDraftSubject$.value;\n  }\n\n  get draftQuizzes(): Quiz[] {\n    return this.quizzesDraftSubject$.value;\n  }\n\n  get publishedQuizzes(): Quiz[] {\n    return this.quizzesPublishedSubject$.value;\n  }\n\n  get activeQuiz(): Quiz | null {\n    return this.activeQuizSubject$.value;\n  }\n\n  constructor(private socketService: SocketService,private toastr:ToasterService,private router:Router) {\n    this.setupSocketListeners();\n  }\n\n  async initializeData() {\n    // Load initial data\n    await forkJoin([\n      this.getAllQuiz().toPromise(),\n      this.getActiveQuizes().toPromise(),\n      this.getPublishedQuiz().toPromise()\n    ]).toPromise()\n\n  }\n\n  private setupSocketListeners(): void {\n    // Quiz list updates\n    this.socketService.socket.on('quiz:all:success', (data: { quizes: Quiz[] }) => {\n      this.quizzesDraftSubject$.next(data.quizes);\n    });\n\n    // Published quizzes updates\n    this.socketService.socket.on('quiz:published:success', (data: { quizes: Quiz[] }) => {\n      this.quizzesPublishedSubject$.next(data.quizes);\n    });\n\n    // Individual quiz updates\n    this.socketService.socket.on('quiz:updated', (quiz: Quiz) => {\n      this.updateQuizInState(quiz);\n    });\n\n    // Quiz deletion\n    this.socketService.socket.on('quiz:deleted', (quizId: string) => {\n      this.removeQuizFromState(quizId);\n    });\n\n    // error listners\n    this.socketService.socket.on('quiz:create:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:refreshQuestion:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:published:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:all:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:active:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:get:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:delete:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:publish:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:waiting:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:join:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:start:error', (data) => {\n      this.toastr.success(data.error)\n    });\n    this.socketService.socket.on('quiz:submit:error', (data) => {\n      this.toastr.success(data.error)\n    });\n\n    this.socketService.socket.on('quiz:answer:error', (data) => {\n      this.toastr.success(data.error)\n    });\n\n    this.socketService.socket.on('refreshpage', (data) => {\n      this.refreshedQuizes$.next(true)\n    });\n \n  }\n\n  private updateQuizInState(updatedQuiz: Quiz): void {\n    // Update in drafts if exists\n    const currentDrafts = this.quizzesDraftSubject$.value;\n    const draftIndex = currentDrafts.findIndex(q => q._id === updatedQuiz._id);\n\n    if (draftIndex >= 0) {\n      const updatedDrafts = [...currentDrafts];\n      updatedDrafts[draftIndex] = updatedQuiz;\n      this.quizzesDraftSubject$.next(updatedDrafts);\n    }\n\n    // Update in published if exists\n    const currentPublished = this.quizzesPublishedSubject$.value;\n    const publishedIndex = currentPublished.findIndex(q => q._id === updatedQuiz._id);\n\n    if (publishedIndex >= 0) {\n      const updatedPublished = [...currentPublished];\n      updatedPublished[publishedIndex] = updatedQuiz;\n      this.quizzesPublishedSubject$.next(updatedPublished);\n    }\n\n    // Update active quiz if it's the one being updated\n    if (this.activeQuiz?._id === updatedQuiz._id) {\n      this.activeQuizSubject$.next(updatedQuiz);\n    }\n\n    // Update current draft if it's the one being updated\n    if (this.currentDraft?._id === updatedQuiz._id) {\n      this.quizDraftSubject$.next(updatedQuiz);\n    }\n  }\n\n  private removeQuizFromState(quizId: string): void {\n    // Remove from drafts\n    this.quizzesDraftSubject$.next(\n      this.draftQuizzes.filter(q => q._id !== quizId)\n    );\n\n    // Remove from published\n    this.quizzesPublishedSubject$.next(\n      this.publishedQuizzes.filter(q => q._id !== quizId)\n    );\n\n    // Clear active quiz if it's the one being deleted\n    if (this.activeQuiz?._id === quizId) {\n      this.activeQuizSubject$.next(null);\n    }\n\n    // Clear current draft if it's the one being deleted\n    if (this.currentDraft?._id === quizId) {\n      this.quizDraftSubject$.next(null);\n    }\n  }\n\n  // Public API Methods\n  createQuiz(prompt: string, options?: any): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:create', { prompt, options });\n\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:create:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        this.quizDraftSubject$.next(quiz);\n        // Refresh lists\n        this.getAllQuiz().subscribe();\n        this.getPublishedQuiz().subscribe();\n      })\n    );\n  }\n\n  get limit(): number {\n    let isLimitRoute = ['/home'].includes(this.router.url);\n    return isLimitRoute ? 3 : 0;\n  }\n\n  getAllQuiz(): Observable<Quiz[]> {\n    this.socketService.socket.emit('quiz:all');\n    return this.socketService.fromEvent<{ quizes: Quiz[] }>('quiz:all:success').pipe(\n      map(data => data.quizes),\n      tap(quizzes => this.quizzesDraftSubject$.next(quizzes))\n    );\n  }\n\n  getPublishedQuiz(limit?:number): Observable<Quiz[]> {\n    this.socketService.socket.emit('quiz:published', limit == 0 ? limit : this.limit);\n    return this.socketService.fromEvent<{ quizes: Quiz[] }>('quiz:published:success').pipe(\n      map(data => data.quizes),\n      tap(quizzes => this.quizzesPublishedSubject$.next(quizzes))\n    );\n  }\n\n  getActiveQuizes(limit?:number): Observable<Quiz[]> {\n    this.socketService.socket.emit('quiz:active',  limit == 0 ? limit : this.limit);\n    return this.socketService.fromEvent<{ quizes: Quiz[] }>('quiz:active:success').pipe(\n      map(data => data.quizes),\n      tap(quizzes => this.liveQuizesSubject$.next(quizzes))\n    );\n  }\n\n  getSubmittedQuizes(): Observable<Quiz[]> {\n    this.socketService.socket.emit('quiz:SubmittedQuizes');\n    return this.socketService.fromEvent<{ quizes: Quiz[] }>('quiz:SubmittedQuizes:success').pipe(\n      map(data => data.quizes),\n      tap(quizzes => this.submittedQuizesSubject$.next(quizzes))\n    );\n  }\n\n  getQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:get', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:get:success').pipe(\n      map(data => data.quiz)\n    );\n  }\n\n  getLiveQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('livequiz:get', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('livequiz:get:success').pipe(\n      map(data => data.quiz)\n    );\n  }\n\n  updateQuizStatus(quizId: string, approvalStatus: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:publish', quizId, approvalStatus);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:publish:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        // The socket listeners will handle the state updates\n        this.getAllQuiz().subscribe();\n        this.getPublishedQuiz().subscribe();\n      })\n    );\n  }\n\n  generateNewQuestion(quizId: string, index: number): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:refreshQuestion', quizId, index);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:refreshQuestion:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => this.updateQuizInState(quiz))\n    );\n  }\n\n  deleteQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:delete', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:delete:success').pipe(\n      map(data => data.quiz),\n      tap(() => {\n        // The socket listeners will handle the state updates\n        this.refreshedQuizes$.next(true)\n      })\n    );\n  }\n\n  BeginQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:waiting', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:waiting:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        this.refreshedQuizes$.next(true)\n      })\n    );\n  }\n\n  joinQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:join', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:join:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        this.activeQuizSubject$.next(quiz),\n        this.refreshedQuizes$.next(true)\n      })\n    );\n  }\n\n  startQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:start', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:start:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        this.refreshedQuizes$.next(true)\n      })\n    );\n  }\n\n  submitQuiz(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:submit', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:submit:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n      this.toastr.success('Quiz submitted successfully!');\n        this.refreshedQuizes$.next(true)\n      })\n    );\n  }\n\n  completeQuizByHost(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:completeQuizByHost', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:completeQuizByHost:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => {\n        this.refreshedQuizes$.next(true)\n        this.getAllQuiz().subscribe();\n        this.getPublishedQuiz().subscribe();\n        this.getActiveQuizes().subscribe()\n      })\n    );\n  }\n\n\n  getQuizParticipant(quizId: string): Observable<Quiz> {\n    this.socketService.socket.emit('quiz:participants', quizId);\n    return this.socketService.fromEvent<{ quiz: Quiz }>('quiz:participants:success').pipe(\n      map(data => data.quiz),\n      tap(quiz => this.quizzesParticipantsSubject$.next(quiz))\n    );\n  }\n\n  submitAnswer(quizId:string,questionId: string | any, answer: string): Observable<{\n    correctAnswer:string,\n    isCorrect: boolean,\n    points?: number,\n    currentScore?: number,\n  }> {\n    if (!quizId) {\n      throw new Error('No active quiz');\n    }\n\n    this.socketService.socket.emit('quiz:answer:submit', {\n      quizId: quizId,\n      questionId,\n      answer\n    });\n\n    return this.socketService.fromEvent<{ result: any }>('quiz:answer:success').pipe(\n      map(data => data.result),\n      tap(result => {\n        return result\n      })\n    );\n  }\n\n  clearDraft(): void {\n    this.quizDraftSubject$.next(null);\n  }\n\n  endActiveQuiz(): void {\n    this.activeQuizSubject$.next(null);\n    this.quizResultSubject$.next(null);\n  }\n\n  // Helper method to find a quiz by ID\n  findQuizById(id: string): Quiz | undefined {\n    return [...this.draftQuizzes, ...this.publishedQuizzes].find(q => q._id === id);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { ToasterService } from '../toaster.service';\nimport { NotificationService } from '../notification.service';\nimport { NotificationType } from '../notification-type.enum';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.page.html',\n  styleUrls: ['./create.page.scss'],\n})\nexport class CreatePage implements OnInit {\n  quizPrompt: string = '';\n  quizPromptDraft: string = '';\n  isCreating: boolean = false;\n  waitingMessage: string = \"Generate 10 questions about e.g., Science, History, Movies, etc.\";\n  isLoadingQuizzes: boolean = false;\n\n  private loadingMessages = [\n    \"Analyzing your topic...\",\n    \"Creating engaging questions...\",\n    \"Verifying content accuracy...\",\n    \"Applying difficulty settings...\",\n    \"Quality checking...\",\n  ];\n\n  // Combined observable for view\n  viewModel$: Observable<{\n    currentDraft: Quiz | null;\n    draftQuizzes: Quiz[];\n  }>;\n\n  constructor(\n    private quizService: CreateQuizesService,\n    private toasterService: ToasterService,\n    private router: Router,\n    private notificationService:NotificationService\n  ) {\n    this.viewModel$ = combineLatest([\n      this.quizService.getCurrentDraft$,\n      this.quizService.getQuizesDraft$\n    ]).pipe(\n      map(([currentDraft, draftQuizzes]) => ({ currentDraft, draftQuizzes }))\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadDraftQuizzes();\n  }\n\n  IsAdminTemplate(quiz: Quiz): boolean {\n    return quiz.source?.toLowerCase() === 'admin-template' && \n           quiz.approvalStatus !== 'rejected';\n  }\n\ncreateQuiz(): void {\n  if (!this.validateQuizPrompt()) return;\n\n  this.prepareForQuizCreation();\n  this.startLoadingAnimation();\n  \n  this.quizService.createQuiz(this.quizPromptDraft).subscribe({\n    next: (response) => {\n      this.stopLoadingAnimation(); // Stop progress bar on success\n      this.handleCreationSuccess(response);\n    },\n    error: (err) => {\n      this.stopLoadingAnimation(); // Also stop on error\n      this.handleCreationError(err);\n    }\n  });\n}\n\n\nprivate stopLoadingAnimation(): void {\n  this.isCreating = false;\n  this.quizPrompt = ''\n}\n\nprivate handleCreationSuccess(response: any): void {\n  // Handle successful quiz creation\n  this.waitingMessage = \"\"\n  // You might want to navigate to the quiz page or show success message\n  this.showSuccessMessage('Quiz created successfully!');\n}\n\nprivate showSuccessMessage(message: string): void {\n  // Your success message implementation\n  // Could use Toast, Alert, or Snackbar\n}\n  \n  private handleCreationError(err: any): void {\n    this.isCreating = false;\n    this.quizPrompt = this.quizPromptDraft;\n    this.resetPromptFields();\n    this.toasterService.error('Failed to create quiz. Please try again.');\n    console.error('Quiz creation error:', err);\n  }\n\n  private validateQuizPrompt(): boolean {\n    if (!this.quizPrompt.trim()) {\n      this.toasterService.error('Please enter a quiz topic');\n      return false;\n    }\n    return true;\n  }\n\n  private prepareForQuizCreation(): void {\n    this.quizPromptDraft = this.quizPrompt;\n    this.isCreating = true;\n  }\n\n  private startLoadingAnimation(): void {\n    let counter = 0;\n    const maxMessages = this.loadingMessages.length * 2;\n    \n    const intervalId = setInterval(() => {\n      if (counter >= maxMessages || !this.isCreating) {\n        clearInterval(intervalId);\n        if (this.isCreating) {\n          this.quizPrompt = \"Almost there...\";\n        }\n        return;\n      }\n      \n      this.quizPrompt = this.loadingMessages[counter % this.loadingMessages.length];\n      counter++;\n    }, 3000);\n  }\n\n  cancelQuizGeneration(): void {\n    this.isCreating = false;\n    this.quizPrompt = this.quizPromptDraft;\n    this.resetPromptFields();\n  }\n\n  private resetPromptFields(): void {\n    this.quizPrompt = '';\n    this.quizPromptDraft = '';\n  }\n\n async loadDraftQuizzes() {\n    this.isLoadingQuizzes = true;\n    setTimeout(() => {\n      this.isLoadingQuizzes = false;\n    }, 2000);\n   await this.quizService.getAllQuiz().toPromise()\n  }\n\n  verifyQuiz(quizId: string): void {\n    this.router.navigate(['/verify-quiz'], { \n      queryParams: { id: quizId }\n    });\n  }\n\n  deleteQuiz(quizId: string): void {\n    this.quizService.deleteQuiz(quizId).subscribe({\n      error: (err) => {\n        this.toasterService.error(err.error?.message || 'Failed to delete quiz');\n        console.error('Delete failed:', err);\n      }\n    });\n  }\n\n  trackByQuizId(index: number, quiz: Quiz): string {\n    return quiz._id;\n  }\n}","<ion-content [fullscreen]=\"true\">\n  <div class=\"phone-section {{((viewModel$|async)?.draftQuizzes || []).length > 2 ?'mb-50':''}}\">\n    <!-- Quiz Input Section -->\n    <div class=\"input-container\">\n      <label for=\"quiz-input\" class=\"input-label\">Create your own custom quiz in seconds! Simply provide a topic and number of questions you want in this, and our system will generate a personalized quiz with a variety of questions. Perfect for learning, testing knowledge, or just having fun!</label>\n      <textarea [readOnly]=\"isCreating\" id=\"quiz-input\" [(ngModel)]=\"quizPrompt\" class=\"big-input\"\n        [placeholder]=\"waitingMessage\"></textarea>\n      <button class=\"action-btn reject-btn cancel\" *ngIf=\"isCreating\" slot=\"right\" (click)=\"cancelQuizGeneration()\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" />\n        </svg>\n        Cancel\n      </button>\n    </div>\n\n    <!-- Generate Button -->\n    <button class=\"generate-btn\" (click)=\"createQuiz()\" [disabled]=\"isCreating\">\n      <svg *ngIf=\"!isCreating\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12C2 6.48 6.48 2 12 2M12 16.5V7.5M16.5 12L7.5 12\"\n          stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      </svg>\n      <svg *ngIf=\"isCreating\" class=\"spinner\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <style>\n          .spinner {\n            animation: rotate 1s linear infinite;\n          }\n\n          @keyframes rotate {\n            100% {\n              transform: rotate(360deg);\n            }\n          }\n\n          .spinner__path {\n            stroke-dasharray: 90, 150;\n            stroke-dashoffset: 0;\n            stroke-linecap: round;\n            animation: dash 1.5s ease-in-out infinite;\n          }\n\n          @keyframes dash {\n            0% {\n              stroke-dasharray: 1, 150;\n              stroke-dashoffset: 0;\n            }\n\n            50% {\n              stroke-dasharray: 90, 150;\n              stroke-dashoffset: -35;\n            }\n\n            100% {\n              stroke-dasharray: 90, 150;\n              stroke-dashoffset: -124;\n            }\n          }\n        </style>\n        <circle class=\"spinner__path\" cx=\"12\" cy=\"12\" r=\"8\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" />\n      </svg>\n      Generate Quiz\n    </button>\n\n    <!-- Generated Quizzes Section -->\n    <ng-container *ngIf=\"viewModel$ | async as vm\">\n      <div class=\"autogenerated-quizzes\" *ngIf=\"vm.draftQuizzes.length\">\n        <h2 class=\"section-title\">\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n              stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          </svg>\n          Generated Quizzes\n        </h2>\n\n        <!-- Loading State -->\n        <ng-container *ngIf=\"isLoadingQuizzes\">\n          <div class=\"ph-item\">\n            <div class=\"ph-col-12\">\n              <div class=\"ph-picture\"></div>\n              <div class=\"ph-row\">\n                <div class=\"ph-col-6 big\"></div>\n                <div class=\"ph-col-4 big\"></div>\n                <div class=\"ph-col-2 big\"></div>\n                <div class=\"ph-col-4\"></div>\n                <div class=\"ph-col-8 empty\"></div>\n                <div class=\"ph-col-6\"></div>\n                <div class=\"ph-col-6 empty\"></div>\n                <div class=\"ph-col-12\"></div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n\n        <!-- Quiz List -->\n        <div class=\"quiz-card\" *ngFor=\"let quiz of vm.draftQuizzes; trackBy: trackByQuizId\">\n          <h3 class=\"quiz-title\">\n            {{quiz.title}}\n          </h3>\n          <p class=\"quiz-description\">{{quiz.description}}</p>\n          <div class=\"quiz-meta\">\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              {{ quiz.estimatedTime / 60 }} min\n            </span>\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" />\n              </svg>\n              {{quiz.difficulty}}\n            </span>\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M8 10H8.01M12 10H12.01M16 10H16.01M8 14H8.01M12 14H12.01M16 14H16.01M8 18H8.01M12 18H12.01M16 18H16.01M7 4H17C18.1046 4 19 4.89543 19 6V18C19 19.1046 18.1046 20 17 20H7C5.89543 20 5 19.1046 5 18V6C5 4.89543 5.89543 4 7 4Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              {{quiz.totalQuestions}} Qs\n            </span>\n          </div>\n          <div class=\"quiz-actions\">\n            <ion-chip *ngIf=\"IsAdminTemplate(quiz)\" class=\"difficulty-badge\">\n              template\n            </ion-chip>\n            <button class=\"action-btn\" *ngIf=\"quiz.approvalStatus != 'pending'\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" *ngIf=\"quiz.approvalStatus == 'rejected'\"\n                  stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                <path d=\"M5 13L9 17L19 7\" stroke=\"currentColor\" *ngIf=\"quiz.approvalStatus == 'approved'\"\n                  stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              {{quiz.approvalStatus}}\n            </button>\n            <button class=\"action-btn approve-btn\" *ngIf=\"quiz.approvalStatus == 'pending'\"\n              (click)=\"verifyQuiz(quiz._id)\">\n              Verify\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" />\n              </svg>\n            </button>\n            <button class=\"action-btn delete-btn\" *ngIf=\"quiz.approvalStatus != 'pending'\"\n              (click)=\"deleteQuiz(quiz._id)\">\n              Delete\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z\"\n                  fill=\"currentColor\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- Refresh Button -->\n    <div class=\"floating-action\" (click)=\"loadDraftQuizzes()\">\n      <svg [class.loading]=\"isLoadingQuizzes\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n        viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n        stroke-linejoin=\"round\">\n        <path d=\"M23 4v6h-6\" />\n        <path d=\"M1 20v-6h6\" />\n        <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" />\n      </svg>\n    </div>\n  </div>\n</ion-content>","import { Injectable } from '@angular/core';\nimport { SocketService } from './socket.service';\nimport { Observable, ReplaySubject, filter } from 'rxjs';\nimport { NavigationEnd, Router } from '@angular/router';\n\nexport interface user {\n  _id: string;\n  name: string;\n  email: string;\n  avatar?: any;\n  role: string;\n  isVerified: boolean;\n}\n\nexport class UserStats {\n  correctAnswers: number = 0;\n  points: number = 0;\n  quizzesCreated: number = 0;\n  quizzesHosted: number = 0;\n  rank: number = 0;\n  wrongAnswers: number = 0;\n  streak: {\n    current: number;\n    longest: number;\n    lastUpdated: Date;\n  } = {\n      current: 0,\n      longest: 0,\n      lastUpdated: new Date(0)\n    };\n}\n\nexport class LeaderboardUser {\n  userId: string = '';\n  name: string = '';\n  avatar: string = '';\n  points: number = 0;\n  rank: number = 0;\n  streak: number = 0;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  private userStatsSubject = new ReplaySubject<UserStats | null>(1);\n  getUserStats$ = this.userStatsSubject.asObservable()\n  private leaderboardSubject = new ReplaySubject<LeaderboardUser[]>(1);\n  public leaderboard$ = this.leaderboardSubject.asObservable();\n\n  constructor(private socketService: SocketService, private router: Router) { }\n\n  getDashboardStats() {\n    this.socketService.socket.emit('dashboard:stats:get');\n    return new Observable<UserStats>(observer => {\n      const subscription = this.socketService.fromEvent<UserStats>('dashboard:stats:success').subscribe({\n        next: (data: any) => {\n          try {\n            this.userStatsSubject.next(data.stats)\n            observer.next(data.stats);\n          } catch (error) {\n            observer.error('Failed to save stats to localStorage');\n          }\n        },\n        error: (err) => observer.error(err)\n      });\n\n      return () => subscription.unsubscribe();\n    });\n  }\n\n  get limit(): number {\n    let isLimitRoute = ['/home'].includes(this.router.url);\n    return isLimitRoute ? 3 : 0;\n  }\n\n\n  getLeaderboardUser(limit?: number) {\n    this.socketService.socket.emit('dashboard:leaderboardUser:get', limit == 0 ? limit : this.limit);\n    return new Observable<LeaderboardUser[]>(observer => {\n      const subscription = this.socketService.fromEvent<UserStats>('dashboard:leaderboardUser:success').subscribe({\n        next: (data: any) => {\n          try {\n            this.leaderboardSubject.next(data.leaderboard)\n            observer.next(data.leaderboard);\n          } catch (error) {\n            observer.error('Failed to save leaderboard to localStorage');\n          }\n        },\n        error: (err) => observer.error(err)\n      });\n\n      return () => subscription.unsubscribe();\n    });\n  }\n\n  getUser(): user {\n    return JSON.parse(localStorage.getItem('user') || '') as user\n  }\n\n  logout(): void {\n    // Clear local storage on logout\n    localStorage.removeItem('UserStats');\n    localStorage.removeItem('activity');\n    this.socketService.logout();\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.page.html',\n  styleUrls: ['./discover.page.scss'],\n})\nexport class DiscoverPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<ion-content [fullscreen]=\"true\">\n \n</ion-content>","import { Injectable } from '@angular/core';\nimport { AdmobAds, BannerPosition, BannerSize } from 'capacitor-admob-ads'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleadsService {\n\n  constructor() { \n  }\n\n  async loadBannerAds(): Promise<boolean> {\n    // return true\n    try {\n      await  AdmobAds.showBannerAd({\n        adId: environment.BannerAdId,\n        isTesting: true,\n        adSize: BannerSize.BANNER,\n        adPosition: BannerPosition.BOTTOM\n      })\n\n      return true;\n    } catch (err:any) {\n      return false;\n    }\n  }\n\n  async loadInterstitialAd(): Promise<boolean> {\n    try {\n      await AdmobAds.loadInterstitialAd({\n        adId: environment.InterstitialAdsId,\n        isTesting: true,\n      });\n      return true;\n    } catch (err:any) {\n      return false;\n    }\n  }\n\n  async showInterstitialAds(): Promise<boolean> {\n    // return true\n    try {\n      await AdmobAds.showInterstitialAd();\n      return true\n    } catch (err:any) {\n      return false\n    }\n  }\n\n  async loadRewardedVideoAd(): Promise<boolean> {\n    // return true\n    try {\n      await AdmobAds.loadRewardedVideoAd({\n        adId: environment.RewardedVideoAddId,\n        isTesting: true,\n      });\n      return true;\n    } catch (err: any) {\n      return false;\n    }\n  }\n  \n  async showloadRewardedVideoAds(): Promise<boolean> {\n    // return true\n    try {\n      await AdmobAds.showRewardedVideoAd();\n      return true;\n    } catch (err: any) {\n      return false;\n    }\n  }\n\n  \n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { LeaderboardUser, user } from '../dashboard.service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { AuthData, SocketService } from '../socket.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n})\nexport class HistoryComponent implements OnInit, OnDestroy {\n  @Input() submittedQuizes$: Observable<Quiz[]>;\n  @Input() quizParticipants$: Observable<Quiz | null>;\n  @Input() ParentInjected: boolean = false;\n\n  isLoadingQuizzes: boolean = false;\n  openModel: boolean = false;\n  currentUser: user = {\n    _id: \"\",\n    name: \"\",\n    email: \"\",\n    avatar: \"\",\n    role: \"\",\n    isVerified: false\n  };\n\n  // Filter properties\n  searchQuery: string = '';\n  selectedCategory: string = 'all';\n  filteredQuizzes$: Observable<Quiz[]>;\n  categories = [\n    { id: 'all', name: 'All', icon: 'fas fa-layer-group' },\n    { id: 'math', name: 'Math', icon: 'fas fa-calculator' },\n    { id: 'science', name: 'Science', icon: 'fas fa-flask' },\n    { id: 'literature', name: 'Literature', icon: 'fas fa-book' },\n    { id: 'geography', name: 'Geography', icon: 'fas fa-globe-americas' },\n    { id: 'history', name: 'History', icon: 'fas fa-history' }\n  ];\n\n  constructor(\n    private quizService: CreateQuizesService,\n    protected router: Router,\n    private sanitizer: DomSanitizer,\n    private SocketService: SocketService\n  ) {\n    const User: any = localStorage.getItem('user')\n    if (User) {\n      this.currentUser = JSON.parse(User)\n    }\n    if (this.currentUser.avatar) {\n      this.currentUser.avatar = this.makeSafeUrl(this.currentUser.avatar);\n    }\n    this.submittedQuizes$ = this.quizService.submittedQuizes$\n    this.quizParticipants$ = this.quizService.getParticipants$\n\n    // Initialize filtered quizzes\n    this.filteredQuizzes$ = this.submittedQuizes$;\n  }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n    this.setupFiltering();\n    this.quizService.isQuizesRefreshed.subscribe(data => {\n      if (data) {\n        this.loadInitialData();\n      }\n    });\n  }\n\n  // Setup filtering observable\n  private setupFiltering(): void {\n    this.filteredQuizzes$ = this.submittedQuizes$.pipe(\n      map(quizzes => {\n        return this.applyFilters(quizzes);\n      })\n    );\n  }\n\n  // Apply both search and category filters\n  private applyFilters(quizzes: Quiz[]): Quiz[] {\n\n    // Apply category filter\n    if (this.selectedCategory && this.selectedCategory !== 'all') {\n      return quizzes.filter(quiz =>\n        quiz.category?.toLowerCase() === this.selectedCategory.toLowerCase()\n      );\n    }\n\n    // Apply search filter\n    if (this.searchQuery.trim()) {\n      const query = this.searchQuery.toLowerCase().trim();\n      return quizzes.filter(quiz =>\n        quiz.title.toLowerCase().includes(query) \n      );\n    }\n\n    return quizzes\n\n  }\n\n  // Filter quizzes based on current criteria\n  filterQuizzes(): void {\n    this.submittedQuizes$.pipe(\n      map(quizzes => this.applyFilters(quizzes))\n    ).subscribe(filtered => {\n      // This will trigger the async pipe update\n      this.filteredQuizzes$ = of(filtered);\n    });\n  }\n\n  // Select category and filter\n  selectCategory(categoryId: string): void {\n    this.selectedCategory = categoryId;\n    this.filterQuizzes();\n  }\n  async loadInitialData() {\n    this.isLoadingQuizzes = true;\n    setTimeout(() => {\n      this.isLoadingQuizzes = false;\n    }, 2000);\n    await this.quizService.getSubmittedQuizes().toPromise();\n  }\n\n  async getQuizParticipant(quizId: any) {\n    this.SocketService.authDataSource.next(null);\n    await this.quizService.getQuizParticipant(quizId).toPromise();\n  }\n\n  protected makeSafeUrl(url: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  avatarError(event: Event) {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null;\n  }\n\n  // TrackBy functions for ngFor performance\n  trackByQuizId(index: number, quiz: Quiz): string {\n    return quiz._id;\n  }\n\n  showDialog() {\n    this.openModel = true;\n  }\n\n  closeDialog() {\n    let AuthData: AuthData = {\n      token: localStorage.getItem('token') || '',\n      user: JSON.parse(localStorage.getItem('user') || '{}')\n    };\n    this.SocketService.authDataSource.next(AuthData);\n    this.openModel = false;\n  }\n\n  handleAvatarError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null; // Prevent infinite loop\n  }\n\n  trackByUserId(index: number, user: LeaderboardUser): string {\n    return user.userId;\n  }\n\n  async ngOnDestroy() {\n    await this.quizService.getActiveQuizes(3).toPromise();\n  }\n}","  <div class=\"section {{!ParentInjected && 'mb'}}\">\n    <!-- Search bar -->\n\n    <!-- Featured Quizzes -->\n    <div class=\"section-title\">\n      <h2>Submitted Quizzes</h2>\n    </div>\n\n    <div class=\"search-bar\" *ngIf=\"!ParentInjected\">\n      <i class=\"fas fa-search\"></i>\n      <input type=\"text\" placeholder=\"Search quizzes, topics...\" [(ngModel)]=\"searchQuery\" (input)=\"filterQuizzes()\">\n    </div>\n\n    <!-- Category Filter -->\n    <div class=\"category-scroll skeleton-value\" *ngIf=\"!ParentInjected\">\n      <div \n        *ngFor=\"let category of categories\" \n        class=\"category-card\" \n        [class.active]=\"selectedCategory === category.id\"\n        (click)=\"selectCategory(category.id)\"\n      >\n        <div class=\"icon-wrapper\">\n          <i [class]=\"category.icon\"></i>\n        </div>\n        <h4>{{category.name}}</h4>\n      </div>\n    </div>\n\n    <!-- Combined async state for quizzes -->\n    <ng-container *ngIf=\"(filteredQuizzes$ | async) as quizzes;\">\n      <ng-container *ngIf=\"quizzes.length > 0; else noliveQuizzes\">\n        <div *ngFor=\"let quiz of quizzes; trackBy: trackByQuizId\" class=\"quiz-card\">\n          <!-- Quiz card content remains the same -->\n          <div class=\"quiz-header\">\n            <h3 class=\"quiz-title\">\n              {{quiz.title}}\n            </h3>\n            <div class=\"quiz-meta\" *ngIf=\"quiz.participantCount\" (click)=\"showDialog()\">\n              <span class=\"quiz-meta-item\" (click)=\"getQuizParticipant(quiz._id);\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                  <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                </svg>\n                {{quiz.participantCount}}\n              </span>\n            </div>\n          </div>\n          <p class=\"quiz-description\">{{quiz.description}}</p>\n          <div class=\"quiz-meta\">\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              {{ (quiz.estimatedTime / 60) | number : '1.2-2' }} min\n            </span>\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\" />\n              </svg>\n              {{quiz.difficulty}}\n            </span>\n            <span class=\"meta-item\">\n              <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M8 10H8.01M12 10H12.01M16 10H16.01M8 14H8.01M12 14H12.01M16 14H16.01M8 18H8.01M12 18H12.01M16 18H16.01M7 4H17C18.1046 4 19 4.89543 19 6V18C19 19.1046 18.1046 20 17 20H7C5.89543 20 5 19.1046 5 18V6C5 4.89543 5.89543 4 7 4Z\"\n                  stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              {{quiz.totalQuestions}} Qs\n            </span>\n          </div>\n\n          <div class=\"quiz-meta\">\n            <span class=\"meta-item\">\n              <i class=\"fas fa-bolt\"></i>\n              {{quiz.totalPoints}} XP\n            </span>\n          </div>\n\n          <div class=\"quiz-actions\">\n            <ion-chip *ngIf=\"quiz.userSubmissionStatus.isSubmitted\" color=\"success\" class=\"difficulty-badge\">\n              {{ quiz.userSubmissionStatus.status| titlecase }}\n            </ion-chip>\n          </div>\n        </div>\n      </ng-container>\n\n      <ng-template #noliveQuizzes>\n        <img src=\"assets/noQuizes.svg\" alt=\"\" srcset=\"\" loading=\"eager\">\n      </ng-template>\n    </ng-container>\n\n    <!-- Modal content remains the same -->\n    <div class=\"modal-overlay\" *ngIf=\"openModel\">\n      <div class=\"modal\">\n        <article class=\"modal-container\">\n          <header class=\"modal-container-header\">\n            <span class=\"modal-container-title\">\n              {{(quizParticipants$ | async)?.title }}\n            </span>\n            <button class=\"icon-button\" (click)=\"closeDialog()\">\n              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                <path\n                  d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\"\n                  fill=\"currentColor\"></path>\n              </svg>\n            </button>\n          </header>\n\n          <section class=\"modal-container-body rtf\">\n            <ng-container *ngIf=\"quizParticipants$ | async as leaderboardUsers; else leaderboardLoading\">\n              <div *ngIf=\"leaderboardUsers.participants; else emptyLeaderboard\">\n                <div class=\"leaderboard-modal\">\n                  <div class=\"leaderboard-item-modal\"\n                    *ngFor=\"let user of leaderboardUsers.participants; trackBy: trackByUserId; let i = index\"\n                    [class.top-participant]=\"i < 3\">\n                    <div class=\"rank-modal\">{{ i + 1 }}</div>\n                    <div class=\"user-modal\">\n                      <img [src]=\"user.avatar\" crossorigin=\"anonymous\" (error)=\"handleAvatarError($event)\">\n                      <div class=\"user-info-modal\">\n                        <div class=\"name-modal\">{{ user.userId == currentUser._id ? 'You' : user.name}}</div>\n                      </div>\n                    </div>\n\n                    <div class=\"status-modal\">\n                      <span class=\"status-text\">{{ user.score}}</span>\n                    </div>\n                    <i class=\"fas fa-crown crown {{ 'crown-' + (i+1)}}\" *ngIf=\"i < 2\"></i>\n                  </div>\n                </div>\n              </div>\n\n              <ng-template #emptyLeaderboard>\n                <div class=\"ph-item\">\n                  <div class=\"ph-col-12\">\n                    <div class=\"ph-row\">\n                      <div class=\"ph-col-12 big\"></div>\n                      <div class=\"ph-col-12 big\"></div>\n                      <div class=\"ph-col-12 big\"></div>\n                    </div>\n                  </div>\n                </div>\n              </ng-template>\n            </ng-container>\n\n            <ng-template #leaderboardLoading>\n              <div class=\"ph-item\">\n                <div class=\"ph-col-12\">\n                  <div class=\"ph-row\">\n                    <div class=\"ph-col-12 big\"></div>\n                    <div class=\"ph-col-12 big\"></div>\n                    <div class=\"ph-col-12 big\"></div>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </section>\n\n          <footer class=\"modal-container-footer\">\n            <div class=\"host-container\">\n              <div class=\"host-data\">\n                <img *ngIf=\"(quizParticipants$ | async)?.host?.avatar\" [src]=\"(quizParticipants$ | async)?.host?.avatar\"\n                  class=\"host-avatar\" alt=\"Host avatar\" crossorigin=\"anonymous\" (error)=\"handleAvatarError($event)\">\n                <div class=\"hoster\">\n                  <span class=\"host-label\">Hosted by</span>\n                  <span class=\"host-name\">{{ (quizParticipants$ | async)?.host?.name || 'Unknown Host' }}</span>\n                </div>\n              </div>\n            </div>\n          </footer>\n        </article>\n      </div>\n    </div>\n  </div>\n\n  <!-- Refresh Button -->\n  <div class=\"floating-action\" (click)=\"loadInitialData()\">\n    <svg [class.loading]=\"isLoadingQuizzes\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n      viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n      stroke-linejoin=\"round\">\n      <path d=\"M23 4v6h-6\" />\n      <path d=\"M1 20v-6h6\" />\n      <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" />\n    </svg>\n  </div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DashboardService, user } from '../dashboard.service';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Subject, combineLatest, forkJoin, map, takeUntil } from 'rxjs';\nimport { NotificationService } from '../notification.service';\nimport { searchQueryModel } from '../live-quizes/live-quizes.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  searchQueryData: searchQueryModel = {\n    searchQuery: '',\n    selectedCategory: ''\n  }\n  constructor(\n    private dashboardService: DashboardService,\n    private quizService: CreateQuizesService,\n    private sanitizer: DomSanitizer,\n    private notificationService: NotificationService,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.loadInitialData()\n    this.quizService.isQuizesRefreshed.subscribe(data => {\n      if (data) {\n        this.loadInitialData()\n      }\n    })\n  }\n\n  get currentUser(): user {\n    return this.dashboardService.getUser()\n  }\n\n  filterQuizesEvent(searchQueryData: searchQueryModel) {\n    this.searchQueryData = searchQueryData\n  }\n\n  async loadInitialData() {\n    await forkJoin([\n      this.dashboardService.getLeaderboardUser(3),\n      this.quizService.getActiveQuizes(),\n      this.quizService.getPublishedQuiz(),\n      this.quizService.getSubmittedQuizes(),\n      this.notificationService.getUnreadNotificationsCount(),\n      this.dashboardService.getDashboardStats(),\n      this.quizService.initializeData(),\n    ]).toPromise()\n\n\n  }\n\n  protected makeSafeUrl(url: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n\n  avatarError(event: Event) {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null;\n  }\n\n  logout(): void {\n    this.dashboardService.logout();\n  }\n\n  handleRefresh(event: any) {\n    this.loadInitialData()\n  }\n\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}","<ion-content [fullscreen]=\"true\">\n  <!-- Header with user greeting and stats -->\n  <div class=\"homeHeader\">\n    <div class=\"homeHeader-content\">\n      <div class=\"user-greeting\">\n        <h1>Welcome back, {{currentUser.name}}!</h1>\n        <p>Ready to challenge yourself today?</p>\n      </div>\n\n      <img [src]=\"currentUser.avatar\" (click)=\"logout()\" crossorigin=\"anonymous\" class=\"user-avatar\"\n        (error)=\"avatarError($event)\">\n    </div>\n  </div>\n  \n\n  <!-- Main content section -->\n    <app-live-quizes (filterQuizes)=\"filterQuizesEvent($event)\" [ParentInjected]=\"true\"></app-live-quizes>\n    <app-quizes [searchQueryData]=\"searchQueryData\" [ParentInjected]=\"true\" (handleRefresh)=\"handleRefresh($event)\">\n      <!-- Leaderboard using ng-content -->\n      <app-users [ParentInjected]=\"true\"></app-users>\n    </app-quizes>\n\n\n</ion-content>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DashboardService, LeaderboardUser, user } from '../dashboard.service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { AuthData, SocketService } from '../socket.service';\nimport { map } from 'rxjs/operators';\n\nexport interface searchQueryModel {\n  searchQuery: string,\n  selectedCategory: string\n}\n\n@Component({\n  selector: 'app-live-quizes',\n  templateUrl: './live-quizes.component.html',\n  styleUrls: ['./live-quizes.component.scss'],\n})\nexport class LiveQuizesComponent implements OnInit, OnDestroy {\n  @Input() liveQuizes$: Observable<Quiz[]>;\n  @Input() quizParticipants$: Observable<Quiz | null>;\n  @Input() ParentInjected: boolean = false;\n\n  isLoadingQuizzes: boolean = false;\n  openModel: boolean = false;\n\n  // Filter properties\n  searchQuery: string = '';\n  selectedCategory: string = 'all';\n  @Output() filterQuizes: EventEmitter<searchQueryModel> = new EventEmitter<searchQueryModel>()\n  filteredQuizzes$: Observable<Quiz[]>;\n  categories = [\n    { id: 'all', name: 'All', icon: 'fas fa-layer-group' },\n    { id: 'math', name: 'Math', icon: 'fas fa-calculator' },\n    { id: 'science', name: 'Science', icon: 'fas fa-flask' },\n    { id: 'literature', name: 'Literature', icon: 'fas fa-book' },\n    { id: 'geography', name: 'Geography', icon: 'fas fa-globe-americas' },\n    { id: 'history', name: 'History', icon: 'fas fa-history' }\n  ];\n\n  constructor(\n    private quizService: CreateQuizesService,\n    protected router: Router,\n    private sanitizer: DomSanitizer,\n    private SocketService: SocketService,\n    private dashboardService: DashboardService\n  ) {\n    this.liveQuizes$ = this.quizService.liveQuizes$\n    this.quizParticipants$ = this.quizService.getParticipants$\n\n    // Initialize filtered quizzes\n    this.filteredQuizzes$ = this.liveQuizes$;\n  }\n\n  get currentUser(): user {\n    return this.dashboardService.getUser()\n  }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n    this.setupFiltering();\n    this.quizService.isQuizesRefreshed.subscribe(data => {\n      if (data) {\n        this.loadInitialData();\n      }\n    });\n  }\n\n  // Setup filtering observable\n  private setupFiltering(): void {\n    this.filteredQuizzes$ = this.liveQuizes$.pipe(\n      map(quizzes => {\n        return this.applyFilters(quizzes);\n      })\n    );\n  }\n\n  // Apply both search and category filters\n  private applyFilters(quizzes: Quiz[]): Quiz[] {\n\n    // Apply category filter\n    if (this.selectedCategory && this.selectedCategory !== 'all') {\n      return quizzes.filter(quiz =>\n        quiz.category?.toLowerCase() === this.selectedCategory.toLowerCase()\n      );\n    }\n\n    // Apply search filter\n    if (this.searchQuery.trim()) {\n      const query = this.searchQuery.toLowerCase().trim();\n      return quizzes.filter(quiz =>\n        quiz.title.toLowerCase().includes(query) \n      );\n    }\n\n    return quizzes\n\n  }\n\n  // Filter quizzes based on current criteria\n  filterQuizzes(): void {\n\n    this.filterQuizes.emit({ searchQuery: this.searchQuery, selectedCategory: this.selectedCategory })\n    \n    this.liveQuizes$.pipe(\n      map(quizzes => this.applyFilters(quizzes))\n    ).subscribe(filtered => {\n      // This will trigger the async pipe update\n      this.filteredQuizzes$ = of(filtered);\n    });\n  }\n\n  // Select category and filter\n  selectCategory(categoryId: string): void {\n    this.selectedCategory = categoryId;\n    this.filterQuizzes();\n  }\n  async loadInitialData() {\n    this.isLoadingQuizzes = true;\n    setTimeout(() => {\n      this.isLoadingQuizzes = false;\n    }, 2000);\n    await this.quizService.getActiveQuizes().toPromise();\n  }\n\n  async getQuizParticipant(quizId: any) {\n    this.SocketService.authDataSource.next(null);\n    await this.quizService.getQuizParticipant(quizId).toPromise();\n  }\n\n  protected makeSafeUrl(url: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  avatarError(event: Event) {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null;\n  }\n\n  async joinQuiz(quizId: any) {\n    await this.quizService.joinQuiz(quizId).toPromise();\n  }\n\n  async playQuiz(quizId: any) {\n    // Quiz start logic\n    this.SocketService.authDataSource.next(null)\n    this.router.navigate(['/ongoing'], {\n      replaceUrl: true,\n      queryParams: { id: quizId }\n    })\n  }\n\n  // TrackBy functions for ngFor performance\n  trackByQuizId(index: number, quiz: Quiz): string {\n    return quiz._id;\n  }\n\n  showDialog() {\n    this.openModel = true;\n  }\n\n  closeDialog() {\n    let AuthData: AuthData = {\n      token: localStorage.getItem('token') || '',\n      user: JSON.parse(localStorage.getItem('user') || '{}')\n    };\n    this.SocketService.authDataSource.next(AuthData);\n    this.openModel = false;\n  }\n\n  handleAvatarError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null; // Prevent infinite loop\n  }\n\n  trackByUserId(index: number, user: LeaderboardUser): string {\n    return user.userId;\n  }\n\n  async ngOnDestroy() {\n    await this.quizService.getActiveQuizes(3).toPromise();\n  }\n}","<div class=\"section {{ParentInjected && 'mb'}}\">\n  <!-- Search bar -->\n\n  <!-- Featured Quizzes -->\n  <div class=\"section-title\" *ngIf=\"!ParentInjected\">\n    <h2>Live Quizzes</h2>\n    <a *ngIf=\"ParentInjected\" (click)=\"loadInitialData()\" routerLink=\"/live-quizes\">View all <i\n      class=\"fas fa-chevron-right\"></i></a>\n      </div>\n\n  <div class=\"search-bar\">\n    <i class=\"fas fa-search\"></i>\n    <input type=\"text\" placeholder=\"Search quizzes, topics...\" [(ngModel)]=\"searchQuery\" (input)=\"filterQuizzes()\">\n    <i class=\"fas fa-close\" *ngIf=\"searchQuery\" (click)=\"searchQuery = '';filterQuizzes()\"></i>\n  </div>\n\n  <!-- Category Filter -->\n  <div class=\"category-scroll skeleton-value {{!ParentInjected && 'mb-28'}}\">\n    <div \n      *ngFor=\"let category of categories\" \n      class=\"category-card\" \n      [class.active]=\"selectedCategory === category.id\"\n      (click)=\"selectCategory(category.id)\"\n    >\n      <div class=\"icon-wrapper\">\n        <i [class]=\"category.icon\"></i>\n      </div>\n      <h4>{{category.name}}</h4>\n    </div>\n  </div>\n\n    <!-- Featured Quizzes -->\n    <div class=\"section-title\" *ngIf=\"ParentInjected\">\n      <h2>Live Quizzes</h2>\n      <a *ngIf=\"ParentInjected\" (click)=\"loadInitialData()\" routerLink=\"/live-quizes\">View all <i\n        class=\"fas fa-chevron-right\"></i></a>\n        </div>\n\n  <!-- Combined async state for quizzes -->\n  <ng-container *ngIf=\"(filteredQuizzes$ | async) as quizzes;\">\n    <ng-container *ngIf=\"quizzes.length > 0; else noactiveQuizzes\">\n      <div *ngFor=\"let quiz of quizzes; trackBy: trackByQuizId\" class=\"quiz-card\">\n        <!-- Quiz card content remains the same -->\n        <div class=\"quiz-header\">\n          <h3 class=\"quiz-title\">\n            <div class=\"status-badge-container\" [class.waiting]=\"quiz.status == 'waiting'\"\n              [class.live]=\"quiz.status == 'in-progress'\" [class.completed]=\"quiz.status == 'completed'\">\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <!-- Waiting/Live: Double Ring Icon -->\n                <path *ngIf=\"quiz.status !== 'completed'\"\n                  d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\"\n                  fill=\"currentColor\" />\n                <path *ngIf=\"quiz.status !== 'completed'\"\n                  d=\"M12 6C8.69 6 6 8.69 6 12C6 15.31 8.69 18 12 18C15.31 18 18 15.31 18 12C18 8.69 15.31 6 12 6Z\"\n                  fill=\"currentColor\" />\n\n                <!-- Completed: Checkmark Icon -->\n                <path *ngIf=\"quiz.status == 'completed'\" d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n                  fill=\"currentColor\" />\n              </svg>\n              <span class=\"status-text\">\n                {{ quiz.status == 'waiting' ? 'Waiting' :\n                quiz.status == 'in-progress' ? 'LIVE NOW' :\n                'Completed' }}\n              </span>\n            </div>\n            {{quiz.title}}\n          </h3>\n          <div class=\"quiz-meta\" *ngIf=\"quiz.participantCount\" (click)=\"showDialog()\">\n            <span class=\"quiz-meta-item\" (click)=\"getQuizParticipant(quiz._id);\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n              </svg>\n              {{quiz.participantCount}}\n            </span>\n          </div>\n        </div>\n        <p class=\"quiz-description\">{{quiz.description}}</p>\n        <div class=\"quiz-meta\">\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n            </svg>\n            {{ (quiz.estimatedTime / 60) | number : '1.2-2' }} min\n          </span>\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n            {{quiz.difficulty}}\n          </span>\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M8 10H8.01M12 10H12.01M16 10H16.01M8 14H8.01M12 14H12.01M16 14H16.01M8 18H8.01M12 18H12.01M16 18H16.01M7 4H17C18.1046 4 19 4.89543 19 6V18C19 19.1046 18.1046 20 17 20H7C5.89543 20 5 19.1046 5 18V6C5 4.89543 5.89543 4 7 4Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n            </svg>\n            {{quiz.totalQuestions}} Qs\n          </span>\n        </div>\n\n        <div class=\"quiz-meta\">\n          <span class=\"meta-item\">\n            <i class=\"fas fa-bolt\"></i>\n            {{quiz.totalPoints}} XP\n          </span>\n        </div>\n\n        <div class=\"quiz-actions\">\n          <button class=\"action-btn approve-btn\" (click)=\"joinQuiz(quiz.quizId)\" *ngIf=\"quiz.status == 'waiting'\">\n            <ion-icon name=\"people-outline\"></ion-icon>\n            Participate\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>\n          <button class=\"action-btn approve-btn\" (click)=\"playQuiz(quiz.quizId)\"\n            *ngIf=\"quiz.status == 'in-progress' && quiz.isParticipant && !quiz.userSubmissionStatus.isSubmitted\">\n            Start\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>          <ion-chip *ngIf=\"quiz.userSubmissionStatus.isSubmitted\" color=\"success\" class=\"difficulty-badge\">\n            {{ quiz.userSubmissionStatus.status| titlecase }}\n          </ion-chip>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-template #noactiveQuizzes>\n      <img src=\"assets/noQuizes.svg\" alt=\"\" srcset=\"\" loading=\"eager\">\n    </ng-template>\n  </ng-container>\n\n  <!-- Modal content remains the same -->\n  <div class=\"modal-overlay\" *ngIf=\"openModel\">\n    <div class=\"modal\">\n      <article class=\"modal-container\">\n        <header class=\"modal-container-header\">\n          <span class=\"modal-container-title\">\n            {{(quizParticipants$ | async)?.title }}\n          </span>\n          <button class=\"icon-button\" (click)=\"closeDialog()\">\n            <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n              <path\n                d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z\"\n                fill=\"currentColor\"></path>\n            </svg>\n          </button>\n        </header>\n\n        <section class=\"modal-container-body rtf\">\n          <ng-container *ngIf=\"quizParticipants$ | async as leaderboardUsers; else leaderboardLoading\">\n            <div *ngIf=\"leaderboardUsers.participants; else emptyLeaderboard\">\n              <div class=\"leaderboard-modal\">\n                <div class=\"leaderboard-item-modal\"\n                  *ngFor=\"let user of leaderboardUsers.participants; trackBy: trackByUserId; let i = index\"\n                  [class.top-participant]=\"i < 3\">\n                  <div class=\"rank-modal\">{{ i + 1 }}</div>\n                  <div class=\"user-modal\">\n                    <img [src]=\"user.avatar\" crossorigin=\"anonymous\" (error)=\"handleAvatarError($event)\">\n                    <div class=\"user-info-modal\">\n                      <div class=\"name-modal\">{{ user.userId == currentUser._id ? 'You' : user.name}}</div>\n                    </div>\n                  </div>\n\n                               \n                  <div class=\"status-modal\">\n                    <!-- Submitted -->\n                    <svg width=\"24\" height=\"24\" *ngIf=\"user.isSubmitted\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"9\" fill=\"#10B981\" />\n                      <path d=\"M8 12L11 15L16 9\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" />\n                    </svg>\n      \n                    <!-- Pending -->\n                    <svg width=\"24\" height=\"24\" *ngIf=\"!user.isSubmitted\" viewBox=\"0 0 24 24\" fill=\"none\">\n                      <circle cx=\"12\" cy=\"12\" r=\"9\" fill=\"#F59E0B\" />\n                      <path d=\"M12 8V12L15 15\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\" />\n                    </svg>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n            <ng-template #emptyLeaderboard>\n              <div class=\"ph-item\">\n                <div class=\"ph-col-12\">\n                  <div class=\"ph-row\">\n                    <div class=\"ph-col-12 big\"></div>\n                    <div class=\"ph-col-12 big\"></div>\n                    <div class=\"ph-col-12 big\"></div>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </ng-container>\n\n          <ng-template #leaderboardLoading>\n            <div class=\"ph-item\">\n              <div class=\"ph-col-12\">\n                <div class=\"ph-row\">\n                  <div class=\"ph-col-12 big\"></div>\n                  <div class=\"ph-col-12 big\"></div>\n                  <div class=\"ph-col-12 big\"></div>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </section>\n\n        <footer class=\"modal-container-footer\">\n          <div class=\"host-container\">\n            <div class=\"host-data\">\n              <img *ngIf=\"(quizParticipants$ | async)?.host?.avatar\" [src]=\"(quizParticipants$ | async)?.host?.avatar\"\n                class=\"host-avatar\" alt=\"Host avatar\" crossorigin=\"anonymous\" (error)=\"handleAvatarError($event)\">\n              <div class=\"hoster\">\n                <span class=\"host-label\">Hosted by</span>\n                <span class=\"host-name\">{{ (quizParticipants$ | async)?.host?.name || 'Unknown Host' }}</span>\n              </div>\n            </div>\n          </div>\n        </footer>\n      </article>\n    </div>\n  </div>\n</div>\n\n<!-- Refresh Button -->\n<div class=\"floating-action\" (click)=\"loadInitialData()\" *ngIf=\"!ParentInjected\">\n  <svg [class.loading]=\"isLoadingQuizzes\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n    viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n    stroke-linejoin=\"round\">\n    <path d=\"M23 4v6h-6\" />\n    <path d=\"M1 20v-6h6\" />\n    <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" />\n  </svg>\n</div>","// loader.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  private loaderSubject = new BehaviorSubject<boolean>(false);\n  private loggedSubject = new BehaviorSubject<boolean>(false);\n  loggedState = this.loggedSubject.asObservable();\n  loaderState$ = this.loaderSubject.asObservable();\n\n  showLoader() {\n    this.loaderSubject.next(true);\n  }\n\n  hideLoader() {\n    this.loaderSubject.next(false);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent  implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","<div class=\"backdrop\">\n<div class=\"loader-container\">\n    <div class=\"cube-container\">\n        <div class=\"cube\">\n            <!-- Front face -->\n            <div class=\"face front\">\n                <i class=\"fas fa-brain\"></i> <!-- Brain icon for general knowledge -->\n            </div>\n            <!-- Back face -->\n            <div class=\"face back\">\n                <i class=\"fas fa-calculator\"></i> <!-- Calculator icon for mathematics -->\n            </div>\n            <!-- Right face -->\n            <div class=\"face right\">\n                <i class=\"fas fa-flask\"></i> <!-- Flask icon for science -->\n            </div>\n            <!-- Left face -->\n            <div class=\"face left\">\n                <i class=\"fas fa-landmark\"></i> <!-- Landmark icon for history -->\n            </div>\n            <!-- Top face -->\n            <div class=\"face top\">\n                <i class=\"fas fa-book\"></i> <!-- Book icon for literature -->\n            </div>\n            <!-- Bottom face -->\n            <div class=\"face bottom\">\n                <i class=\"fas fa-globe\"></i> <!-- Globe icon for geography -->\n            </div>\n        </div>\n    </div>\n    <div class=\"loading-text\">Loading...</div> <!-- Loading text -->\n</div>\n</div>","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SocketService } from '../socket.service';\nimport { Subject, Subscription, timer } from 'rxjs';\nimport { ModalController } from '@ionic/angular';\nimport { IonModal } from '@ionic/angular';\nimport { ToasterService } from '../toaster.service';\nimport { DashboardService } from '../dashboard.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { CreateQuizesService } from '../create-quizes.service';\n\ninterface OtpDetails {\n  success: boolean;\n  message: string;\n  otpId: string;\n  verificationToken: string;\n  expiresAt: Date;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginPage implements OnInit, OnDestroy {\n  @ViewChild('OTPmodal') otpModal!: IonModal;\n  @ViewChild('errorModal') errorModal!: IonModal;\n  @ViewChild('googleModal') googleModal!: IonModal;\n  @ViewChild('facebookModal') facebookModal!: IonModal;\n  @ViewChild('scrollContainer') scrollContainer!: ElementRef;\n\n  loginForm = {\n    email: '',\n    otp: ''\n  };\n\n  otpDetails?: OtpDetails;\n  errorModalStatus = '';\n  errorMessage = `\n    There was an issue processing your request. Please try one of these solutions:<br><br>\n    <div class=\"main\">\n    <div class=\"error\">1. Check your internet connection</div>\n    <div class=\"error\">2. Retry the operation</div>\n    <div class=\"error\">3. Cancel and use a different email address</div></div>\n  `;\n\n  // State flags\n  continuewith = false;\n  isLoading = false;\n  googleProgress = false;\n  facebookProgress = false;\n  authFailed = false;\n  otpSuccess = false;\n  showOtpModal = false;\n  loginSuccess = false;\n  canResendOtp = false;\n  connectionState = 'disconnected';\n\n  // Timer\n  otpTimer = 120;\n  private timerSubscription?: Subscription;\n  private destroy$ = new Subject<void>();\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private router: Router,\n    private socketService: SocketService,\n    private modalController: ModalController,\n    private toasterService: ToasterService,\n    private dashboardService: DashboardService,\n    private createQuizesService: CreateQuizesService\n  ) { }\n\n  ngOnInit() {\n    this.setupSocketListeners();\n    this.listenForSocialUrls();\n  }\n\n  ngOnDestroy() {\n    this.cleanup();\n  }\n\n  private listenForSocialUrls(): void {\n    this.subscriptions.push(\n      this.socketService.url$.subscribe(({ url }) => {\n        // Handle the URL - it will be automatically opened by the SocketService\n        // You can add additional logic here if needed\n      })\n    );\n  }\n\n  private setupSocketListeners(): void {\n    this.subscriptions.push(\n      this.socketService.connectionState.subscribe(state => {\n        this.connectionState = state;\n      })\n    );\n\n    this.subscriptions.push(\n      this.socketService.authData$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.handleAuthSuccess(data))\n    );\n\n    this.subscriptions.push(\n      this.socketService.otpSuccess$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.handleOtpSuccess(data))\n    );\n\n    this.subscriptions.push(\n      this.socketService.loginData$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.handleLoginResponse(data))\n    );\n\n    this.subscriptions.push(\n      this.socketService.authError$\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(data => this.handleAuthError(data))\n    );\n  }\n\n  async handleAuthSuccess(data: any) {\n    if (!data) return;\n    this.loginSuccess = true;\n    this.isLoading = false;\n    this.resetAuthStates();\n\n    await this.handleSuccessfulLogin(data);\n  }\n\n  private handleOtpSuccess(data: any): void {\n    // this.toasterService.presentToast('Login successful', 3000, 'bottom', 'success');\n    this.loginSuccess = true;\n    this.isLoading = false;\n    this.otpSuccess = true;\n    this.handleSuccessfulLogin(data);\n  }\n\n  async handleLoginResponse(otpDetails: any) {\n    if (!otpDetails) {\n      this.showErrorModal();\n      return;\n    }\n\n    // this.toasterService.presentToast('OTP sent successfully!', 3000, 'bottom', 'success');\n    this.loginSuccess = true;\n    this.startOtpTimer();\n    this.otpDetails = otpDetails;\n    this.showOtpModal = true;\n    this.isLoading = false;\n    this.otpSuccess = false;\n\n    try {\n      await this.otpModal.present();\n      const { data } = await this.otpModal.onDidDismiss();\n\n      if (!data) {\n        this.resetForm();\n      }\n    } catch (error) {\n      console.error('Error presenting OTP modal:', error);\n    }\n  }\n\n  private showErrorModal(): void {\n    this.errorModal.present();\n    this.resetAuthStates();\n    this.authFailed = true;\n  }\n\n  handleAuthError(message: string) {\n    this.toasterService.presentToast(message, 3000, 'bottom', 'danger');\n    setTimeout(() => {\n      if (!this.loginSuccess) {\n        this.resetAuthStates();\n        this.authFailed = true;\n        this.isLoading = false;\n        this.showErrorModal();\n      }\n    }, 1000);\n  }\n\n  async verifyOTP(): Promise<void> {\n    if (!this.validateOtpForm()) return;\n\n    this.isLoading = true;\n    try {\n      await this.socketService.verifyLoginOTP(\n        this.loginForm.email,\n        this.loginForm.otp,\n        this.otpDetails!.verificationToken\n      );\n    } catch (error: any) {\n      this.handleAuthError(error.message);\n    }\n  }\n\n  private validateOtpForm(): boolean {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!this.loginForm.email) {\n      this.toasterService.presentToast('Please enter email', 3000, 'bottom');\n      return false;\n    }\n\n    if (!emailRegex.test(this.loginForm.email)) {\n      this.toasterService.presentToast('Please enter valid email', 3000, 'bottom');\n      return false;\n    }\n\n    if (!this.loginForm.otp) {\n      this.toasterService.presentToast('Invalid OTP', 3000, 'bottom');\n      return false;\n    }\n\n    return true;\n  }\n\n  async login(): Promise<void> {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!this.loginForm.email) {\n      this.toasterService.presentToast('Please enter email', 3000, 'bottom');\n      return;\n    }\n\n    if (!emailRegex.test(this.loginForm.email)) {\n      this.toasterService.presentToast('Please enter valid email', 3000, 'bottom');\n      return;\n    }\n\n    this.authFailed = false;\n    this.isLoading = true;\n    try {\n      await this.socketService.login(this.loginForm.email);\n    } catch (error: any) {\n      this.handleAuthError(error.message);\n    }\n  }\n\n  async loginWithGoogle() {\n    this.resetAuthStates();\n    this.googleProgress = true;\n    this.errorModalStatus = 'auth:google:error';\n\n    try {\n      await this.googleModal.present();\n      this.socketService.initiateGoogleLogin();\n    } catch (error) {\n      this.googleProgress = false;\n      this.handleAuthError('Failed to initiate Google login');\n    }\n  }\n\n  async loginWithFacebook() {\n    this.resetAuthStates();\n    this.facebookProgress = true;\n    this.errorModalStatus = 'auth:facebook:error';\n\n    try {\n      await this.facebookModal.present();\n      this.socketService.initiateFacebookLogin();\n    } catch (error) {\n      this.facebookProgress = false;\n      this.handleAuthError('Failed to initiate Facebook login');\n    }\n  }\n\n  retrySocialLogins(): void {\n    switch (this.errorModalStatus) {\n      case 'auth:google:error':\n        this.loginWithGoogle();\n        break;\n      case 'auth:facebook:error':\n        this.loginWithFacebook();\n        break;\n      default:\n        this.login();\n        break;\n    }\n  }\n\n  private startOtpTimer(): void {\n    this.stopOtpTimer();\n    this.otpTimer = 120;\n    this.canResendOtp = false;\n\n    this.timerSubscription = timer(0, 1000).subscribe(() => {\n      this.otpTimer--;\n      if (this.otpTimer <= 0) {\n        this.stopOtpTimer();\n        this.canResendOtp = true;\n      }\n    });\n  }\n\n  private stopOtpTimer(): void {\n    if (this.timerSubscription) {\n      this.timerSubscription.unsubscribe();\n      this.timerSubscription = undefined;\n    }\n  }\n\n  get formattedTimer(): string {\n    const minutes = Math.floor(this.otpTimer / 60);\n    const seconds = this.otpTimer % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  }\n\n  resendOtp(): void {\n    if (!this.canResendOtp) return;\n\n    this.login();\n    this.startOtpTimer();\n    this.loginForm.otp = \"\";\n  }\n\n  private resetAuthStates(): void {\n    this.isLoading = false;\n    this.googleProgress = false;\n    this.facebookProgress = false;\n    this.authFailed = false;\n    this.otpSuccess = false;\n    this.showOtpModal = false;\n  }\n\n  private resetForm(): void {\n    this.loginForm.email = \"\";\n    this.loginForm.otp = \"\";\n    this.toasterService.dismiss();\n    this.continuewith = false;\n    this.isLoading = false;\n  }\n\n  private async handleSuccessfulLogin(data: any): Promise<void> {\n    await this.closeModal();\n\n    // Load initial data\n    this.dashboardService.getDashboardStats().subscribe();\n    this.dashboardService.getLeaderboardUser().subscribe();\n    this.createQuizesService.initializeData();\n\n    // Navigate to home\n    this.router.navigate(['/home'], {\n      queryParams: { token: data.token },\n      state: { user: data.user }\n    });\n  }\n\n  async closeModal(): Promise<void> {\n    this.showOtpModal = false;\n    try {\n      await this.modalController.dismiss();\n    } catch (error) {\n    }\n  }\n\n  private cleanup(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.stopOtpTimer();\n    this.cleanupSubscriptions();\n  }\n\n  private cleanupSubscriptions(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  // UI Helpers\n  focusInput(): void {\n    this.scrollToShowContent()\n    this.continuewith = true;\n    setTimeout(() => {\n      const inputElement = document.getElementById('input');\n      if (inputElement) {\n        inputElement.focus();\n      }\n    }, 0);\n  }\n\n  scrollToShowContent() {\n    try {\n      const container = this.scrollContainer.nativeElement;\n      const buttonHeight = 50; // Adjust this to your button's actual height\n\n      // Scroll to show content but leave space for the button\n      container.scrollTop = container.scrollHeight - container.clientHeight - buttonHeight;\n    } catch (err) {\n      console.error('Scroll error:', err);\n    }\n  }\n}","<ion-content [fullscreen]=\"true\">\n  <div #scrollContainer class=\"card\">\n    <!-- Logo -->\n    <div class=\"logo\">\n      <img src=\"assets/AppLogo.png\" alt=\"\">\n    </div>\n  \n    <!-- Heading -->\n    <h1>Join Our Quiz App<br> Community</h1>\n    \n    <!-- Subtitle -->\n    <p class=\"subtitle\">\n     Join thousands of players testing their knowledge daily. Track your progress, earn badges, and climb the leaderboards!\n    </p>\n  \n    <div class=\"features\" *ngIf=\"false\">\n      <span class=\"feature\">1000+ Questions</span>\n      <span class=\"feature\">Daily Challenges</span>\n      <span class=\"feature\">Global Leaderboard</span>\n    </div>\n  \n    <!-- Options title -->\n    <p class=\"options-title\">Quick sign up with</p>\n  \n    <!-- Login options -->\n    <div class=\"methods\">\n      <button class=\"btn btn-google\" (click)=\"continuewith = false;loginWithGoogle()\">\n        <div class=\"btn-content\">\n          <i class=\"fab fa-google\"></i>\n          Google\n        </div>\n        <div class=\"arrow\">&rarr;</div>\n      </button>\n      \n      <button class=\"btn btn-facebook\" (click)=\"continuewith = false;loginWithFacebook()\">\n        <div class=\"btn-content\">\n          <i class=\"fab fa-facebook-f\"></i>\n          Facebook\n        </div>\n        <div class=\"arrow\">&rarr;</div>\n      </button>\n      \n      <button class=\"btn btn-email\" (click)=\"focusInput()\">\n        <div class=\"btn-content\">\n          <i class=\"fas fa-envelope\"></i>\n          <span *ngIf=\"!continuewith\">Email</span>\n          <input id=\"input\"  *ngIf=\"continuewith\" type=\"text\" [(ngModel)]=\"loginForm.email\" type=\"email\" placeholder=\"name@gmail.com\" >\n        </div>\n        <div *ngIf=\"!continuewith\" class=\"arrow\">&rarr;</div>\n        <div *ngIf=\"continuewith && false\" class=\"error arrow\">&#33;</div>\n      </button>\n    </div>\n    <button class=\"btn btn-email center\" [disabled]=\"isLoading\" (click)=\"login()\" *ngIf=\"continuewith\">\n      Continue\n      <ion-icon *ngIf=\"!isLoading\" name=\"arrow-forward\" slot=\"end\"></ion-icon>\n      <ion-spinner *ngIf=\"isLoading\" class=\"spinner\" slot=\"end\"></ion-spinner>\n      </button>\n    <!-- Terms and Privacy -->\n    <div class=\"terms\">\n      By joining, you agree to our <a href=\"#\">Quiz Rules</a>, <a href=\"#\">Terms</a>, and confirm you're at least 13 years old. Your progress will be saved to your account.\n    </div>\n    \n \n  \n    <!-- Powered by -->\n    <div class=\"powered\">\n      <ion-icon name=\"newspaper-outline\"></ion-icon>\n      Powered by <span>Ajit Rajbhar</span>\n    </div>\n  </div>\n\n  \n\n  <!-- Google Verification Modal -->\n  <ion-modal #googleModal [initialBreakpoint]=\"0.45\" [breakpoints]=\"[0.45, 0.5]\">\n    <ng-template>\n      <div class=\"verification-container\">\n        <!-- Success State -->\n        <div class=\"success\" *ngIf=\"!authFailed && !googleProgress\">\n          <div class=\"success-animation\">\n            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n            </svg>\n          </div>\n        </div>\n\n        <!-- Failure State -->\n        <div class=\"failure\" *ngIf=\"authFailed\">\n          <div class=\"failure-animation\">\n            <svg class=\"crossmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"crossmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"crossmark__cross\" fill=\"none\" d=\"M16 16 36 36 M36 16 16 36\" />\n            </svg>\n          </div>\n          <p class=\"failure-message\">Authentication Failed</p>\n        </div>\n\n        <!-- Loading State -->\n        <div class=\"loader\" *ngIf=\"googleProgress && !authFailed\">\n          <div class=\"loader-spinner\"></div>\n          <img src=\"assets/google.png\" class=\"loader-icon\" width=\"30px\" alt=\"Google\">\n        </div>\n\n        <!-- Verification Text -->\n        <div class=\"verification-text\">\n          <h3 *ngIf=\"!authFailed\">{{googleProgress ? 'Signing in with Google' : 'Success!'}}</h3>\n          <p *ngIf=\"googleProgress && !authFailed\">Please wait...</p>\n          <p *ngIf=\"authFailed\" [innerHTML]=\"errorMessage\"></p>\n          <p *ngIf=\"!googleProgress && !authFailed\">Logged in successfully</p>\n        </div>\n        \n\n        <!-- Action Buttons (shown only on failure) -->\n        <br>\n        <div class=\"social-login\" *ngIf=\"authFailed\">\n          <div class=\"social-buttons\">\n            <ion-button class=\"social-btn google\" (click)=\"closeModal()\">\n              <ion-icon name=\"close-circle\" slot=\"start\"></ion-icon>\n              Cancel\n            </ion-button>\n            <ion-button class=\"social-btn facebook\" (click)=\"retrySocialLogins()\">\n              <ion-icon name=\"refresh\" slot=\"start\"></ion-icon>\n              Retry\n            </ion-button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ion-modal>\n\n  <!-- Facebook Verification Modal -->\n  <ion-modal #facebookModal [initialBreakpoint]=\"0.45\" [breakpoints]=\"[0.45, 0.5]\">\n    <ng-template>\n      <div class=\"verification-container\">\n        <!-- Success State -->\n        <div class=\"success\" *ngIf=\"!authFailed && !facebookProgress\">\n          <div class=\"success-animation\">\n            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n            </svg>\n          </div>\n        </div>\n\n        <!-- Failure State -->\n        <div class=\"failure\" *ngIf=\"authFailed\">\n          <div class=\"failure-animation\">\n            <svg class=\"crossmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"crossmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"crossmark__cross\" fill=\"none\" d=\"M16 16 36 36 M36 16 16 36\" />\n            </svg>\n          </div>\n          <p class=\"failure-message\">Authentication Failed</p>\n        </div>\n\n        <!-- Loading State -->\n        <div class=\"loader\" *ngIf=\"facebookProgress && !authFailed\">\n          <div class=\"loader-spinner\"></div>\n          <img src=\"assets/facebook.png\" class=\"loader-icon\" width=\"30px\" alt=\"Facebook\">\n        </div>\n\n        <!-- Verification Text -->\n        <div class=\"verification-text\">\n          <h3 *ngIf=\"!authFailed\">{{facebookProgress ? 'Signing in with Facebook' : 'Success!'}}</h3>\n          <p *ngIf=\"facebookProgress && !authFailed\">Please wait...</p>\n          <p *ngIf=\"authFailed\" [innerHTML]=\"errorMessage\"></p>\n          <p *ngIf=\"!facebookProgress && !authFailed\">Logged in successfully</p>\n        </div>\n\n        <!-- Action Buttons (shown only on failure) -->\n        <br>\n        <div class=\"social-login\" *ngIf=\"authFailed\">\n          <div class=\"social-buttons\">\n            <ion-button class=\"social-btn google\" (click)=\"closeModal()\">\n              <ion-icon name=\"close-circle\" slot=\"start\"></ion-icon>\n              Cancel\n            </ion-button>\n            <ion-button class=\"social-btn facebook\" (click)=\"retrySocialLogins()\">\n              <ion-icon name=\"refresh\" slot=\"start\"></ion-icon>\n              Retry\n            </ion-button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ion-modal>\n\n  <!-- Error Modal -->\n  <ion-modal #errorModal [initialBreakpoint]=\"0.75\" [breakpoints]=\"[0.45, 0.5]\">\n    <ng-template>\n      <div class=\"verification-container\">\n        <!-- Failure State -->\n        <div class=\"failure\">\n          <div class=\"failure-animation\">\n            <svg class=\"crossmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"crossmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"crossmark__cross\" fill=\"none\" d=\"M16 16 36 36 M36 16 16 36\" />\n            </svg>\n          </div>\n          <p class=\"failure-message\">Authentication Failed</p>\n        </div>\n\n        <!-- Verification Text -->\n        <div class=\"verification-text\">\n          <p [innerHTML]=\"errorMessage\"></p>\n        </div>\n\n        <!-- Action Buttons (shown only on failure) -->\n        <br>\n        <div class=\"social-login\" *ngIf=\"authFailed\">\n          <div class=\"social-buttons\">\n            <ion-button class=\"social-btn google\" (click)=\"closeModal()\">\n              <ion-icon name=\"close-circle\" slot=\"start\"></ion-icon>\n              Cancel\n            </ion-button>\n            <ion-button class=\"social-btn facebook\" (click)=\"retrySocialLogins()\">\n              <ion-icon name=\"refresh\" slot=\"start\"></ion-icon>\n              Retry\n            </ion-button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </ion-modal>\n\n  <!-- verify otp screen -->\n  <ion-modal #OTPmodal trigger=\"open-verifyModel\" [initialBreakpoint]=\"0.75\" [breakpoints]=\"[0, 0.25, 0.5, 0.75]\">\n    <ng-template>\n      <div class=\"verification-container\" *ngIf=\"otpSuccess\">\n        <!-- Success State -->\n        <div class=\"success\">\n          <div class=\"success-animation\">\n            <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n              <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n              <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n            </svg>\n          </div>\n        </div>\n\n        <div class=\"verification-text\">\n          <h3>Success</h3>\n          <p>Logged in successfully</p>\n        </div>\n      </div>\n\n      <div class=\"otp-container\" *ngIf=\"!otpSuccess && showOtpModal\">\n        <h1>Verify your account</h1>\n        <p class=\"subtitle\">We've sent otp code to <a class=\"resend-link\">{{loginForm.email}}</a></p>\n\n        <div class=\"otp-inputs\">\n          <input [(ngModel)]=\"loginForm.otp\" type=\"text\" class=\"otp-input\">\n        </div>\n\n\n        <button class=\"btn btn-email center\" [disabled]=\"this.loginForm.otp == ''\" (click)=\"verifyOTP()\">\n          Verify\n          <ion-icon *ngIf=\"!isLoading\" name=\"arrow-forward\" slot=\"end\"></ion-icon>\n          <ion-spinner *ngIf=\"isLoading\" class=\"spinner\" slot=\"end\"></ion-spinner>\n          </button>\n\n        <p class=\"resend-text\" *ngIf=\"!canResendOtp\">\n          Resend OTP in <a (click)=\"resendOtp()\" class=\"resend-link\">{{formattedTimer}}</a>\n        </p>\n        <p class=\"resend-text\" *ngIf=\"canResendOtp\">\n          Didn't receive code? <a (click)=\"resendOtp()\" class=\"resend-link\">Resend</a>\n        </p>\n      </div>\n    </ng-template>\n  </ion-modal>\n</ion-content>","// notification-type.enum.ts\nexport enum NotificationType {\n    QUIZ_INVITATION = 'quiz-invitation',       // Invited to join a quiz\n    QUIZ_START = 'quiz-start',                // Quiz is starting\n    QUESTION_READY = 'question-ready',         // Next question is available\n    NEW_QUIZ = 'new-quiz',         // New Quiz is available\n    QUIZ_ENDED = 'quiz-ended',                // Quiz has ended\n    RESULTS_AVAILABLE = 'results-available',  // Results are ready\n    NEW_LEADER = 'new-leader',                // You're now the leader\n    ACHIEVEMENT_UNLOCKED = 'achievement-unlocked', // Earned a badge/achievement\n    ADMIN_ANNOUNCEMENT = 'admin-announcement', // Admin broadcast\n    SYSTEM_ALERT = 'system-alert'             // System notification\n  }","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, map, tap, takeUntil, Subject } from 'rxjs';\nimport { SocketService } from './socket.service';\nimport { ToasterService } from './toaster.service';\nimport { NotificationType } from './notification-type.enum';\n\nexport interface Notification {\n  _id: string;\n  recipient?: string;\n  sender?: string;\n  isBroadcast: boolean;\n  type: NotificationType;\n  title: string;\n  message: string;\n  isRead: boolean;\n  isSeen: boolean;\n  metadata?: any;\n  actionUrl: string;\n  priority: 'low' | 'medium' | 'high';\n  createdAt: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService implements OnDestroy {\n  private notificationSource$ = new BehaviorSubject<Notification[]>([]);\n  private notificationCountSource$ = new BehaviorSubject<number>(0);\n  private destroy$ = new Subject<void>();\n  public notifications$ = this.notificationSource$.asObservable();\n  public notificationsCount$ = this.notificationCountSource$.asObservable();\n  public unreadCount$ = this.notifications$.pipe(\n    map(notifications => notifications.filter(n => !n.isRead).length)\n  );\n\n  constructor(\n    private socketService: SocketService,\n    private toastr: ToasterService\n  ) {\n    this.setupSocketListeners();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private setupSocketListeners(): void {\n    // Success handlers\n\n    this.socketService.socket.on('notification:send:success', (data) => {\n      this.getUnreadNotificationsCount().subscribe()\n      this.getAllNotifications().subscribe()\n      this.showToastNotification(data.notification);\n    });\n\n    this.socketService.socket.on('notification:new', (data) => {\n      this.getUnreadNotificationsCount().subscribe()\n      this.getAllNotifications().subscribe()\n      this.showToastNotification(data.notification);\n    });\n\n    this.socketService.socket.on('notification:broadcast:success', (data) => {\n      this.getUnreadNotificationsCount().subscribe()\n      this.getAllNotifications().subscribe()\n      this.showToastNotification(data.notification);\n    });\n\n    this.socketService.socket.on('notification:read:success', (data) => {\n      this.getUnreadNotificationsCount().subscribe()\n    });\n\n    // Error handlers\n    this.socketService.socket.on('notification:get:error', (data: { error: string }) => {\n      this.toastr.error(data.error);\n    });\n\n    this.socketService.socket.on('notification:send:error', (data: { error: string }) => {\n      this.toastr.error(data.error);\n    });\n\n    this.socketService.socket.on('notification:read:error', (data: { error: string }) => {\n      this.toastr.error(data.error);\n    });\n\n    this.socketService.socket.on('notification:broadcast:error', (data: { error: string }) => {\n      this.toastr.error(data.error);\n    });\n  }\n\n  private showToastNotification(notification: Notification): void {\n    let message = notification.message;\n    const metadata = notification.metadata || {};\n\n    switch (notification.type) {\n      case NotificationType.QUIZ_INVITATION:\n        message = `🎯 You've been invited to \"${metadata.quizTitle || metadata.custom_data || 'a quiz'}\" by ${metadata.inviterName || 'a friend'}!`;\n        break;\n\n      case NotificationType.QUIZ_START:\n        message = `🚀 \"${metadata.quizTitle || metadata.custom_data || 'The quiz'}\" is starting now! Get ready!`;\n        break;\n\n      case NotificationType.QUESTION_READY:\n        message = `❓ New question available in \"${metadata.quizTitle || metadata.custom_data || 'the quiz'}!\"`;\n        break;\n\n      case NotificationType.QUIZ_ENDED:\n        message = `✅ \"${metadata.quizTitle || metadata.custom_data || 'The quiz'}\" has ended. Thanks for playing! 🎉`;\n        break;\n\n      case NotificationType.RESULTS_AVAILABLE:\n        message = `📊 Results for \"${metadata.quizTitle || metadata.custom_data || 'the quiz'}\" are now available!`;\n        break;\n\n      case NotificationType.NEW_LEADER:\n        message = `🏆 You're now the leader in \"${metadata.quizTitle || metadata.custom_data || 'the quiz'}!\" 🎉`;\n        break;\n\n      case NotificationType.ACHIEVEMENT_UNLOCKED:\n        message = `⭐ Achievement unlocked: \"${metadata.achievementName || metadata.custom_data || 'New achievement'}!\" 🎯`;\n        break;\n\n      case NotificationType.ADMIN_ANNOUNCEMENT:\n        message = `📢 Announcement: ${metadata.message || metadata.custom_data || 'New announcement'}`;\n        break;\n\n      case NotificationType.SYSTEM_ALERT:\n        message = `⚠️ System alert: ${metadata.alertMessage || metadata.custom_data || 'System notification'}`;\n        break;\n    }\n\n    this.toastr.success(message);\n  }\n\n  getAllNotifications(): Observable<Notification[]> {\n    this.socketService.socket.emit('notification:get');\n    return this.socketService.fromEvent<{ notifications: Notification[] }>('notification:get:success').pipe(\n      map(data => data.notifications),\n      tap(notifications => this.notificationSource$.next(notifications)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  getUnreadNotificationsCount(): Observable<number> {\n    this.socketService.socket.emit('notification:UnreadNotificationsCount');\n    return this.socketService.fromEvent<{ data: any }>('notification:UnreadNotificationsCount:success').pipe(\n      map(data => data),\n      tap((data: any) => this.notificationCountSource$.next(data)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  sendNotification(recipientId: string, type: NotificationType, message: string, metadata: any, actionUrl: string): void {\n    this.socketService.socket.emit('notification:send', {\n      recipientId: recipientId,\n      type,\n      message,\n      metadata,\n      actionUrl\n    });\n  }\n\n  sendBroadcastNotification(type: NotificationType, message: string, metadata: any, actionUrl: string): void {\n    this.socketService.socket.emit('notification:broadcast', {\n      type,\n      message,\n      metadata,\n      actionUrl\n    });\n  }\n\n  markAsRead(notificationId: string): Observable<string> {\n    this.socketService.socket.emit('notification:read', notificationId);\n    return this.socketService.fromEvent<{ notificationId: string }>('notification:read:success').pipe(\n      map(data => data.notificationId),\n      tap(notificationId => {\n        this.getAllNotifications().subscribe()\n      })\n    );\n  }\n\n  markAllAsRead(): void {\n    const unreadIds = this.notificationSource$.value\n      .filter(n => !n.isRead)\n      .map(n => n._id);\n\n    if (unreadIds.length > 0) {\n      this.socketService.socket.emit('notification:read-all', { notificationIds: unreadIds });\n    }\n  }\n}","import { Component, OnInit, OnDestroy, HostListener, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, BehaviorSubject, Subscription, of, Subject } from 'rxjs';\nimport { switchMap, tap, catchError, map, take, filter } from 'rxjs/operators';\nimport { CreateQuizesService, Quiz, QuizQuestion } from '../create-quizes.service';\nimport { ComponentCanDeactivate } from '../quiz-guard.service';\nimport { AuthData, SocketService } from '../socket.service';\nimport { Location } from '@angular/common';\nimport { App } from '@capacitor/app';\n\n@Component({\n  selector: 'app-ongoing',\n  templateUrl: './ongoing.component.html',\n  styleUrls: ['./ongoing.component.scss'],\n})\nexport class OngoingComponent implements OnInit, OnDestroy, ComponentCanDeactivate {\n  private quizSubject = new BehaviorSubject<Quiz | null>(null);\n  quiz$: Observable<Quiz | null> = this.quizSubject.asObservable();\n  quizId: string = \"\";\n  currentQuestionIndex: number = 0;\n  selectedOptions: number[] = [];\n  remainingTime: number = 0;\n  timerInterval: any;\n  isAdminUser: boolean = false;\n  isLoading: boolean = false;\n  resultPopup: boolean = false;\n  viewAnswer: boolean = false;\n  private loadingStates: boolean[] = [];\n  isQuizActive: boolean = false;\n  private routeChangeSubscription!: Subscription;\n  private deactivateSubject: Subject<boolean> | null = null;\n  confirmationPopup: boolean = false;\n  private backButtonListener: any;\n  correctAnswersCount: number = 0;\n\n  // Computed properties\n  get currentQuestion(): QuizQuestion | undefined {\n    const quiz = this.quizSubject.getValue();\n    return quiz?.questions[this.currentQuestionIndex];\n  }\n\n  get progressPercentage(): number {\n    const quiz = this.quizSubject.getValue();\n    return quiz ? ((this.currentQuestionIndex + 1) / quiz.questions.length) * 100 : 0;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private quizService: CreateQuizesService,\n    private location: Location,\n    private router: Router,\n    private socketService: SocketService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.isQuizActive = true;\n    this.socketService.authDataSource.next(null);\n  }\n\n  async ngOnInit() {\n    this.setupBackButtonHandler();\n    this.loadQuizData();\n  }\n\n  private loadQuizData(): void {\n    this.route.queryParams.pipe(\n      tap(() => this.isLoading = true),\n      switchMap(params => {\n        this.quizId = params['id'];\n        return this.quizService.getLiveQuiz(this.quizId);\n      }),\n      map(quiz => {\n        // Apply shuffling based on quiz configuration or default settings\n        this.applyShuffling(quiz);\n        return quiz;\n      }),\n      tap(quiz => {\n        this.quizSubject.next(quiz);\n        this.isLoading = false;\n        this.selectedOptions = new Array(quiz.questions.length).fill(null);\n\n        if (!this.isAdminUser || quiz.approvalStatus !== 'pending') {\n          this.startTimer(quiz.estimatedTime);\n        }\n      }),\n      catchError(err => {\n        this.isLoading = false;\n        console.error('Error loading quiz', err);\n        return of(null);\n      })\n    ).subscribe();\n  }\n\n  private applyShuffling(quiz: Quiz): void {\n    // Check if shuffling is enabled (you can add these properties to your Quiz interface)\n    // const shuffleQuestions = quiz.shuffleQuestions !== undefined ? quiz.shuffleQuestions : true;\n    const shuffleQuestions = true;\n    // const shuffleOptions = quiz.shuffleOptions !== undefined ? quiz.shuffleOptions : true;\n    const shuffleOptions = true;\n\n    // Shuffle questions\n    if (shuffleQuestions) {\n      quiz.questions = this.shuffleArray(quiz.questions);\n    }\n\n    // Shuffle options for each question\n    if (shuffleOptions) {\n      quiz.questions.forEach(question => {\n        // Store original correct answer before shuffling\n        const correctAnswer = question.correctAnswer;\n\n        // Shuffle options\n        question.options = this.shuffleArray(question.options);\n\n        // Update correct answer reference (in case we need it later)\n        question.correctAnswer = correctAnswer;\n      });\n    }\n  }\n\n  // Improved shuffle function with better randomness\n  private shuffleArray<T>(array: T[]): T[] {\n    const shuffled = [...array];\n    let currentIndex = shuffled.length;\n    let temporaryValue: T, randomIndex: number;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      temporaryValue = shuffled[currentIndex];\n      shuffled[currentIndex] = shuffled[randomIndex];\n      shuffled[randomIndex] = temporaryValue;\n    }\n\n    return shuffled;\n  }\n\n  private async setupBackButtonHandler() {\n    if (typeof window !== 'undefined' && 'capacitor' in window) {\n      this.backButtonListener = await App.addListener('backButton', ({ canGoBack }) => {\n        if (this.isQuizActive && !this.confirmationPopup) {\n          this.handleBackButton();\n        } else if (this.confirmationPopup) {\n          this.stayInQuiz();\n        } else {\n          App.exitApp();\n        }\n      });\n    }\n  }\n\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event: any) {\n    event.preventDefault();\n    this.resultPopup = false\n    this.handleBackButton();\n  }\n\n  private async handleBackButton(): Promise<void> {\n    if (!this.isQuizActive) return;\n\n    this.confirmationPopup = true;\n    this.cdr.detectChanges();\n  }\n\n  canDeactivate(): boolean | Observable<boolean> {\n    this.resultPopup = false\n    if (!this.isQuizActive) return true;\n\n    this.confirmationPopup = true;\n    this.deactivateSubject = new Subject<boolean>();\n\n    return this.deactivateSubject.asObservable().pipe(\n      take(1),\n      map(response => {\n        this.confirmationPopup = false;\n        if (response) this.cleanupQuiz();\n        return response;\n      })\n    );\n  }\n\n  stayInQuiz(): void {\n    if (this.deactivateSubject) {\n      this.deactivateSubject.next(false);\n      this.deactivateSubject.complete();\n      this.deactivateSubject = null;\n    }\n    this.confirmationPopup = false;\n    this.resultPopup = false;\n  }\n\n  leaveQuiz(): void {\n    if (this.deactivateSubject) {\n      this.deactivateSubject.next(true);\n      this.deactivateSubject.complete();\n      this.deactivateSubject = null;\n    }\n    this.confirmationPopup = false;\n    this.cleanupQuiz();\n    this.router.navigate(['/home'], { replaceUrl: true });\n  }\n\n  ngOnDestroy() {\n    if (this.backButtonListener) this.backButtonListener.remove();\n    if (this.timerInterval) clearInterval(this.timerInterval);\n    this.cleanupQuiz();\n  }\n\n  private cleanupQuiz(): void {\n    this.isQuizActive = false;\n    const authData: AuthData = {\n      token: localStorage.getItem('token') || '',\n      user: JSON.parse(localStorage.getItem('user') || '{}')\n    };\n    this.socketService.authDataSource.next(authData);\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any): void {\n    if (this.isQuizActive) {\n      $event.returnValue = 'You have an active quiz. Are you sure you want to leave?';\n    }\n  }\n\n  startTimer(estimatedTime: number): void {\n    this.remainingTime = estimatedTime;\n\n    this.timerInterval = setInterval(() => {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n      } else {\n        clearInterval(this.timerInterval);\n        this.isQuizActive = false;\n        this.submitQuiz();\n      }\n    }, 1000);\n  }\n\n\n  pauseTimer(): void {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  formatTime(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  }\n\n  previousQuestion(): void {\n    if (this.currentQuestionIndex > 0) {\n      this.currentQuestionIndex--;\n    }\n  }\n\n  nextQuestion(): void {\n    const quiz = this.quizSubject.getValue();\n    if (quiz && this.currentQuestionIndex < quiz.questions.length - 1) {\n      this.currentQuestionIndex++;\n    }\n  }\n\n  selectOption(optionIndex: number, quizId: string, question: QuizQuestion | any, answer: string): void {\n    if (!quizId) return;\n\n    this.selectedOptions[this.currentQuestionIndex] = optionIndex;\n    this.quizService.submitAnswer(quizId, question._id, answer).subscribe();\n  }\n\n  isOptionSelected(optionIndex?: number): boolean {\n    if (optionIndex !== undefined) {\n      return this.selectedOptions[this.currentQuestionIndex] === optionIndex;\n    }\n    return this.selectedOptions[this.currentQuestionIndex] !== undefined &&\n      this.selectedOptions[this.currentQuestionIndex] !== null;\n  }\n\n  getQuestionLoadingState(index: number): boolean {\n    return this.loadingStates[index] || false;\n  }\n\n  async submitQuiz(): Promise<void> {\n    try {\n      const quiz = this.quizSubject.getValue();\n      if (quiz) {\n        this.correctAnswersCount = this.calculateCorrectAnswers(quiz);\n        if (!this.viewAnswer) {\n          this.quizService.submitQuiz(quiz._id).subscribe();\n          this.pauseTimer()\n        }\n        this.resultPopup = true;\n      }\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n    }\n  }\n\n  calculateCorrectAnswers(quiz: Quiz): number {\n    return quiz.questions.reduce((count, question, index) => {\n      const selectedOptionIndex = this.selectedOptions[index];\n      return (selectedOptionIndex !== null &&\n        selectedOptionIndex !== undefined &&\n        question.correctAnswer === question.options[selectedOptionIndex])\n        ? count + 1 : count;\n    }, 0);\n  }\n\n  calculatePoints(quiz: Quiz): number {\n    return quiz.questions.reduce((totalPoints, question, index) => {\n      const selectedOptionIndex = this.selectedOptions[index];\n\n      // Check if an option was selected and if it's correct\n      if (selectedOptionIndex !== null &&\n        selectedOptionIndex !== undefined &&\n        question.correctAnswer === question.options[selectedOptionIndex]) {\n\n        // Add the question's point value to the total\n        return totalPoints + (question.points || 1); // Use question.points or default to 1\n      }\n\n      return totalPoints; // Return current total if answer is wrong or not selected\n    }, 0);\n  }\n\n  isCorrectAnswer(correctAnswer: string | undefined, option: string): boolean {\n    return correctAnswer === option;\n  }\n\n  viewAnswers(): void {\n    this.viewAnswer = true;\n    this.resultPopup = false;\n  }\n\n  async closeQuizWithoutSubmit(): Promise<void> {\n    this.cleanupQuiz();\n    this.router.navigate(['/home'], { replaceUrl: true });\n  }\n\n  // Helper method to check if an answer is wrong\n  isWrongAnswer(optionIndex: number, option: string): boolean {\n    if (!this.viewAnswer || !this.currentQuestion) return false;\n\n    const isSelected = this.isOptionSelected(optionIndex);\n    const isCorrect = this.currentQuestion.correctAnswer === option;\n\n    return isSelected && !isCorrect;\n  }\n\n  // Helper method to check if an answer should be shown as correct\n  isCorrectAnswerToShow(option: string): boolean {\n    if (!this.viewAnswer || !this.currentQuestion) return false;\n\n    return this.currentQuestion.correctAnswer === option;\n  }\n\n  // TrackBy function for better performance\n  trackByOption(index: number, option: string): string {\n    return option; // Use the option text as unique identifier\n  }\n\n  trackByQuestionId(index: number, question: QuizQuestion): string {\n    return question._id || index.toString();\n  }\n}","<ion-content class=\"ion-padding\" [fullscreen]=\"true\">\n  <div class=\"container\" *ngIf=\"(quiz$ | async) as quiz; else loading\">\n    <div class=\"quiz-title\">{{ quiz.title }}</div>\n    <div class=\"quiz-description\">{{ quiz.description }}</div>\n\n    <div class=\"quiz-meta\">\n      <span class=\"meta-item\">\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        </svg>\n        {{ quiz.estimatedTime / 60 | number:'1.0-0' }} min\n      </span>\n      <span class=\"meta-item\">\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" />\n        </svg>\n        {{ quiz.difficulty | titlecase }}\n      </span>\n      <span class=\"meta-item\">\n        <i class=\"fas fa-bolt\"></i>\n        {{ quiz.totalPoints }} XP\n      </span>\n    </div>\n\n    <div class=\"timer-container\">\n      <div class=\"timer\">\n        <i class=\"fas fa-clock\"></i>\n        {{ formatTime(remainingTime) }}\n      </div>\n    </div>\n\n    <div class=\"progress-container\">\n      <div class=\"progress-info\">\n        <span>Progress: {{ currentQuestionIndex + 1 }}/{{ quiz.questions.length }}</span>\n        <span>{{ progressPercentage | number:'1.0-0' }}%</span>\n      </div>\n      <div class=\"progress-bar\">\n        <div class=\"progress-fill\" [style.width.%]=\"progressPercentage\"></div>\n      </div>\n    </div>\n\n    <div class=\"question-card\" *ngIf=\"!getQuestionLoadingState(currentQuestionIndex)\">\n      <div class=\"question-header\">\n        <div class=\"question-number\">Question {{ currentQuestionIndex + 1 }} of {{ quiz.questions.length }}</div>\n      </div>\n\n      <div class=\"question-text\">{{ currentQuestion?.question }}</div>\n\n      <div class=\"options-list\">\n        <div *ngFor=\"let option of currentQuestion?.options; let i = index; trackBy: trackByOption\" class=\"option-item\"\n          [ngClass]=\"{\n            'selected': isOptionSelected(i),\n            'wrong': isOptionSelected(i) && isWrongAnswer(i, option),\n            'correct': isCorrectAnswerToShow(option),\n            'disabled': viewAnswer\n          }\" (click)=\"!resultPopup && selectOption(i, quiz._id, currentQuestion, option)\">\n\n          <div class=\"option-radio\">\n            <div class=\"radio-inner\" *ngIf=\"isOptionSelected(i)\"></div>\n          </div>\n\n          <div class=\"option-text\">{{ option }}</div>\n\n          <!-- Show feedback icons when viewing answers -->\n          <div class=\"answer-feedback\" *ngIf=\"viewAnswer\">\n            <i class=\"fas fa-check correct-icon\" *ngIf=\"isCorrectAnswerToShow(option)\"></i>\n            <i class=\"fas fa-times wrong-icon\" *ngIf=\"isOptionSelected(i) && isWrongAnswer(i, option)\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"quiz-actions\">\n      <button class=\"action-btn prev-btn\" (click)=\"previousQuestion()\" [disabled]=\"currentQuestionIndex === 0\">\n        <i class=\"fas fa-arrow-left\"></i>\n        Previous\n      </button>\n\n      <ng-container *ngIf=\"currentQuestionIndex < quiz.questions.length - 1; else submitSection\">\n        <button class=\"action-btn next-btn\" (click)=\"nextQuestion()\" [disabled]=\"!isOptionSelected()\">\n          Next\n          <i class=\"fas fa-arrow-right\"></i>\n        </button>\n      </ng-container>\n\n      <ng-template #submitSection>\n        <button (click)=\"submitQuiz()\" [disabled]=\"!isOptionSelected()\" class=\"action-btn submit-btn\">\n          Submit Quiz\n          <i class=\"fas fa-paper-plane\"></i>\n        </button>\n      </ng-template>\n    </div>\n  </div>\n\n  <!-- Loading Template -->\n  <ng-template #loading>\n    <div class=\"loading-container\">\n      <!-- Simplified loading skeleton -->\n      <div class=\"ph-item\">\n        <div class=\"ph-col-12\">\n          <div class=\"ph-row\">\n            <div class=\"ph-col-8 big\"></div>\n            <div class=\"ph-col-4 big\"></div>\n          </div>\n          <div class=\"ph-picture\"></div>\n          <div class=\"ph-row\">\n            <div class=\"ph-col-12\"></div>\n            <div class=\"ph-col-6\"></div>\n            <div class=\"ph-col-6\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- Confirmation Dialog -->\n  <div class=\"dialog-backdrop\" *ngIf=\"confirmationPopup\" (click)=\"stayInQuiz()\">\n    <div class=\"dialog-container\" (click)=\"$event.stopPropagation()\">\n      <div class=\"dialog-header\">\n        <h2 class=\"dialog-title\">Leave Quiz?</h2>\n        <p class=\"dialog-message\">You have an active quiz! Are you sure you want to leave? If you leave this page, your\n          quiz will be submitted automatically.</p>\n      </div>\n      <div class=\"dialog-actions\">\n        <button class=\"dialog-button button-cancel\" (click)=\"stayInQuiz()\">Stay</button>\n        <button class=\"dialog-button button-delete\" (click)=\"leaveQuiz()\">Leave</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Results Dialog -->\n  <ng-container *ngIf=\"(quiz$ | async) as quiz\">\n    <div class=\"dialog-backdrop\" *ngIf=\"resultPopup\">\n      <div class=\"dialog-container\" (click)=\"$event.stopPropagation()\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <div class=\"image\">\n              <img src=\"assets/winner-cup.svg\" width=\"100px\" alt=\"Quiz completed\">\n            </div>\n            <div class=\"content\">\n              <i class=\"fas fa-bolt\"></i>&nbsp;\n              <span class=\"title\"> {{calculatePoints(quiz)}} XP</span>\n            </div>\n            <div class=\"content\">\n              <span class=\"title\">Quiz completed successfully!</span>\n              <p class=\"message\">You attempted <b>{{ quiz.questions.length }} questions</b> and got <b>{{\n                  correctAnswersCount }} answers</b> correct.</p>\n            </div>\n            <div class=\"actions\">\n              <button class=\"dialog-button button-cancel\" (click)=\"viewAnswers()\">Verify Answers</button>\n              <button class=\"dialog-button button-delete\" (click)=\"closeQuizWithoutSubmit()\">Leave</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ion-content>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService, UserStats, user } from '../dashboard.service';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { Router } from '@angular/router';\nimport { ToasterService } from '../toaster.service';\nimport { Share } from '@capacitor/share';\nimport { Observable, combineLatest, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit, OnDestroy {\n  activeTab: string = 'quizzes';\n\n  // Combined view model observable\n  viewModel$: Observable<{\n    userStats: UserStats | null;\n    draftQuizzes: Quiz[];\n  }>;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private dashboardService: DashboardService,\n    private quizService: CreateQuizesService,\n    private router: Router,\n    private toasterService: ToasterService\n  ) {\n    // Combine all needed observables\n    this.viewModel$ = combineLatest([\n      this.dashboardService.getUserStats$,\n      this.quizService.getQuizesDraft$\n    ]).pipe(\n      map(([userStats, draftQuizzes]) => ({ userStats, draftQuizzes })),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n\n  get currentUser(): user {\n    return this.dashboardService.getUser()\n  }\n\n\n\n  async loadInitialData() {\n    try {\n      await Promise.all([\n        this.dashboardService.getDashboardStats().toPromise(),\n        this.quizService.getAllQuiz().toPromise()\n      ]);\n    } catch (error) {\n      console.error('Error loading initial data:', error);\n    }\n  }\n\n  changeTab(tab: string): void {\n    this.activeTab = tab;\n  }\n\n  verifyQuiz(quizId: string): void {\n    this.router.navigate(['/verify-quiz'], { queryParams: { id: quizId } });\n  }\n\n  deleteQuiz(quizId: string): void {\n    this.quizService.deleteQuiz(quizId).subscribe({\n      next: () => {\n        this.toasterService.success('Quiz deleted successfully');\n      },\n      error: (err) => {\n        this.toasterService.error('Failed to delete quiz');\n        console.error('Delete quiz error:', err);\n      }\n    });\n  }\n\n  trackByQuizId(index: number, quiz: Quiz): string {\n    return quiz._id;\n  }\n\n  async shareApp() {\n    const appName = \"QuizMaster\";\n    const message = `🚀 Challenge yourself with ${appName}! \n  Test your knowledge with fun quizzes and compete with friends. \n  Join me now!`;\n\n    const shareOptions = {\n      title: `Try ${appName} - The Ultimate Quiz App`,\n      text: message,\n      url: 'https://your-app-website-or-play-store-link.com',\n      dialogTitle: 'Challenge Your Friends',\n    };\n\n    try {\n      await Share.share(shareOptions);\n    } catch (error) {\n      console.error('Share error:', error);\n    }\n  }\n\n  IsAdminTemplate(quiz: Quiz): boolean {\n    return quiz.source?.toLowerCase() === 'admin-template' &&\n      quiz.approvalStatus !== 'rejected';\n  }\n\n  avatarError(event: Event) {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null;\n  }\n}","<ion-content [fullscreen]=\"true\">\n    <div class=\"phone-section\">\n      <!-- Profile Header -->\n      <div class=\"profile-header\">\n        <div class=\"avatar-container\">\n          <img [src]=\"currentUser.avatar\" \n               crossorigin=\"anonymous\" \n               class=\"profile-avatar\"\n               (error)=\"avatarError($event)\">\n          <div class=\"edit-avatar\" *ngIf=\"false\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n              <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n            </svg>\n          </div>\n        </div>\n        <h1 class=\"profile-name\">{{currentUser.name}}</h1>\n        <p class=\"profile-username\">{{currentUser.email}}</p>\n  \n        <!-- Stats -->\n        <div class=\"profile-stats\" *ngIf=\"viewModel$ | async as vm\">\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">{{vm.userStats?.points || 0}}</div>\n            <div class=\"stat-label\">XP Points</div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">{{vm.userStats?.rank || 0}}</div>\n            <div class=\"stat-label\">Rank</div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">{{vm.userStats?.streak?.current || 0}}</div>\n            <div class=\"stat-label\">Streak</div>\n          </div>\n        </div>\n  \n        <!-- Action Buttons -->\n        <div class=\"action-buttons\">\n          <button class=\"btn btn-primary\" routerLink=\"/create\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n              <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\n              <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\n            </svg>\n            Create Quiz\n          </button>\n          <button class=\"btn btn-outline\" (click)=\"shareApp()\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\"\n                 stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n              <circle cx=\"18\" cy=\"5\" r=\"3\"></circle>\n              <circle cx=\"6\" cy=\"12\" r=\"3\"></circle>\n              <circle cx=\"18\" cy=\"19\" r=\"3\"></circle>\n              <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"></line>\n              <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"></line>\n            </svg>\n            Share\n          </button>\n        </div>\n      </div>\n  \n      <!-- Tabs -->\n      <div class=\"tabs\">\n        <div class=\"tab {{activeTab == 'quizzes'?'active':''}}\" (click)=\"activeTab = 'quizzes'\">My Quizzes</div>\n        <div class=\"tab {{activeTab == 'stats'?'active':''}}\" (click)=\"activeTab = 'stats'\">Stats</div>\n      </div>\n  \n      <!-- Tab Content -->\n      <ng-container *ngIf=\"viewModel$ | async as vm\">\n        <!-- Quizzes Tab -->\n        <div class=\"tab-content {{activeTab == 'quizzes'?'active':''}}\">\n          <!-- Loading State -->\n          <ng-container *ngIf=\"vm.draftQuizzes.length === 0\">\n            <img src=\"assets/noQuizes.svg\" alt=\"\" srcset=\"\">\n          </ng-container>\n  \n          <!-- Quizzes List -->\n          <div class=\"quiz-card\" *ngFor=\"let quiz of vm.draftQuizzes; trackBy: trackByQuizId\">\n            <div class=\"quiz-header\">\n              <h3 class=\"quiz-title\">\n                {{quiz.title}}\n              </h3>\n              <div class=\"quiz-meta\" *ngIf=\"false\">\n                <span class=\"quiz-meta-item\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\"\n                       stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                    <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                  </svg>\n                  1.2K\n                </span>\n              </div>\n            </div>\n            <p class=\"quiz-description\">{{quiz.description}}</p>\n            <div class=\"quiz-meta\">\n              <span class=\"meta-item\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n                    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                {{ quiz.estimatedTime / 60 }} min\n              </span>\n              <span class=\"meta-item\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                  <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n                {{quiz.difficulty}}\n              </span>\n              <span class=\"meta-item\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M8 10H8.01M12 10H12.01M16 10H16.01M8 14H8.01M12 14H12.01M16 14H16.01M8 18H8.01M12 18H12.01M16 18H16.01M7 4H17C18.1046 4 19 4.89543 19 6V18C19 19.1046 18.1046 20 17 20H7C5.89543 20 5 19.1046 5 18V6C5 4.89543 5.89543 4 7 4Z\"\n                    stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                {{quiz.totalQuestions}} Qs\n              </span>\n            </div>\n            <div class=\"quiz-actions\">\n              <ion-chip *ngIf=\"IsAdminTemplate(quiz)\" class=\"difficulty-badge\">\n                template\n              </ion-chip>\n              <button class=\"action-btn\" *ngIf=\"quiz.approvalStatus != 'pending'\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\"\n                    *ngIf=\"quiz.approvalStatus == 'rejected'\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                  <path d=\"M5 13L9 17L19 7\" stroke=\"currentColor\" *ngIf=\"quiz.approvalStatus == 'approved'\"\n                    stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                {{quiz.approvalStatus}}\n              </button>\n              <button class=\"action-btn approve-btn\" *ngIf=\"quiz.approvalStatus == 'pending'\"\n                (click)=\"verifyQuiz(quiz._id)\">\n                Verify\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n              </button>\n              <button class=\"action-btn delete-btn\" *ngIf=\"quiz.approvalStatus != 'pending'\"\n                (click)=\"deleteQuiz(quiz._id)\">\n                Delete\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z\"\n                    fill=\"currentColor\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n  \n        <!-- Stats Tab -->\n        <div class=\"tab-content {{activeTab == 'stats'?'active':''}}\">\n          <div class=\"stats-grid\">\n            <div class=\"stat-card\">\n              <div class=\"stat-card-title\">\n                <ion-icon name=\"stats-chart-sharp\"></ion-icon>\n                Weekly Activity\n              </div>\n              <div class=\"stat-card-value\">87%</div>\n              <div class=\"stat-card-change positive\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\"\n                     stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                  <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line>\n                  <polyline points=\"5 12 12 5 19 12\"></polyline>\n                </svg>\n                12% from last week\n              </div>\n            </div>\n  \n    \n            <!-- Other stat cards -->\n            <!-- ... -->\n          </div>\n         \n        </div>\n      </ng-container>\n    </div>\n  </ion-content>","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CanDeactivate } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizGuardService implements CanDeactivate<ComponentCanDeactivate> {\n  private routeChangeSubject = new Subject<boolean>();\n  \n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n\n  get routeChange$(): Observable<boolean> {\n    return this.routeChangeSubject.asObservable();\n  }\n}","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DashboardService, LeaderboardUser, user } from '../dashboard.service';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { AuthData, SocketService } from '../socket.service';\nimport { map } from 'rxjs/operators';\nimport { searchQueryModel } from '../live-quizes/live-quizes.component';\n\n\n@Component({\n  selector: 'app-quizes',\n  templateUrl: './quizes.page.html',\n  styleUrls: ['./quizes.page.scss'],\n})\nexport class QuizesPage implements OnInit, OnDestroy {\n  @Input() publishedQuizes$: Observable<Quiz[]>;\n  @Input() ParentInjected: boolean = false;\n  @Output() handleRefresh: EventEmitter<boolean> = new EventEmitter<boolean>()\n\n  isLoadingQuizzes: boolean = false;\n  openModel: boolean = false;\n\n  @Input() set searchQueryData(data: searchQueryModel) {\n    if (data.searchQuery || data.selectedCategory) {\n      this.searchQuery = data.searchQuery\n      this.selectedCategory = data.selectedCategory\n      this.filterQuizzes()\n    }\n  }\n\n  // Filter properties\n  searchQuery: string = '';\n  selectedCategory: string = 'all';\n  filteredQuizzes$: Observable<Quiz[]>;\n  categories = [\n    { id: 'all', name: 'All', icon: 'fas fa-layer-group' },\n    { id: 'math', name: 'Math', icon: 'fas fa-calculator' },\n    { id: 'science', name: 'Science', icon: 'fas fa-flask' },\n    { id: 'literature', name: 'Literature', icon: 'fas fa-book' },\n    { id: 'geography', name: 'Geography', icon: 'fas fa-globe-americas' },\n    { id: 'history', name: 'History', icon: 'fas fa-history' }\n  ];\n\n  constructor(\n    private quizService: CreateQuizesService,\n    protected router: Router,\n    private sanitizer: DomSanitizer,\n    private SocketService: SocketService,\n    private dashboardService: DashboardService\n  ) {\n\n    this.publishedQuizes$ = this.quizService.getPublishedQuizes$\n    this.filteredQuizzes$ = this.publishedQuizes$;\n  }\n\n  get currentUser(): user {\n    return this.dashboardService.getUser()\n  }\n\n  ngOnInit(): void {\n    this.loadInitialData();\n    this.quizService.isQuizesRefreshed.subscribe(data => {\n      if (data) {\n        this.loadInitialData();\n      }\n    });\n  }\n\n\n\n  // Apply both search and category filters\n  private applyFilters(quizzes: Quiz[]): Quiz[] {\n\n    // Apply category filter\n    if (this.selectedCategory && this.selectedCategory !== 'all') {\n      return quizzes.filter(quiz =>\n        quiz.category?.toLowerCase() === this.selectedCategory.toLowerCase()\n      );\n    }\n\n    // Apply search filter\n    if (this.searchQuery.trim()) {\n      const query = this.searchQuery.toLowerCase().trim();\n      return quizzes.filter(quiz =>\n        quiz.title.toLowerCase().includes(query)\n      );\n    }\n\n    return quizzes\n\n  }\n\n  // Filter quizzes based on current criteria\n  filterQuizzes(): void {\n    this.publishedQuizes$.pipe(\n      map(quizzes => this.applyFilters(quizzes))\n    ).subscribe(filtered => {\n      // This will trigger the async pipe update\n      this.filteredQuizzes$ = of(filtered);\n    });\n  }\n\n  // Select category and filter\n  selectCategory(categoryId: string): void {\n    this.selectedCategory = categoryId;\n    this.filterQuizzes();\n  }\n  async loadInitialData() {\n    this.handleRefresh.emit(true)\n    this.isLoadingQuizzes = true;\n    setTimeout(() => {\n      this.isLoadingQuizzes = false;\n    }, 2000);\n    await this.quizService.getPublishedQuiz().toPromise();\n  }\n\n  async getQuizParticipant(quizId: any) {\n    this.SocketService.authDataSource.next(null);\n    await this.quizService.getQuizParticipant(quizId).toPromise();\n  }\n\n  protected makeSafeUrl(url: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  avatarError(event: Event) {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null;\n  }\n\n  async joinQuiz(quizId: any) {\n    await this.quizService.joinQuiz(quizId).toPromise();\n  }\n\n  async playQuiz(quizId: any) {\n    // Quiz start logic\n    this.SocketService.authDataSource.next(null)\n    this.router.navigate(['/ongoing'], {\n      replaceUrl: true,\n      queryParams: { id: quizId }\n    })\n  }\n\n  // TrackBy functions for ngFor performance\n  trackByQuizId(index: number, quiz: Quiz): string {\n    return quiz._id;\n  }\n\n  showDialog() {\n    this.openModel = true;\n  }\n\n  closeDialog() {\n    let AuthData: AuthData = {\n      token: localStorage.getItem('token') || '',\n      user: JSON.parse(localStorage.getItem('user') || '{}')\n    };\n    this.SocketService.authDataSource.next(AuthData);\n    this.openModel = false;\n  }\n\n  handleAvatarError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null; // Prevent infinite loop\n  }\n\n  async BeginQuiz(quizId: string) {\n    // Quiz start logic\n    await this.quizService.BeginQuiz(quizId).toPromise();\n  }\n\n\n  async startQuiz(quizId: string) {\n    // Quiz start logic\n    await this.quizService.startQuiz(quizId).toPromise();\n  }\n\n\n\n  async completeQuizByHost(quizId: string) {\n    // Quiz start logic\n    await this.quizService.completeQuizByHost(quizId).toPromise();\n  }\n\n\n  verifyQuiz(quizId: string): void {\n    this.router.navigate(['/verify-quiz'], {\n      queryParams: { id: quizId }\n    });\n  }\n\n  trackByUserId(index: number, user: LeaderboardUser): string {\n    return user.userId;\n  }\n\n  async ngOnDestroy() {\n    await this.quizService.getPublishedQuiz(3).toPromise();\n  }\n}","<div class=\"section {{ParentInjected && 'mb'}}\">\n  <!-- Search bar -->\n\n  <!-- Featured Quizzes -->\n  <div class=\"section-title\">\n    <h2>Upcoming Quizzes</h2>\n    <a *ngIf=\"ParentInjected\" (click)=\"loadInitialData()\" routerLink=\"/quizes\">View all <i\n      class=\"fas fa-chevron-right\"></i></a>\n      </div>\n\n  <div class=\"search-bar\" *ngIf=\"!ParentInjected\">\n    <i class=\"fas fa-search\"></i>\n    <input type=\"text\" placeholder=\"Search quizzes, topics...\" [(ngModel)]=\"searchQuery\" (input)=\"filterQuizzes()\">\n    <i class=\"fas fa-close\" *ngIf=\"searchQuery\" (click)=\"searchQuery = '';filterQuizzes()\"></i>\n  </div>\n\n  <!-- Category Filter -->\n  <div class=\"category-scroll skeleton-value mb-28\" *ngIf=\"!ParentInjected\">\n    <div \n      *ngFor=\"let category of categories\" \n      class=\"category-card\" \n      [class.active]=\"selectedCategory === category.id\"\n      (click)=\"selectCategory(category.id)\"\n    >\n      <div class=\"icon-wrapper\">\n        <i [class]=\"category.icon\"></i>\n      </div>\n      <h4>{{category.name}}</h4>\n    </div>\n  </div>\n\n  <!-- Combined async state for quizzes -->\n  <ng-container *ngIf=\"(filteredQuizzes$ | async) as quizzes;\">\n    <ng-container *ngIf=\"quizzes.length > 0; else noapublishedQuizzes\">\n      <div *ngFor=\"let quiz of quizzes; trackBy: trackByQuizId\" class=\"quiz-card\">\n        <!-- Quiz card content remains the same -->\n        <div class=\"quiz-header\">\n          <h3 class=\"quiz-title\">\n            <div class=\"status-badge-container\" [class.waiting]=\"quiz.status == 'waiting'\"\n              [class.live]=\"quiz.status == 'in-progress'\" [class.completed]=\"quiz.status == 'completed'\">\n            </div>\n            {{quiz.title}}\n          </h3>\n        </div>\n        <p class=\"quiz-description\">{{quiz.description}}</p>\n        <div class=\"quiz-meta\">\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M12 8V12L15 15M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n            </svg>\n            {{ (quiz.estimatedTime / 60) | number : '1.2-2' }} min\n          </span>\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              <path d=\"M12 8V12L15 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n            {{quiz.difficulty}}\n          </span>\n          <span class=\"meta-item\">\n            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M8 10H8.01M12 10H12.01M16 10H16.01M8 14H8.01M12 14H12.01M16 14H16.01M8 18H8.01M12 18H12.01M16 18H16.01M7 4H17C18.1046 4 19 4.89543 19 6V18C19 19.1046 18.1046 20 17 20H7C5.89543 20 5 19.1046 5 18V6C5 4.89543 5.89543 4 7 4Z\"\n                stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n            </svg>\n            {{quiz.totalQuestions}} Qs\n          </span>\n        </div>\n\n        <div class=\"quiz-meta\">\n          <span class=\"meta-item\">\n            <i class=\"fas fa-bolt\"></i>\n            {{quiz.totalPoints}} XP\n          </span>\n          <span class=\"meta-item\"></span>\n        </div>\n\n        <div class=\"quiz-actions\">\n          <button *ngIf=\"currentUser.role == 'user' && (quiz.status == 'waiting' || quiz.status == 'inactive')\" class=\"action-btn reject-btn\" (click)=\"verifyQuiz(quiz._id)\">\n            Revise\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>\n          <button *ngIf=\"currentUser.role != 'user' && (quiz.status == 'waiting' || quiz.status == 'inactive')\" class=\"action-btn reject-btn\" (click)=\"verifyQuiz(quiz._id)\">\n            Review\n             <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n               <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                 stroke-linejoin=\"round\" />\n             </svg>\n           </button>\n          <button *ngIf=\"currentUser.role != 'user' && !quiz.isLive && quiz.status == 'inactive'\" class=\"action-btn approve-btn\" (click)=\"BeginQuiz(quiz._id)\">\n            Begin \n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>\n          <button *ngIf=\"currentUser.role != 'user' && quiz.isLive && quiz.status == 'waiting'\" class=\"action-btn approve-btn\" (click)=\"startQuiz(quiz._id)\">\n            Start \n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>\n          <button *ngIf=\"currentUser.role != 'user' && quiz.isLive && quiz.status == 'in-progress'\" class=\"action-btn approve-btn\" (click)=\"completeQuizByHost(quiz._id)\">\n            End \n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-template #noapublishedQuizzes>\n      <img src=\"assets/noQuizes.svg\" alt=\"\" srcset=\"\" loading=\"eager\">\n    </ng-template>\n  </ng-container>\n<!-- Coming Leaderboard content here using ng-content -->\n<ng-content></ng-content>\n\n</div>\n\n<!-- Refresh Button -->\n<div class=\"floating-action\" (click)=\"loadInitialData()\">\n  <svg [class.loading]=\"isLoadingQuizzes\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n    viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\n    stroke-linejoin=\"round\">\n    <path d=\"M23 4v6h-6\" />\n    <path d=\"M1 20v-6h6\" />\n    <path d=\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\" />\n  </svg>\n</div>","import { Injectable, OnDestroy } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport { BehaviorSubject, Observable, ReplaySubject, of, fromEvent, Subject } from 'rxjs';\nimport { environment } from '../environments/environment';\nimport { Router } from '@angular/router';\nimport { ToasterService } from './toaster.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\n\nexport interface AuthData {\n  token: string;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    avatar?: string;\n    role: string;\n    isVerified: boolean;\n  };\n}\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterPayload {\n  name: string;\n  email: string;\n  password: string;\n}\n\ntype ConnectionState = 'disconnected' | 'connecting' | 'connected' | 'reconnecting' | 'error';\n\nconst MAX_RECONNECTION_ATTEMPTS = 5;\nconst BASE_RECONNECTION_DELAY = 1000;\nconst MAX_RECONNECTION_DELAY = 10000;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService implements OnDestroy {\n  public socket!: Socket;\n  public authDataSource = new ReplaySubject<AuthData | null>(1);\n  private loginDataSource = new ReplaySubject<AuthData | null>(1);\n  private otpDataSource = new ReplaySubject<AuthData | null>(1);\n  private authErrorSource = new ReplaySubject<any | null>(1);\n  private connectionState$ = new BehaviorSubject<ConnectionState>('disconnected');\n  private connectionAttempts = 0;\n  private urlSubject = new ReplaySubject<{ url: string }>(1); // New subject for URL events\n\n  public readonly authData$ = this.authDataSource.asObservable();\n  public readonly loginData$ = this.loginDataSource.asObservable();\n  public readonly otpSuccess$ = this.otpDataSource.asObservable();\n  public readonly connectionState = this.connectionState$.asObservable();\n  public readonly authError$ = this.authErrorSource.asObservable();\n  public readonly url$ = this.urlSubject.asObservable(); // Expose URL observable\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private toasterService: ToasterService,\n    private http: HttpClient,\n    private inAppBrowser: InAppBrowser,\n    private platform: Platform,\n    private modalController: ModalController,\n  ) {\n    this.initializeSocket(localStorage.getItem('token') || undefined);\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupSocket();\n    this.cleanup();\n  }\n\n  private initializeSocket(token?: string): void {\n    try {\n      this.connectionState$.next('connecting');\n\n      this.socket = io(environment.apiURL, {\n        transports: ['websocket'],\n        reconnection: true,\n        autoConnect: true,\n        auth: token ? { token } : undefined,\n        reconnectionDelay: this.calculateReconnectionDelay(),\n        reconnectionAttempts: MAX_RECONNECTION_ATTEMPTS,\n        forceNew: true // Ensure new connection instance\n      });\n\n      this.setupConnectionMonitoring();\n      this.registerAuthEvents();\n      this.registerUrlEvents(); // Register URL-specific events\n    } catch (error) {\n      console.error('Socket initialization error:', error);\n      this.connectionState$.next('error');\n    }\n  }\n\n  private registerUrlEvents(): void {\n    this.socket.on('auth:google:url', (data: { url: string }) => {\n      this.urlSubject.next(data); // Emit URL data\n      this.openAuthUrl(data); // Also open URL if needed\n    });\n\n    this.socket.on('auth:facebook:url', (data: { url: string }) => {\n      this.urlSubject.next(data); // Emit URL data\n      this.openAuthUrl(data); // Also open URL if needed\n    });\n  }\n\n  private calculateReconnectionDelay(): number {\n    const delay = Math.min(BASE_RECONNECTION_DELAY * Math.pow(2, this.connectionAttempts), MAX_RECONNECTION_DELAY);\n    return delay + Math.random() * delay;\n  }\n\n  private cleanupSocket(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n\n  private setupConnectionMonitoring(): void {\n    this.socket.on('connect', () => {\n      this.connectionAttempts = 0;\n      this.connectionState$.next('connected');\n      console.log('Socket connected');\n\n      if (localStorage.getItem('token')) {\n        this.emit('quiz:all');\n        this.emit('quiz:published', 3);\n      }\n    });\n\n    this.socket.on('disconnect', (reason: Socket.DisconnectReason) => {\n      this.handleDisconnect(reason);\n      if (!this.socket?.connected) {\n        this.cleanupSocket();\n        this.socket.auth = {\n          token: localStorage.getItem('token') || undefined\n        }\n        this.socket.connect()\n      }\n    });\n\n    this.socket.on('connect_error', (err: Error) => {\n      this.handleConnectionError(err);\n    });\n\n    this.socket.on('reconnect_attempt', () => {\n      this.connectionAttempts++;\n      this.connectionState$.next('reconnecting');\n      console.log(`Reconnection attempt ${this.connectionAttempts}`);\n    });\n\n    this.socket.on('reconnect_failed', () => {\n      this.connectionState$.next('error');\n      this.showToast('Connection failed. Please refresh the page.');\n    });\n  }\n\n  private handleDisconnect(reason: Socket.DisconnectReason): void {\n    console.log(`Disconnected: ${reason}`);\n    this.connectionState$.next('disconnected');\n\n    if (reason === 'io server disconnect') {\n      this.handleUnauthorized();\n    }\n  }\n\n  private handleConnectionError(err: Error): void {\n    console.error('Connection error:', err);\n    this.connectionState$.next('error');\n\n    if (this.connectionAttempts < MAX_RECONNECTION_ATTEMPTS) {\n      setTimeout(() => this.retryConnection(), this.calculateReconnectionDelay());\n    }\n  }\n\n  private registerAuthEvents(): void {\n    const authEvents = {\n      'auth:login:success': this.handleLoginSuccess.bind(this),\n      'auth:register:success': this.handleAuthSuccess.bind(this),\n      'auth:google:success': this.handleAuthSuccess.bind(this),\n      'auth:facebook:success': this.handleAuthSuccess.bind(this),\n      'auth:otp:verify:success': this.handleOtpSuccess.bind(this),\n      'auth:google:callback': this.handleGoogleCallback.bind(this),\n      'auth:facebook:callback': this.handleFacebookCallback.bind(this),\n      'auth:error': this.handleAuthError.bind(this),\n      'receiveLogin': (data: { token: string }) => {\n        localStorage.setItem('token', data.token);\n      }\n    };\n\n    Object.entries(authEvents).forEach(([event, handler]) => {\n      this.socket.on(event, handler);\n    });\n  }\n\n  handleAuthError(error: any) {\n    this.authErrorSource.next(error.message);\n  }\n\n  private handleAuthSuccess(data: AuthData): void {\n    this.persistAuthData(data);\n    this.authDataSource.next(data);\n  }\n\n  private handleLoginSuccess(data: AuthData): void {\n    this.loginDataSource.next(data);\n  }\n\n  private handleOtpSuccess(data: AuthData): void {\n    this.persistAuthData(data);\n    this.otpDataSource.next(data);\n    this.authDataSource.next(data);\n\n  }\n\n  async persistAuthData(data: AuthData) {\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('user', JSON.stringify(data.user));\n    this.cleanupSocket();\n    this.socket.auth = {\n      token: data.token || localStorage.getItem('token')\n    }\n    this.socket.connect()\n    this.router.navigate(['/home'])\n    await this.closeAllModals();\n  }\n\n  // Add this method to your component\n  async closeAllModals(): Promise<void> {\n    try {\n      // Method 1: Close all modals using ModalController (recommended)\n      const topModal = await this.modalController.getTop();\n      if (topModal) {\n        await this.modalController.dismiss();\n        // Recursively close all modals\n        await this.closeAllModals();\n      }\n\n    } catch (error) {\n      console.error('Error closing modals:', error);\n    }\n  }\n\n  private showToast(message: string, duration = 3000, position = 'bottom', color = 'dark'): void {\n    this.toasterService.presentToast(message, duration, position, color);\n  }\n\n  public retryConnection(token?: string): void {\n    this.connectionState$.next('connecting');\n    if (!this.socket?.connected) {\n      this.cleanupSocket();\n      this.socket.auth = {\n        token: token || localStorage.getItem('token')\n      }\n      this.socket.connect()\n    }\n  }\n\n  public async logout(): Promise<void> {\n    try {\n      // 1. Get user data before clearing storage\n      let userId: string = '';\n      try {\n        const userStr = localStorage.getItem('user');\n        if (userStr) {\n          const user = JSON.parse(userStr);\n          userId = user._id || '';\n        }\n      } catch (parseError) {\n        console.warn('Error parsing user data:', parseError);\n      }\n\n      // 2. Close all toasters first\n      this.toasterService.dismiss();\n\n      // 3. Close all open modals (if you have modalController)\n      await this.closeAllModals();\n\n      // 4. Clear auth data source properly\n      this.cleanup()\n      // 5. Emit logout event if user ID exists\n      if (userId) {\n        try {\n          this.emit('auth:logout', userId);\n        } catch (emitError) {\n          console.error('Logout emit error:', emitError);\n        }\n      }\n    } catch (error) {\n      localStorage.clear();\n      this.cleanup()\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.clear();\n      this.cleanup()\n      this.router.navigate(['/login']);\n      this.showToast('You have been logged out');\n    }\n  }\n\n  public cleanup(): void {\n    // Complete all subjects\n    this.authDataSource.complete();\n    this.loginDataSource.complete();\n    this.otpDataSource.complete();\n    this.authErrorSource.complete();\n    this.connectionState$.complete();\n    this.urlSubject.complete();\n\n    // Complete the destroy subject\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    // Reset connection attempts\n    this.connectionAttempts = 0;\n  }\n\n  /**\n   * Individual subject cleanup methods (optional)\n   */\n  public cleanupAuthData(): void {\n    this.authDataSource.complete();\n    this.authDataSource = new ReplaySubject<AuthData | null>(1);\n  }\n\n  public cleanupLoginData(): void {\n    this.loginDataSource.complete();\n    this.loginDataSource = new ReplaySubject<AuthData | null>(1);\n  }\n\n  public cleanupOtpData(): void {\n    this.otpDataSource.complete();\n    this.otpDataSource = new ReplaySubject<AuthData | null>(1);\n  }\n\n  public cleanupAuthErrors(): void {\n    this.authErrorSource.complete();\n    this.authErrorSource = new ReplaySubject<any | null>(1);\n  }\n\n  public cleanupConnectionState(): void {\n    this.connectionState$.complete();\n    this.connectionState$ = new BehaviorSubject<ConnectionState>('disconnected');\n  }\n\n  public cleanupUrlSubject(): void {\n    this.urlSubject.complete();\n    this.urlSubject = new ReplaySubject<{ url: string }>(1);\n  }\n\n  public resetAllSubjects(): void {\n    this.cleanupAuthData();\n    this.cleanupLoginData();\n    this.cleanupOtpData();\n    this.cleanupAuthErrors();\n    this.cleanupConnectionState();\n    this.cleanupUrlSubject();\n\n    this.connectionAttempts = 0;\n  }\n\n  private handleUnauthorized(): void {\n    localStorage.clear();\n    this.router.navigate(['/login']);\n    this.showToast('Session expired. Please login again.', 3000, 'bottom', 'warning');\n  }\n\n  // Authentication methods\n  public register(payload: RegisterPayload): void {\n    this.emit('auth:register', payload);\n  }\n\n  public login(payload: string): void {\n    if (this.socket?.connected) {\n      this.emit('auth:login', payload);\n    } else {\n      this.httpLogin(payload).subscribe(data => this.handleLoginSuccess(data));\n    }\n  }\n\n  httpLogin(email: string): Observable<any> {\n    return this.http.post(`${environment.apiURL}auth/login`, { email });\n  }\n\n  httpverifyOTP(email: string, otp: string, verificationToken: string) {\n    return this.http.post(`${environment.apiURL}auth/verifyOtpAndLogin`, { email, otp, verificationToken });\n  }\n\n  httpGoogleLogin(payload: string): Observable<any> {\n    return this.http.post(`${environment.apiURL}auth/google/login`, payload);\n  }\n\n  httpFacebookLogin(payload: string): Observable<any> {\n    return this.http.post(`${environment.apiURL}auth/facebook/login`, payload);\n  }\n\n  public initiateGoogleLogin(): void {\n    if (this.socket?.connected) {\n      this.emit('auth:google:login');\n    } else {\n      this.httpGoogleLogin('payload').subscribe(data => {\n        this.urlSubject.next(data); // Emit URL data\n        this.openAuthUrl(data);\n      });\n    }\n  }\n\n  public handleGoogleCallback(code: string, state: string): void {\n    this.emit('auth:google:callback', code, state);\n  }\n\n  public initiateFacebookLogin(): void {\n    if (this.socket?.connected) {\n      this.emit('auth:facebook:login');\n    } else {\n      this.httpFacebookLogin('payload').subscribe(data => {\n        this.urlSubject.next(data); // Emit URL data\n        this.openAuthUrl(data);\n      });\n    }\n  }\n\n  public handleFacebookCallback(code: string, state: string): void {\n    this.emit('auth:facebook:callback', code, state);\n  }\n\n  public sendOTP(email: string): void {\n    this.emit('auth:otp:send', email);\n  }\n\n  public verifyOTP(email: string, otp: string): void {\n    this.emit('auth:otp:verify', email, otp);\n  }\n\n  public verifyLoginOTP(email: string, otp: string, verificationToken: string): void {\n    if (this.socket?.connected) {\n      this.emit('auth:verify:loginOTP', email, otp, verificationToken);\n    } else {\n      this.httpverifyOTP(email, otp, verificationToken).subscribe((data: any) => this.handleOtpSuccess(data));\n    }\n  }\n\n  // Socket utility methods\n  public fromEvent<T>(eventName: string): Observable<T> {\n    try {\n      return fromEvent(this.socket, eventName) as Observable<T>;\n    } catch (error) {\n      console.error(`Error listening to event ${eventName}:`, error);\n      return of();\n    }\n  }\n\n  public emit(eventName: string, ...args: any[]): void {\n    if (this.socket?.connected) {\n      this.socket.emit(eventName, ...args);\n    } else {\n      console.warn(`Attempted to emit ${eventName} while disconnected`);\n      this.showToast('Connection lost. Trying to reconnect...', 2000, 'bottom', 'warning');\n      this.retryConnection();\n    }\n  }\n\n  openAuthUrl(data: { url: string }): void {\n    try {\n      if (!this.platform.is('cordova')) {\n        window.open(data.url, '_blank');\n        return;\n      }\n      this.inAppBrowser.create(data.url, '_blank');\n    } catch (error) {\n      console.error('Error opening browser:', error);\n    }\n  }\n\n  public connect(token?: string): void {\n    this.cleanupSocket();\n    this.socket.auth = {\n      token: token || localStorage.getItem('token')\n    }\n    this.socket.connect()\n  }\n\n  public disconnect(): void {\n    this.socket?.disconnect();\n  }\n}","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService {\n\n  constructor(\n    private toastCtrl: ToastController\n  ) { }\n\n\n  async presentToast(message: string, duration: number = 1000, position:any, color?: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration,\n      position,\n      color\n    });\n    toast.present();\n  }\n\n  async success(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration : 1000,\n      position : 'top',\n    });\n    toast.present();\n  }\n\n  async error(message: string) {\n    const toast = await this.toastCtrl.create({\n      message,\n      duration : 3000,\n      position : 'top',\n    });\n    toast.present();\n  }\n\n  async dismiss(){\n    const toast  = await this.toastCtrl.dismiss()\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../loader.service';\n\n@Component({\n  selector: 'app-user-setup',\n  templateUrl: './user-setup.page.html',\n  styleUrls: ['./user-setup.page.scss'],\n})\nexport class UserSetupPage implements OnInit {\n\n  constructor(private loader:LoaderService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<ion-content [fullscreen]=\"true\">\n    <div class=\"screen-container\">\n      <div class=\"form-card\">\n        <h1>Welcome to Quiz Platform</h1>\n        <p class=\"subtext\">\n          Choose an organization to join—your quiz‑master journey starts here.\n        </p>\n  \n        <div class=\"input-group select-wrapper\">\n          <label for=\"org-type\">Organization type</label>\n          <select id=\"org-type\">\n            <option value=\"\" disabled selected>Select organization...</option>\n            <option value=\"individual\">Individual</option>\n            <option value=\"business\">Business</option>\n            <option value=\"education\">Education</option>\n          </select>\n        </div>\n  \n        <div class=\"input-group select-wrapper\">\n          <label for=\"role-type\">Your role</label>\n          <select id=\"role-type\">\n            <option value=\"\" disabled selected>Select role...</option>\n            <option value=\"admin\">Admin</option>\n            <option value=\"student\">Student</option>\n          </select>\n        </div>\n  \n        <button class=\"primary-btn\">Continue</button>\n  \n        <div class=\"footer\">\n          <p>Signed in as ajitrajbhar.careermail.com</p>\n          <a href=\"#\" class=\"footer-link\">Use a different account</a>\n        </div>\n      </div>\n    </div>\n  </ion-content>\n  ","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { DashboardService, LeaderboardUser, user } from '../dashboard.service';\nimport { CreateQuizesService } from '../create-quizes.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  @Input() leaderboardUsers$: Observable<LeaderboardUser[]>;\n  @Input() ParentInjected: boolean = false;\n\n  constructor(\n    private dashboardService: DashboardService,\n    private quizService: CreateQuizesService,\n    private sanitizer: DomSanitizer,\n    private router:Router\n  ) {\n    this.leaderboardUsers$ = this.dashboardService.leaderboard$;\n  }\n\n\n  get currentUser(): user {\n    return this.dashboardService.getUser()\n  }\n\n  ngOnInit(): void {\n    let isLimitRoute = ['/home'].includes(this.router.url);\n    this.loadLeaderboardData(isLimitRoute ? 3 : 0)\n    this.quizService.isQuizesRefreshed.subscribe(data => {\n      if (data) {\n        this.loadLeaderboardData(3)\n      }\n    })\n  }\n\n\n  async ngOnDestroy() {\n    await this.dashboardService.getLeaderboardUser(3).toPromise();\n  }\n\n  protected async loadLeaderboardData(index:number) {\n    await this.dashboardService.getLeaderboardUser(index).toPromise();\n  }\n\n  makeSafeUrl(url: string): SafeUrl | string {\n    if (!url) {\n      return 'assets/user.png';\n    }\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  handleAvatarError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    img.src = 'assets/user.png';\n    img.onerror = null; // Prevent infinite loop\n  }\n\n  trackByUserId(index: number, user: LeaderboardUser): string {\n    return user.userId;\n  }\n}","<div [class]=\"ParentInjected ? 'section-n-padding' : 'section'\">\n  <div class=\"section-title\">\n    <h1>Leaderboard</h1>\n    <a *ngIf=\"ParentInjected\" (click)=\"loadLeaderboardData(0)\" routerLink=\"/users\" class=\"see-all-link\">\n      See all rankings <i class=\"fas fa-chevron-right\"></i>\n    </a>\n  </div>\n\n  <ng-container *ngIf=\"leaderboardUsers$ | async as leaderboardUsers; else leaderboardLoading\">\n    <div *ngIf=\"leaderboardUsers.length > 0; else emptyLeaderboard\">\n      <div class=\"leaderboard\">\n        <div class=\"leaderboard-item\" \n             *ngFor=\"let user of leaderboardUsers; trackBy: trackByUserId; let i = index\"\n             [class.rank-1]=\"i === 0\"\n             [class.rank-2]=\"i === 1\"\n             [class.rank-3]=\"i === 2\">\n          <div class=\"rank\">{{ i + 1 }}</div>\n          <div class=\"user-info\">\n            <img [src]=\"user.avatar\" crossorigin=\"anonymous\" (error)=\"handleAvatarError($event)\">\n            <div class=\"name\">{{ user.userId == currentUser._id ? 'You' : user.name}}</div>\n          </div>\n          <div class=\"points\">{{ user.points}} pts</div>\n          <i class=\"fas fa-crown crown {{ 'crown-' + (i+1)}}\" *ngIf=\"i < 2\"></i>\n        </div>\n      </div>\n    </div>\n\n\n    <ng-template #emptyLeaderboard>\n      <img src=\"assets/noQuizes.svg\" alt=\"\" srcset=\"\" loading=\"eager\">\n    </ng-template>\n  </ng-container>\n\n  <ng-template #leaderboardLoading>\n    <div class=\"ph-item\">\n      <div class=\"ph-col-12\">\n        <div class=\"ph-row\">\n          <div class=\"ph-col-12 big\"></div>\n          <div class=\"ph-col-12 big\"></div>\n          <div class=\"ph-col-12 big\"></div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CreateQuizesService, Quiz } from '../create-quizes.service';\nimport { ToasterService } from '../toaster.service';\nimport { Observable, BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { switchMap, tap, catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-verify-quiz',\n  templateUrl: './verify-quiz.component.html',\n  styleUrls: ['./verify-quiz.component.scss']\n})\nexport class VerifyQuizComponent implements OnInit {\n  private quizSubject = new BehaviorSubject<Quiz | null>(null);\n  quiz$: Observable<Quiz | null> = this.quizSubject.asObservable();\n  loadingStates: { [key: number]: boolean } = {};\n  isLoading = true;\n  rejecting = false;\n  approving = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private quizService: CreateQuizesService,\n    private toasterService: ToasterService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.pipe(\n      tap(() => this.isLoading = true),\n      switchMap(params => this.quizService.getQuiz(params['id'])),\n      tap(quiz => {\n        this.quizSubject.next(quiz);\n        this.isLoading = false;\n        // Initialize loading states\n        quiz.questions.forEach((_, index) => {\n          this.loadingStates[index] = false;\n        });\n      }),\n      catchError(err => {\n        this.isLoading = false;\n        this.toasterService.error('Failed to load quiz');\n        console.error('Error loading quiz', err);\n        return of(null);\n      })\n    ).subscribe();\n  }\n\n\n  isCorrectAnswer(questionIndex: number, option: string): boolean {\n    const question = this.quizSubject.value?.questions[questionIndex];\n    return question?.correctAnswer === option;\n  }\n  \n\n  getDifficultyColor(difficulty: string): string {\n    switch (difficulty.toLowerCase()) {\n      case 'easy': return 'success';\n      case 'medium': return 'warning';\n      case 'hard': return 'danger';\n      default: return 'primary';\n    }\n  }\n\n  refreshQuestion(quizId: string, index: number): void {\n    if (!quizId || this.loadingStates[index]) return;\n\n    this.loadingStates[index] = true;\n    \n    this.quizService.generateNewQuestion(quizId, index).pipe(\n      tap(newQuestion => {\n        const currentQuiz = this.quizSubject.value;\n        if (currentQuiz) {\n          const updatedQuestions:any = [...currentQuiz.questions];\n          updatedQuestions[index] = newQuestion;\n          this.quizSubject.next({\n            ...currentQuiz,\n            questions: updatedQuestions\n          });\n        }\n      }),\n      catchError(err => {\n        this.toasterService.error('Failed to refresh question');\n        console.error('Error refreshing question', err);\n        return of(null);\n      }),\n      tap(() => {\n        this.loadingStates[index] = false;\n      })\n    ).subscribe();\n  }\n\n  approveQuiz(quizId: string): void {\n    if (this.approving) return;\n    \n    this.approving = true;\n    this.quizService.updateQuizStatus(quizId, 'approved').pipe(\n      tap(() => {\n        this.toasterService.success('Quiz Approved');\n        // Refresh the quiz data after approval\n        return this.quizService.getQuiz(quizId);\n      }),\n      tap(updatedQuiz => {\n        this.quizSubject.next(updatedQuiz);\n        this.approving = false;\n      }),\n      catchError(err => {\n        this.approving = false;\n        this.toasterService.error('Approval failed');\n        console.error('Approval failed', err);\n        return of(null);\n      })\n    ).subscribe();\n  }\n\n  rejectQuiz(quizId: string): void {\n    if (this.rejecting) return;\n    \n    this.rejecting = true;\n    this.quizService.updateQuizStatus(quizId, 'rejected').pipe(\n      tap(() => {\n        this.toasterService.success('Quiz Rejected');\n        // Refresh the quiz data after rejection\n        return this.quizService.getQuiz(quizId);\n      }),\n      tap(updatedQuiz => {\n        this.quizSubject.next(updatedQuiz);\n        this.rejecting = false;\n      }),\n      catchError(err => {\n        this.rejecting = false;\n        this.toasterService.error('Rejection failed');\n        console.error('Rejection failed', err);\n        return of(null);\n      })\n    ).subscribe();\n  }\n\n  trackByQuestionId(index: number, question: any): string {\n    return question._id || index.toString();\n  }\n\n  getQuestionLoadingState(index: number): boolean {\n    return this.loadingStates[index] || false;\n  }\n}","<ion-content class=\"ion-padding\" [fullscreen]=\"true\">\n  <div *ngIf=\"(quiz$ | async) as quiz; else loading\" class=\"quiz-preview-container\">\n    <!-- Quiz Header -->\n    <div class=\"quiz-header\">\n   \n      <div class=\"quiz-meta\">\n        <span class=\"meta-item\">\n          <ion-icon name=\"time-outline\"></ion-icon>\n          {{ (quiz.estimatedTime / 60) | number : '1.2-2' }} min\n        </span>\n        <span class=\"meta-item\">\n          <ion-icon name=\"help-circle-outline\"></ion-icon>\n          {{ quiz.totalQuestions }} questions\n        </span>\n        <div class=\"quiz-meta\">\n          <span class=\"meta-item\">\n            <i class=\"fas fa-bolt\"></i>\n            {{quiz.totalPoints}} XP\n          </span>\n        </div>\n\n      </div>\n      \n    </div>\n\n    <!-- Quiz Title & Description -->\n    <div class=\"quiz-title\">{{ quiz.title }}  <ion-chip style=\"width: 110px;\" [color]=\"getDifficultyColor(quiz.difficulty)\" class=\"difficulty-badge\">\n      {{ quiz.difficulty | titlecase }}\n    </ion-chip></div>\n    <div class=\"quiz-description\">{{ quiz.description }}</div>\n\n    <!-- Questions Preview -->\n    <div class=\"section-title\">Questions Preview</div>\n    <div class=\"questions-preview\">\n      <div *ngFor=\"let question of quiz.questions; let i = index; trackBy: trackByQuestionId\" \n           class=\"question-card\">\n        <div class=\"question-header\">\n          <div class=\"question-number\">Question {{ i + 1 }}</div>\n          <button class=\"refresh-btn\" \n          *ngIf=\"quiz.approvalStatus == 'pending'\"\n                  (click)=\"refreshQuestion(quiz._id, i)\"\n                  [disabled]=\"getQuestionLoadingState(i)\">\n            <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M23 4V10H17M1 20V14H7M1 14C1.53043 14 2.03914 13.7893 2.41421 13.4142C2.78929 13.0391 3 12.5304 3 12C3 10.1435 3.7375 8.363 5.05025 7.05025C6.36301 5.7375 8.14348 5 10 5L13 5M23 10C22.4696 10 21.9609 10.2107 21.5858 10.5858C21.2107 10.9609 21 11.4696 21 12C21 13.8565 20.2625 15.637 18.9497 16.9497C17.637 18.2625 15.8565 19 14 19H11\" \n                    stroke=\"currentColor\" \n                    stroke-width=\"2\" \n                    stroke-linecap=\"round\" \n                    stroke-linejoin=\"round\"/>\n            </svg>\n            {{ getQuestionLoadingState(i) ? 'Refreshing...' : 'Refresh' }}\n          </button>\n        </div>\n\n        <!-- Question Content (shown when not loading) -->\n        <div *ngIf=\"!getQuestionLoadingState(i)\">\n          <div class=\"question-text\">{{ question.question }}</div>\n          \n          <div class=\"options-list\">\n            <div *ngFor=\"let option of question.options; let optIndex = index\" \n                 class=\"option-item\"\n                 [ngClass]=\"{\n                   'correct-answer': isCorrectAnswer(i, option)\n                 }\">\n              <div class=\"option-bullet\"></div>\n              <div class=\"option-text\">{{ option }}</div>\n            </div>\n          </div>\n          \n        </div>\n\n        <!-- Loading Placeholder (shown when refreshing) -->\n        <div *ngIf=\"getQuestionLoadingState(i)\" class=\"question-loading-placeholder\">\n          <div class=\"ph-item\">\n            <div class=\"ph-col-12\">\n              <div class=\"ph-picture\"></div>\n              <div class=\"ph-row\">\n                <div class=\"ph-col-6 big\"></div>\n                <div class=\"ph-col-4 big\"></div>\n                <div class=\"ph-col-2 big\"></div>\n                <div class=\"ph-col-4\"></div>\n                <div class=\"ph-col-8 empty\"></div>\n                <div class=\"ph-col-6\"></div>\n                <div class=\"ph-col-6 empty\"></div>\n                <div class=\"ph-col-12\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"quiz-actions\" *ngIf=\"quiz.approvalStatus == 'pending'\">\n      <button class=\"action-btn reject-btn\" \n              (click)=\"rejectQuiz(quiz._id)\"\n              [disabled]=\"rejecting\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M18 6L6 18M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        {{ rejecting ? 'Rejecting...' : 'Reject' }}\n      </button>\n      <button class=\"action-btn approve-btn\" \n              (click)=\"approveQuiz(quiz._id)\"\n              [disabled]=\"approving\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5 13L9 17L19 7\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        {{ approving ? 'Approving...' : 'Approve' }}\n      </button>\n    </div>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"ph-item\">\n      <div class=\"ph-col-12\">\n        <div class=\"ph-row\">\n          <div class=\"ph-col-6 big\"></div>\n          <div class=\"ph-col-4 big\"></div>\n          <div class=\"ph-col-2 big\"></div>\n        </div>\n        <div class=\"ph-row\">\n          <div class=\"ph-col-6 big\"></div>\n          <div class=\"ph-col-4 big\"></div>\n          <div class=\"ph-col-2 big\"></div>\n        </div>\n        <div class=\"ph-picture\"></div>\n        <div class=\"ph-row\">\n          <div class=\"ph-col-6 big\"></div>\n          <div class=\"ph-col-4 big\"></div>\n          <div class=\"ph-col-2 big\"></div>\n          <div class=\"ph-col-4\"></div>\n          <div class=\"ph-col-8 empty\"></div>\n          <div class=\"ph-col-6\"></div>\n          <div class=\"ph-col-6 empty\"></div>\n          <div class=\"ph-col-12\"></div>\n        </div>\n        <div class=\"ph-picture\"></div>\n        <div class=\"ph-row\">\n          <div class=\"ph-col-6 big\"></div>\n          <div class=\"ph-col-4 big\"></div>\n          <div class=\"ph-col-2 big\"></div>\n          <div class=\"ph-col-4\"></div>\n          <div class=\"ph-col-8 empty\"></div>\n          <div class=\"ph-col-6\"></div>\n          <div class=\"ph-col-6 empty\"></div>\n          <div class=\"ph-col-12\"></div>\n        </div>\n        <div class=\"ph-picture\"></div>\n      </div>\n    </div>\n  </ng-template>\n</ion-content>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n\n}\n","export const environment = {\n  apiURL : 'https://quiznewbackend.onrender.com',\n  production: true,\n  BannerAdId : 'ca-app-pub-4874253778737753/3116134419',\n  InterstitialAdsId : 'ca-app-pub-4874253778737753/5853978398',\n  RewardedVideoAddId : 'ca-app-pub-4874253778737753/9601651714'\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\n// Create and show loading element before bootstrapping\nconst loadingElement = document.createElement('div');\nloadingElement.innerHTML = `\n  <div style=\"\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  \">\n    <img src=\"assets/loading.gif\" alt=\"Loading...\" style=\"width: 80px; height: 80px;\">\n  </div>\n`;\ndocument.body.appendChild(loadingElement);\n\n// Bootstrap the application\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .then(() => {\n    // Remove loading element once app is initialized\n    document.body.removeChild(loadingElement);\n  })\n  .catch(err => {\n    console.log(err);\n    // Also remove loading element if there's an error\n    document.body.removeChild(loadingElement);\n  });","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t7518,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t1981,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t1603,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t2273,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t9642,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t2095,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t2335,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8221,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t7184,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t8759,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4248,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t9863,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t1769,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t2569,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-CKHMWxfe_js\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t6534,\n\t\t\"default-node_modules_ionic_core_dist_esm_data-CKHMWxfe_js\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t5458,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t654,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t6034,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input-otp.entry.js\": [\n\t\t381,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input-otp_entry_js\"\n\t],\n\t\"./ion-input-password-toggle.entry.js\": [\n\t\t5196,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input-password-toggle_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t761,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-be4gBvVY_js-node_modules_ionic_core_dist-a8d71f\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t6492,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t9557,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t8353,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t1024,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t9160,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t393,\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-option.entry.js\": [\n\t\t8442,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-option_entry_js\"\n\t],\n\t\"./ion-picker-column.entry.js\": [\n\t\t3110,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column_entry_js\"\n\t],\n\t\"./ion-picker.entry.js\": [\n\t\t5575,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t6772,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t4810,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t4639,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t628,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t852,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t1479,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4065,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t7971,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t3184,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment-content.entry.js\": [\n\t\t4312,\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-content_entry_js\"\n\t],\n\t\"./ion-segment-view.entry.js\": [\n\t\t4540,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment-view_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t469,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select-modal.entry.js\": [\n\t\t7101,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select-modal_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8471,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t388,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t2392,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t6059,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t5427,\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t198,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t1735,\n\t\t\"default-node_modules_ionic_core_dist_esm_input_utils-be4gBvVY_js-node_modules_ionic_core_dist-a8d71f\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t7510,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5297,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8996;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 4140;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["NotificationType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AlertPage_ng_container_13_ion_list_1_ion_item_sliding_1_Template_ion_item_click_1_listener","notification_r3","ɵɵrestoreView","_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","viewNotification","ɵɵelement","ɵɵtemplate","AlertPage_ng_container_13_ion_list_1_ion_item_sliding_1_ion_badge_11_Template","AlertPage_ng_container_13_ion_list_1_ion_item_sliding_1_Template_ion_item_option_click_13_listener","ɵɵadvance","ɵɵclassProp","isRead","ɵɵproperty","getNotificationIcon","getNotificationColor","type","ɵɵtextInterpolate","title","message","ɵɵpipeBind2","createdAt","IsToday_sDateWithTimezone","AlertPage_ng_container_13_ion_list_1_ion_item_sliding_1_Template","segmentValue","unreadNotifications","readNotifications","trackByNotificationId","AlertPage_ng_container_13_ng_template_2_p_4_Template","ɵɵelementContainerStart","AlertPage_ng_container_13_ion_list_1_Template","AlertPage_ng_container_13_ng_template_2_Template","ɵɵtemplateRefExtractor","length","emptyTemplate_r5","AlertPage","constructor","notificationService","router","loading","isLoadingNotification","ngOnInit","_this","_asyncToGenerator","loadNotifications","getAllNotifications","toPromise","date","timeZone","inputDate","Date","today","inputDateStr","toLocaleDateString","todayStr","_this2","setTimeout","notifications$","subscribe","allNotifications","filter","n","error","console","notification","icons","QUIZ_INVITATION","QUIZ_START","QUESTION_READY","QUIZ_ENDED","RESULTS_AVAILABLE","NEW_LEADER","ACHIEVEMENT_UNLOCKED","ADMIN_ANNOUNCEMENT","SYSTEM_ALERT","colors","navigateToactionUrl","actionUrl","_this3","markAsRead","_id","unshift","markAllAsRead","_this4","unreadIds","map","index","doRefresh","_this5","ɵɵdirectiveInject","i1","NotificationService","i2","Router","selectors","decls","vars","consts","template","AlertPage_Template","rf","ctx","ɵɵtwoWayListener","AlertPage_Template_ion_segment_ngModelChange_5_listener","$event","_r1","ɵɵtwoWayBindingSet","AlertPage_ng_container_13_Template","AlertPage_ng_template_14_Template","ɵɵtwoWayProperty","loadingTemplate_r6","PreloadAllModules","RouterModule","LoginPage","HomePage","CreatePage","DiscoverPage","ProfilePage","UserSetupPage","CategoriesPage","QuizesPage","authGuard","VerifyQuizComponent","UsersComponent","LiveQuizesComponent","OngoingComponent","QuizGuardService","HistoryComponent","routes","path","component","canActivate","redirectTo","pathMatch","canDeactivate","AppRoutingModule","forRoot","preloadingStrategy","useHash","imports","exports","NavigationEnd","AppComponent_div_2_Template_a_click_1_listener","ctx_r1","navigateTopage","AppComponent_div_2_Template_a_click_5_listener","AppComponent_div_2_Template_a_click_9_listener","AppComponent_div_2_Template_a_click_13_listener","AppComponent_div_2_Template_a_click_19_listener","ɵɵclassMapInterpolate1","currentRoute","AppComponent","socketService","showLoader","logged","events","pipe","event","url","window","scroll","top","left","behavior","localStorage","getItem","getUnreadNotificationsCount","count","page","navigate","authData$","data","notificationsCount$","SocketService","i3","AppComponent_Template","AppComponent_div_2_Template","AppComponent_app_loader_3_Template","APP_INITIALIZER","BrowserModule","RouteReuseStrategy","IonicModule","IonicRouteStrategy","LoaderComponent","CommonModule","GoogleadsService","FormsModule","HttpClientModule","WebService","LoaderService","InAppBrowser","library","fas","add","AppModule","bootstrap","provide","useFactory","socket","connect","deps","multi","useClass","declarations","inject","route","state","token","loginGuard","CategoriesPage_Template","BehaviorSubject","forkJoin","tap","CreateQuizesService","currentDraft","quizDraftSubject$","value","draftQuizzes","quizzesDraftSubject$","publishedQuizzes","quizzesPublishedSubject$","activeQuiz","activeQuizSubject$","toastr","quizzesParticipantsSubject$","liveQuizesSubject$","submittedQuizesSubject$","quizResultSubject$","refreshedQuizes$","isQuizesRefreshed","asObservable","getCurrentDraft$","getQuizesDraft$","getPublishedQuizes$","getActiveQuiz$","liveQuizes$","submittedQuizes$","getQuizResults$","getParticipants$","setupSocketListeners","initializeData","getAllQuiz","getActiveQuizes","getPublishedQuiz","on","next","quizes","quiz","updateQuizInState","quizId","removeQuizFromState","success","updatedQuiz","_this$activeQuiz","_this$currentDraft","currentDrafts","draftIndex","findIndex","q","updatedDrafts","currentPublished","publishedIndex","updatedPublished","_this$activeQuiz2","_this$currentDraft2","createQuiz","prompt","options","emit","fromEvent","limit","isLimitRoute","includes","quizzes","getSubmittedQuizes","getQuiz","getLiveQuiz","updateQuizStatus","approvalStatus","generateNewQuestion","deleteQuiz","BeginQuiz","joinQuiz","startQuiz","submitQuiz","completeQuizByHost","getQuizParticipant","submitAnswer","questionId","answer","Error","result","clearDraft","endActiveQuiz","findQuizById","id","find","ɵɵinject","ToasterService","factory","ɵfac","providedIn","combineLatest","CreatePage_button_7_Template_button_click_0_listener","cancelQuizGeneration","CreatePage_ng_container_12_div_1_div_6_button_21__svg_path_2_Template","CreatePage_ng_container_12_div_1_div_6_button_21__svg_path_3_Template","quiz_r3","ɵɵtextInterpolate1","CreatePage_ng_container_12_div_1_div_6_button_22_Template_button_click_0_listener","_r4","verifyQuiz","CreatePage_ng_container_12_div_1_div_6_button_23_Template_button_click_0_listener","_r5","CreatePage_ng_container_12_div_1_div_6_ion_chip_20_Template","CreatePage_ng_container_12_div_1_div_6_button_21_Template","CreatePage_ng_container_12_div_1_div_6_button_22_Template","CreatePage_ng_container_12_div_1_div_6_button_23_Template","description","estimatedTime","difficulty","totalQuestions","IsAdminTemplate","CreatePage_ng_container_12_div_1_ng_container_5_Template","CreatePage_ng_container_12_div_1_div_6_Template","isLoadingQuizzes","vm_r6","trackByQuizId","CreatePage_ng_container_12_div_1_Template","quizService","toasterService","quizPrompt","quizPromptDraft","isCreating","waitingMessage","loadingMessages","viewModel$","loadDraftQuizzes","_quiz$source","source","toLowerCase","validateQuizPrompt","prepareForQuizCreation","startLoadingAnimation","response","stopLoadingAnimation","handleCreationSuccess","err","handleCreationError","showSuccessMessage","resetPromptFields","trim","counter","maxMessages","intervalId","setInterval","clearInterval","queryParams","_err$error","i4","CreatePage_Template","CreatePage_Template_textarea_ngModelChange_6_listener","CreatePage_button_7_Template","CreatePage_Template_button_click_8_listener","CreatePage__svg_svg_9_Template","CreatePage__svg_svg_10_Template","CreatePage_ng_container_12_Template","CreatePage_Template_div_click_14_listener","tmp_1_0","ɵɵpipeBind1","ɵɵpureFunction0","_c0","Observable","ReplaySubject","UserStats","correctAnswers","points","quizzesCreated","quizzesHosted","rank","wrongAnswers","streak","current","longest","lastUpdated","LeaderboardUser","userId","name","avatar","DashboardService","userStatsSubject","getUserStats$","leaderboardSubject","leaderboard$","getDashboardStats","observer","subscription","stats","unsubscribe","getLeaderboardUser","leaderboard","getUser","JSON","parse","logout","removeItem","DiscoverPage_Template","AdmobAds","BannerPosition","BannerSize","environment","loadBannerAds","showBannerAd","adId","BannerAdId","isTesting","adSize","BANNER","adPosition","BOTTOM","loadInterstitialAd","InterstitialAdsId","showInterstitialAds","showInterstitialAd","loadRewardedVideoAd","RewardedVideoAddId","showloadRewardedVideoAds","showRewardedVideoAd","of","HistoryComponent_div_4_Template_input_ngModelChange_2_listener","searchQuery","HistoryComponent_div_4_Template_input_input_2_listener","filterQuizzes","HistoryComponent_div_5_div_1_Template_div_click_0_listener","category_r4","_r3","selectCategory","selectedCategory","ɵɵclassMap","icon","HistoryComponent_div_5_div_1_Template","categories","HistoryComponent_ng_container_6_ng_container_1_div_1_div_4_Template_div_click_0_listener","showDialog","HistoryComponent_ng_container_6_ng_container_1_div_1_div_4_Template_span_click_1_listener","quiz_r6","participantCount","userSubmissionStatus","status","HistoryComponent_ng_container_6_ng_container_1_div_1_div_4_Template","HistoryComponent_ng_container_6_ng_container_1_div_1_ion_chip_27_Template","totalPoints","isSubmitted","HistoryComponent_ng_container_6_ng_container_1_div_1_Template","quizzes_r7","HistoryComponent_ng_container_6_ng_container_1_Template","HistoryComponent_ng_container_6_ng_template_2_Template","noliveQuizzes_r8","i_r11","HistoryComponent_div_8_ng_container_12_div_1_div_2_Template_img_error_4_listener","_r10","handleAvatarError","HistoryComponent_div_8_ng_container_12_div_1_div_2_i_11_Template","user_r12","ɵɵsanitizeUrl","currentUser","score","HistoryComponent_div_8_ng_container_12_div_1_div_2_Template","leaderboardUsers_r13","participants","trackByUserId","HistoryComponent_div_8_ng_container_12_div_1_Template","HistoryComponent_div_8_ng_container_12_ng_template_2_Template","emptyLeaderboard_r14","HistoryComponent_div_8_img_19_Template_img_error_0_listener","_r15","tmp_3_0","quizParticipants$","host","HistoryComponent_div_8_Template_button_click_7_listener","_r9","closeDialog","HistoryComponent_div_8_ng_container_12_Template","HistoryComponent_div_8_ng_template_14_Template","HistoryComponent_div_8_img_19_Template","tmp_2_0","leaderboardLoading_r16","tmp_5_0","tmp_6_0","sanitizer","ParentInjected","openModel","email","role","isVerified","User","makeSafeUrl","filteredQuizzes$","loadInitialData","setupFiltering","applyFilters","_quiz$category","category","query","filtered","categoryId","authDataSource","bypassSecurityTrustUrl","avatarError","img","target","src","onerror","AuthData","user","ngOnDestroy","DomSanitizer","inputs","HistoryComponent_Template","HistoryComponent_div_4_Template","HistoryComponent_div_5_Template","HistoryComponent_ng_container_6_Template","HistoryComponent_div_8_Template","HistoryComponent_Template_div_click_9_listener","Subject","dashboardService","destroy$","searchQueryData","filterQuizesEvent","handleRefresh","complete","HomePage_Template","HomePage_Template_img_click_8_listener","HomePage_Template_img_error_8_listener","HomePage_Template_app_live_quizes_filterQuizes_9_listener","HomePage_Template_app_quizes_handleRefresh_10_listener","EventEmitter","LiveQuizesComponent_div_1_a_3_Template_a_click_0_listener","LiveQuizesComponent_div_1_a_3_Template","LiveQuizesComponent_i_5_Template_i_click_0_listener","LiveQuizesComponent_div_7_Template_div_click_0_listener","category_r5","LiveQuizesComponent_div_8_a_3_Template_a_click_0_listener","_r6","LiveQuizesComponent_div_8_a_3_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_div_11_Template_div_click_0_listener","_r7","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_div_11_Template_span_click_1_listener","quiz_r8","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_button_34_Template_button_click_0_listener","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_button_35_Template_button_click_0_listener","playQuiz","LiveQuizesComponent_ng_container_9_ng_container_1_div_1__svg_path_5_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1__svg_path_6_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1__svg_path_7_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_div_11_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_button_34_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_button_35_Template","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_ion_chip_36_Template","isParticipant","LiveQuizesComponent_ng_container_9_ng_container_1_div_1_Template","quizzes_r11","LiveQuizesComponent_ng_container_9_ng_container_1_Template","LiveQuizesComponent_ng_container_9_ng_template_2_Template","noactiveQuizzes_r12","LiveQuizesComponent_div_11_ng_container_12_div_1_div_2_Template_img_error_4_listener","_r14","LiveQuizesComponent_div_11_ng_container_12_div_1_div_2__svg_svg_9_Template","LiveQuizesComponent_div_11_ng_container_12_div_1_div_2__svg_svg_10_Template","i_r16","user_r15","LiveQuizesComponent_div_11_ng_container_12_div_1_div_2_Template","leaderboardUsers_r17","LiveQuizesComponent_div_11_ng_container_12_div_1_Template","LiveQuizesComponent_div_11_ng_container_12_ng_template_2_Template","emptyLeaderboard_r18","LiveQuizesComponent_div_11_img_19_Template_img_error_0_listener","_r19","LiveQuizesComponent_div_11_Template_button_click_7_listener","_r13","LiveQuizesComponent_div_11_ng_container_12_Template","LiveQuizesComponent_div_11_ng_template_14_Template","LiveQuizesComponent_div_11_img_19_Template","leaderboardLoading_r20","LiveQuizesComponent_div_12_Template_div_click_0_listener","_r21","filterQuizes","replaceUrl","i5","outputs","LiveQuizesComponent_Template","LiveQuizesComponent_div_1_Template","LiveQuizesComponent_Template_input_ngModelChange_4_listener","LiveQuizesComponent_Template_input_input_4_listener","LiveQuizesComponent_i_5_Template","LiveQuizesComponent_div_7_Template","LiveQuizesComponent_div_8_Template","LiveQuizesComponent_ng_container_9_Template","LiveQuizesComponent_div_11_Template","LiveQuizesComponent_div_12_Template","loaderSubject","loggedSubject","loggedState","loaderState$","hideLoader","LoaderComponent_Template","timer","takeUntil","LoginPage_input_31_Template_input_ngModelChange_0_listener","ctx_r2","loginForm","LoginPage_button_34_Template_button_click_0_listener","login","LoginPage_button_34_ion_icon_2_Template","LoginPage_button_34_ion_spinner_3_Template","isLoading","googleProgress","errorMessage","ɵɵsanitizeHtml","LoginPage_ng_template_50_div_10_Template_ion_button_click_2_listener","closeModal","LoginPage_ng_template_50_div_10_Template_ion_button_click_5_listener","retrySocialLogins","LoginPage_ng_template_50_div_1_Template","LoginPage_ng_template_50_div_2_Template","LoginPage_ng_template_50_div_3_Template","LoginPage_ng_template_50_h3_5_Template","LoginPage_ng_template_50_p_6_Template","LoginPage_ng_template_50_p_7_Template","LoginPage_ng_template_50_p_8_Template","LoginPage_ng_template_50_div_10_Template","authFailed","facebookProgress","LoginPage_ng_template_53_div_10_Template_ion_button_click_2_listener","LoginPage_ng_template_53_div_10_Template_ion_button_click_5_listener","LoginPage_ng_template_53_div_1_Template","LoginPage_ng_template_53_div_2_Template","LoginPage_ng_template_53_div_3_Template","LoginPage_ng_template_53_h3_5_Template","LoginPage_ng_template_53_p_6_Template","LoginPage_ng_template_53_p_7_Template","LoginPage_ng_template_53_p_8_Template","LoginPage_ng_template_53_div_10_Template","LoginPage_ng_template_56_div_11_Template_ion_button_click_2_listener","LoginPage_ng_template_56_div_11_Template_ion_button_click_5_listener","LoginPage_ng_template_56_div_11_Template","LoginPage_ng_template_59_div_1_p_13_Template_a_click_2_listener","resendOtp","formattedTimer","LoginPage_ng_template_59_div_1_p_14_Template_a_click_2_listener","LoginPage_ng_template_59_div_1_Template_input_ngModelChange_8_listener","_r8","otp","LoginPage_ng_template_59_div_1_Template_button_click_9_listener","verifyOTP","LoginPage_ng_template_59_div_1_ion_icon_11_Template","LoginPage_ng_template_59_div_1_ion_spinner_12_Template","LoginPage_ng_template_59_div_1_p_13_Template","LoginPage_ng_template_59_div_1_p_14_Template","canResendOtp","LoginPage_ng_template_59_div_0_Template","LoginPage_ng_template_59_div_1_Template","otpSuccess","showOtpModal","modalController","createQuizesService","errorModalStatus","continuewith","loginSuccess","connectionState","otpTimer","subscriptions","listenForSocialUrls","cleanup","push","url$","handleAuthSuccess","otpSuccess$","handleOtpSuccess","loginData$","handleLoginResponse","authError$","handleAuthError","resetAuthStates","handleSuccessfulLogin","otpDetails","showErrorModal","startOtpTimer","otpModal","present","onDidDismiss","resetForm","errorModal","presentToast","validateOtpForm","verifyLoginOTP","verificationToken","emailRegex","test","loginWithGoogle","googleModal","initiateGoogleLogin","loginWithFacebook","_this6","facebookModal","initiateFacebookLogin","stopOtpTimer","timerSubscription","undefined","minutes","Math","floor","seconds","toString","padStart","dismiss","_this7","_this8","cleanupSubscriptions","forEach","sub","focusInput","scrollToShowContent","inputElement","document","getElementById","focus","container","scrollContainer","nativeElement","buttonHeight","scrollTop","scrollHeight","clientHeight","ModalController","i6","viewQuery","LoginPage_Query","LoginPage_div_11_Template","LoginPage_Template_button_click_15_listener","LoginPage_Template_button_click_21_listener","LoginPage_Template_button_click_27_listener","LoginPage_span_30_Template","LoginPage_input_31_Template","LoginPage_div_32_Template","LoginPage_div_33_Template","LoginPage_button_34_Template","LoginPage_ng_template_50_Template","LoginPage_ng_template_53_Template","LoginPage_ng_template_56_Template","LoginPage_ng_template_59_Template","_c5","_c6","notificationSource$","notificationCountSource$","unreadCount$","notifications","showToastNotification","metadata","quizTitle","custom_data","inviterName","achievementName","alertMessage","sendNotification","recipientId","sendBroadcastNotification","notificationId","notificationIds","switchMap","catchError","take","App","OngoingComponent_div_1_div_33_div_7_div_5_i_1_Template","OngoingComponent_div_1_div_33_div_7_div_5_i_2_Template","ctx_r6","isCorrectAnswerToShow","option_r4","isOptionSelected","i_r5","isWrongAnswer","OngoingComponent_div_1_div_33_div_7_Template_div_click_0_listener","ngIf","resultPopup","selectOption","currentQuestion","OngoingComponent_div_1_div_33_div_7_div_2_Template","OngoingComponent_div_1_div_33_div_7_div_5_Template","ɵɵpureFunction4","viewAnswer","OngoingComponent_div_1_div_33_div_7_Template","ɵɵtextInterpolate2","currentQuestionIndex","questions","question","trackByOption","OngoingComponent_div_1_ng_container_38_Template_button_click_1_listener","nextQuestion","OngoingComponent_div_1_ng_template_39_Template_button_click_0_listener","OngoingComponent_div_1_div_33_Template","OngoingComponent_div_1_Template_button_click_35_listener","previousQuestion","OngoingComponent_div_1_ng_container_38_Template","OngoingComponent_div_1_ng_template_39_Template","formatTime","remainingTime","progressPercentage","ɵɵstyleProp","getQuestionLoadingState","submitSection_r11","OngoingComponent_div_5_Template_div_click_0_listener","_r12","stayInQuiz","OngoingComponent_div_5_Template_div_click_1_listener","stopPropagation","OngoingComponent_div_5_Template_button_click_8_listener","OngoingComponent_div_5_Template_button_click_10_listener","leaveQuiz","OngoingComponent_ng_container_6_div_1_Template_div_click_1_listener","OngoingComponent_ng_container_6_div_1_Template_button_click_23_listener","viewAnswers","OngoingComponent_ng_container_6_div_1_Template_button_click_25_listener","closeQuizWithoutSubmit","calculatePoints","quiz_r14","correctAnswersCount","OngoingComponent_ng_container_6_div_1_Template","quizSubject","getValue","location","cdr","quiz$","selectedOptions","isAdminUser","loadingStates","isQuizActive","deactivateSubject","confirmationPopup","setupBackButtonHandler","loadQuizData","params","applyShuffling","Array","fill","startTimer","shuffleQuestions","shuffleOptions","shuffleArray","correctAnswer","array","shuffled","currentIndex","temporaryValue","randomIndex","random","backButtonListener","addListener","canGoBack","handleBackButton","exitApp","onPopState","preventDefault","detectChanges","cleanupQuiz","remove","timerInterval","authData","unloadNotification","returnValue","pauseTimer","remainingSeconds","optionIndex","calculateCorrectAnswers","reduce","selectedOptionIndex","isCorrectAnswer","option","isSelected","isCorrect","trackByQuestionId","ActivatedRoute","Location","ChangeDetectorRef","hostBindings","OngoingComponent_HostBindings","OngoingComponent_popstate_HostBindingHandler","ɵɵresolveWindow","OngoingComponent_beforeunload_HostBindingHandler","OngoingComponent_div_1_Template","OngoingComponent_ng_template_3_Template","OngoingComponent_div_5_Template","OngoingComponent_ng_container_6_Template","loading_r15","Share","vm_r1","userStats","ProfilePage_ng_container_32_div_3_button_23__svg_path_2_Template","ProfilePage_ng_container_32_div_3_button_23__svg_path_3_Template","quiz_r2","ProfilePage_ng_container_32_div_3_button_24_Template_button_click_0_listener","ProfilePage_ng_container_32_div_3_button_25_Template_button_click_0_listener","ProfilePage_ng_container_32_div_3_div_4_Template","ProfilePage_ng_container_32_div_3_ion_chip_22_Template","ProfilePage_ng_container_32_div_3_button_23_Template","ProfilePage_ng_container_32_div_3_button_24_Template","ProfilePage_ng_container_32_div_3_button_25_Template","ProfilePage_ng_container_32_ng_container_2_Template","ProfilePage_ng_container_32_div_3_Template","activeTab","Promise","all","changeTab","tab","shareApp","appName","shareOptions","text","dialogTitle","share","ProfilePage_Template","ProfilePage_Template_img_error_4_listener","ProfilePage_div_5_Template","ProfilePage_div_10_Template","ProfilePage_Template_button_click_19_listener","ProfilePage_Template_div_click_28_listener","ProfilePage_Template_div_click_30_listener","ProfilePage_ng_container_32_Template","routeChangeSubject","routeChange$","QuizesPage_a_4_Template_a_click_0_listener","QuizesPage_div_5_i_3_Template_i_click_0_listener","QuizesPage_div_5_Template_input_ngModelChange_2_listener","QuizesPage_div_5_Template_input_input_2_listener","QuizesPage_div_5_i_3_Template","QuizesPage_div_6_div_1_Template_div_click_0_listener","category_r6","QuizesPage_div_6_div_1_Template","QuizesPage_ng_container_7_ng_container_1_div_1_button_28_Template_button_click_0_listener","QuizesPage_ng_container_7_ng_container_1_div_1_button_29_Template_button_click_0_listener","QuizesPage_ng_container_7_ng_container_1_div_1_button_30_Template_button_click_0_listener","QuizesPage_ng_container_7_ng_container_1_div_1_button_31_Template_button_click_0_listener","_r11","QuizesPage_ng_container_7_ng_container_1_div_1_button_32_Template_button_click_0_listener","QuizesPage_ng_container_7_ng_container_1_div_1_button_28_Template","QuizesPage_ng_container_7_ng_container_1_div_1_button_29_Template","QuizesPage_ng_container_7_ng_container_1_div_1_button_30_Template","QuizesPage_ng_container_7_ng_container_1_div_1_button_31_Template","QuizesPage_ng_container_7_ng_container_1_div_1_button_32_Template","isLive","QuizesPage_ng_container_7_ng_container_1_div_1_Template","quizzes_r13","QuizesPage_ng_container_7_ng_container_1_Template","QuizesPage_ng_container_7_ng_template_2_Template","noapublishedQuizzes_r14","publishedQuizes$","ngContentSelectors","QuizesPage_Template","QuizesPage_a_4_Template","QuizesPage_div_5_Template","QuizesPage_div_6_Template","QuizesPage_ng_container_7_Template","ɵɵprojection","QuizesPage_Template_div_click_10_listener","io","MAX_RECONNECTION_ATTEMPTS","BASE_RECONNECTION_DELAY","MAX_RECONNECTION_DELAY","http","inAppBrowser","platform","loginDataSource","otpDataSource","authErrorSource","connectionState$","connectionAttempts","urlSubject","initializeSocket","cleanupSocket","apiURL","transports","reconnection","autoConnect","auth","reconnectionDelay","calculateReconnectionDelay","reconnectionAttempts","forceNew","setupConnectionMonitoring","registerAuthEvents","registerUrlEvents","openAuthUrl","delay","min","pow","disconnect","log","reason","_this$socket","handleDisconnect","connected","handleConnectionError","showToast","handleUnauthorized","retryConnection","authEvents","handleLoginSuccess","bind","handleGoogleCallback","handleFacebookCallback","setItem","Object","entries","handler","persistAuthData","stringify","closeAllModals","topModal","getTop","duration","position","color","_this$socket2","userStr","parseError","warn","emitError","clear","cleanupAuthData","cleanupLoginData","cleanupOtpData","cleanupAuthErrors","cleanupConnectionState","cleanupUrlSubject","resetAllSubjects","register","payload","_this$socket3","httpLogin","post","httpverifyOTP","httpGoogleLogin","httpFacebookLogin","_this$socket4","code","_this$socket5","sendOTP","_this$socket6","eventName","args","_this$socket7","is","open","create","_this$socket8","HttpClient","Platform","toastCtrl","_x","toast","apply","arguments","ToastController","loader","UserSetupPage_Template","UsersComponent_a_4_Template_a_click_0_listener","loadLeaderboardData","i_r4","UsersComponent_ng_container_5_div_1_div_2_Template_img_error_4_listener","UsersComponent_ng_container_5_div_1_div_2_i_9_Template","user_r5","UsersComponent_ng_container_5_div_1_div_2_Template","leaderboardUsers_r6","UsersComponent_ng_container_5_div_1_Template","UsersComponent_ng_container_5_ng_template_2_Template","emptyLeaderboard_r7","leaderboardUsers$","UsersComponent_Template","UsersComponent_a_4_Template","UsersComponent_ng_container_5_Template","UsersComponent_ng_template_7_Template","leaderboardLoading_r8","VerifyQuizComponent_div_1_div_24_button_4_Template_button_click_0_listener","i_r2","refreshQuestion","ɵɵpureFunction1","option_r5","VerifyQuizComponent_div_1_div_24_div_5_div_4_Template","question_r6","VerifyQuizComponent_div_1_div_24_button_4_Template","VerifyQuizComponent_div_1_div_24_div_5_Template","VerifyQuizComponent_div_1_div_24_div_6_Template","VerifyQuizComponent_div_1_div_25_Template_button_click_1_listener","rejectQuiz","VerifyQuizComponent_div_1_div_25_Template_button_click_5_listener","approveQuiz","rejecting","approving","VerifyQuizComponent_div_1_div_24_Template","VerifyQuizComponent_div_1_div_25_Template","getDifficultyColor","_","questionIndex","_this$quizSubject$val","newQuestion","currentQuiz","updatedQuestions","VerifyQuizComponent_Template","VerifyQuizComponent_div_1_Template","VerifyQuizComponent_ng_template_3_Template","loading_r8","production","loadingElement","createElement","innerHTML","body","appendChild","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","then","removeChild","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[47,48]}
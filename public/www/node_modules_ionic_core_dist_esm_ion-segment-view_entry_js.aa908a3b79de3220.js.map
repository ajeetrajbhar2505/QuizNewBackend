{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-segment-view_entry_js.aa908a3b79de3220.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-segment-view.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, d as Host, g as getElement } from './index-4DxY6_gG.js';\nimport { i as isRTL } from './dir-C53feagD.js';\n\nconst segmentViewIosCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst segmentViewMdCss = \":host{display:-ms-flexbox;display:flex;height:100%;overflow-x:scroll;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;scrollbar-width:none;-ms-overflow-style:none}:host::-webkit-scrollbar{display:none}:host(.segment-view-disabled){-ms-touch-action:none;touch-action:none;overflow-x:hidden}:host(.segment-view-scroll-disabled){pointer-events:none}:host(.segment-view-disabled){opacity:0.3}\";\n\nconst SegmentView = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionSegmentViewScroll = createEvent(this, \"ionSegmentViewScroll\", 7);\n        this.scrollEndTimeout = null;\n        this.isTouching = false;\n        /**\n         * If `true`, the segment view cannot be interacted with.\n         */\n        this.disabled = false;\n    }\n    handleScroll(ev) {\n        var _a;\n        const { scrollLeft, scrollWidth, clientWidth } = ev.target;\n        const max = scrollWidth - clientWidth;\n        const scrollRatio = (isRTL(this.el) ? -1 : 1) * (scrollLeft / max);\n        this.ionSegmentViewScroll.emit({\n            scrollRatio,\n            isManualScroll: (_a = this.isManualScroll) !== null && _a !== void 0 ? _a : true,\n        });\n        // Reset the timeout to check for scroll end\n        this.resetScrollEndTimeout();\n    }\n    /**\n     * Handle touch start event to know when the user is actively dragging the segment view.\n     */\n    handleScrollStart() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.isTouching = true;\n    }\n    /**\n     * Handle touch end event to know when the user is no longer dragging the segment view.\n     */\n    handleTouchEnd() {\n        this.isTouching = false;\n    }\n    /**\n     * Reset the scroll end detection timer. This is called on every scroll event.\n     */\n    resetScrollEndTimeout() {\n        if (this.scrollEndTimeout) {\n            clearTimeout(this.scrollEndTimeout);\n            this.scrollEndTimeout = null;\n        }\n        this.scrollEndTimeout = setTimeout(() => {\n            this.checkForScrollEnd();\n        }, \n        // Setting this to a lower value may result in inconsistencies in behavior\n        // across browsers (particularly Firefox).\n        // Ideally, all of this logic is removed once the scroll end event is\n        // supported on all browsers (https://caniuse.com/?search=scrollend)\n        100);\n    }\n    /**\n     * Check if the scroll has ended and the user is not actively touching.\n     * If the conditions are met (active content is enabled and no active touch),\n     * reset the scroll position and emit the scroll end event.\n     */\n    checkForScrollEnd() {\n        // Only emit scroll end event if the active content is not disabled and\n        // the user is not touching the segment view\n        if (!this.isTouching) {\n            this.isManualScroll = undefined;\n        }\n    }\n    /**\n     * @internal\n     *\n     * This method is used to programmatically set the displayed segment content\n     * in the segment view. Calling this method will update the `value` of the\n     * corresponding segment button.\n     *\n     * @param id: The id of the segment content to display.\n     * @param smoothScroll: Whether to animate the scroll transition.\n     */\n    async setContent(id, smoothScroll = true) {\n        const contents = this.getSegmentContents();\n        const index = contents.findIndex((content) => content.id === id);\n        if (index === -1)\n            return;\n        this.isManualScroll = false;\n        this.resetScrollEndTimeout();\n        const contentWidth = this.el.offsetWidth;\n        const offset = index * contentWidth;\n        this.el.scrollTo({\n            top: 0,\n            left: (isRTL(this.el) ? -1 : 1) * offset,\n            behavior: smoothScroll ? 'smooth' : 'instant',\n        });\n    }\n    getSegmentContents() {\n        return Array.from(this.el.querySelectorAll('ion-segment-content'));\n    }\n    render() {\n        const { disabled, isManualScroll } = this;\n        return (h(Host, { key: 'e180b67bb3143a5f4611fb358c037be6fc782a8f', class: {\n                'segment-view-disabled': disabled,\n                'segment-view-scroll-disabled': isManualScroll === false,\n            } }, h(\"slot\", { key: '41c11d6a7406a10f5c64a2e73abfc072afd8fc73' })));\n    }\n    get el() { return getElement(this); }\n};\nSegmentView.style = {\n    ios: segmentViewIosCss,\n    md: segmentViewMdCss\n};\n\nexport { SegmentView as ion_segment_view };\n"],"names":["r","registerInstance","c","createEvent","h","d","Host","g","getElement","i","isRTL","segmentViewIosCss","segmentViewMdCss","SegmentView","constructor","hostRef","ionSegmentViewScroll","scrollEndTimeout","isTouching","disabled","handleScroll","ev","_a","scrollLeft","scrollWidth","clientWidth","target","max","scrollRatio","el","emit","isManualScroll","resetScrollEndTimeout","handleScrollStart","clearTimeout","handleTouchEnd","setTimeout","checkForScrollEnd","undefined","setContent","_x","_this","_asyncToGenerator","id","smoothScroll","contents","getSegmentContents","index","findIndex","content","contentWidth","offsetWidth","offset","scrollTo","top","left","behavior","apply","arguments","Array","from","querySelectorAll","render","key","class","style","ios","md","ion_segment_view"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}